<?php

/**
 * Generated by phpSPO model generator 2020-05-26T22:10:14+00:00 
 */
namespace Office365\Graph;

use Office365\Runtime\ClientObject;
use Office365\Runtime\ResourcePath;
class Windows10CompliancePolicy extends ClientObject
{
    /**
     * @return bool
     */
    public function getPasswordRequired()
    {
        if (!$this->isPropertyAvailable("PasswordRequired")) {
            return null;
        }
        return $this->getProperty("PasswordRequired");
    }
    /**
     * @var bool
     */
    public function setPasswordRequired($value)
    {
        $this->setProperty("PasswordRequired", $value, true);
    }
    /**
     * @return bool
     */
    public function getPasswordBlockSimple()
    {
        if (!$this->isPropertyAvailable("PasswordBlockSimple")) {
            return null;
        }
        return $this->getProperty("PasswordBlockSimple");
    }
    /**
     * @var bool
     */
    public function setPasswordBlockSimple($value)
    {
        $this->setProperty("PasswordBlockSimple", $value, true);
    }
    /**
     * @return bool
     */
    public function getPasswordRequiredToUnlockFromIdle()
    {
        if (!$this->isPropertyAvailable("PasswordRequiredToUnlockFromIdle")) {
            return null;
        }
        return $this->getProperty("PasswordRequiredToUnlockFromIdle");
    }
    /**
     * @var bool
     */
    public function setPasswordRequiredToUnlockFromIdle($value)
    {
        $this->setProperty("PasswordRequiredToUnlockFromIdle", $value, true);
    }
    /**
     * @return integer
     */
    public function getPasswordMinutesOfInactivityBeforeLock()
    {
        if (!$this->isPropertyAvailable("PasswordMinutesOfInactivityBeforeLock")) {
            return null;
        }
        return $this->getProperty("PasswordMinutesOfInactivityBeforeLock");
    }
    /**
     * @var integer
     */
    public function setPasswordMinutesOfInactivityBeforeLock($value)
    {
        $this->setProperty("PasswordMinutesOfInactivityBeforeLock", $value, true);
    }
    /**
     * @return integer
     */
    public function getPasswordExpirationDays()
    {
        if (!$this->isPropertyAvailable("PasswordExpirationDays")) {
            return null;
        }
        return $this->getProperty("PasswordExpirationDays");
    }
    /**
     * @var integer
     */
    public function setPasswordExpirationDays($value)
    {
        $this->setProperty("PasswordExpirationDays", $value, true);
    }
    /**
     * @return integer
     */
    public function getPasswordMinimumLength()
    {
        if (!$this->isPropertyAvailable("PasswordMinimumLength")) {
            return null;
        }
        return $this->getProperty("PasswordMinimumLength");
    }
    /**
     * @var integer
     */
    public function setPasswordMinimumLength($value)
    {
        $this->setProperty("PasswordMinimumLength", $value, true);
    }
    /**
     * @return integer
     */
    public function getPasswordMinimumCharacterSetCount()
    {
        if (!$this->isPropertyAvailable("PasswordMinimumCharacterSetCount")) {
            return null;
        }
        return $this->getProperty("PasswordMinimumCharacterSetCount");
    }
    /**
     * @var integer
     */
    public function setPasswordMinimumCharacterSetCount($value)
    {
        $this->setProperty("PasswordMinimumCharacterSetCount", $value, true);
    }
    /**
     * @return integer
     */
    public function getPasswordPreviousPasswordBlockCount()
    {
        if (!$this->isPropertyAvailable("PasswordPreviousPasswordBlockCount")) {
            return null;
        }
        return $this->getProperty("PasswordPreviousPasswordBlockCount");
    }
    /**
     * @var integer
     */
    public function setPasswordPreviousPasswordBlockCount($value)
    {
        $this->setProperty("PasswordPreviousPasswordBlockCount", $value, true);
    }
    /**
     * @return bool
     */
    public function getRequireHealthyDeviceReport()
    {
        if (!$this->isPropertyAvailable("RequireHealthyDeviceReport")) {
            return null;
        }
        return $this->getProperty("RequireHealthyDeviceReport");
    }
    /**
     * @var bool
     */
    public function setRequireHealthyDeviceReport($value)
    {
        $this->setProperty("RequireHealthyDeviceReport", $value, true);
    }
    /**
     * @return string
     */
    public function getOsMinimumVersion()
    {
        if (!$this->isPropertyAvailable("OsMinimumVersion")) {
            return null;
        }
        return $this->getProperty("OsMinimumVersion");
    }
    /**
     * @var string
     */
    public function setOsMinimumVersion($value)
    {
        $this->setProperty("OsMinimumVersion", $value, true);
    }
    /**
     * @return string
     */
    public function getOsMaximumVersion()
    {
        if (!$this->isPropertyAvailable("OsMaximumVersion")) {
            return null;
        }
        return $this->getProperty("OsMaximumVersion");
    }
    /**
     * @var string
     */
    public function setOsMaximumVersion($value)
    {
        $this->setProperty("OsMaximumVersion", $value, true);
    }
    /**
     * @return string
     */
    public function getMobileOsMinimumVersion()
    {
        if (!$this->isPropertyAvailable("MobileOsMinimumVersion")) {
            return null;
        }
        return $this->getProperty("MobileOsMinimumVersion");
    }
    /**
     * @var string
     */
    public function setMobileOsMinimumVersion($value)
    {
        $this->setProperty("MobileOsMinimumVersion", $value, true);
    }
    /**
     * @return string
     */
    public function getMobileOsMaximumVersion()
    {
        if (!$this->isPropertyAvailable("MobileOsMaximumVersion")) {
            return null;
        }
        return $this->getProperty("MobileOsMaximumVersion");
    }
    /**
     * @var string
     */
    public function setMobileOsMaximumVersion($value)
    {
        $this->setProperty("MobileOsMaximumVersion", $value, true);
    }
    /**
     * @return bool
     */
    public function getEarlyLaunchAntiMalwareDriverEnabled()
    {
        if (!$this->isPropertyAvailable("EarlyLaunchAntiMalwareDriverEnabled")) {
            return null;
        }
        return $this->getProperty("EarlyLaunchAntiMalwareDriverEnabled");
    }
    /**
     * @var bool
     */
    public function setEarlyLaunchAntiMalwareDriverEnabled($value)
    {
        $this->setProperty("EarlyLaunchAntiMalwareDriverEnabled", $value, true);
    }
    /**
     * @return bool
     */
    public function getBitLockerEnabled()
    {
        if (!$this->isPropertyAvailable("BitLockerEnabled")) {
            return null;
        }
        return $this->getProperty("BitLockerEnabled");
    }
    /**
     * @var bool
     */
    public function setBitLockerEnabled($value)
    {
        $this->setProperty("BitLockerEnabled", $value, true);
    }
    /**
     * @return bool
     */
    public function getSecureBootEnabled()
    {
        if (!$this->isPropertyAvailable("SecureBootEnabled")) {
            return null;
        }
        return $this->getProperty("SecureBootEnabled");
    }
    /**
     * @var bool
     */
    public function setSecureBootEnabled($value)
    {
        $this->setProperty("SecureBootEnabled", $value, true);
    }
    /**
     * @return bool
     */
    public function getCodeIntegrityEnabled()
    {
        if (!$this->isPropertyAvailable("CodeIntegrityEnabled")) {
            return null;
        }
        return $this->getProperty("CodeIntegrityEnabled");
    }
    /**
     * @var bool
     */
    public function setCodeIntegrityEnabled($value)
    {
        $this->setProperty("CodeIntegrityEnabled", $value, true);
    }
    /**
     * @return bool
     */
    public function getStorageRequireEncryption()
    {
        if (!$this->isPropertyAvailable("StorageRequireEncryption")) {
            return null;
        }
        return $this->getProperty("StorageRequireEncryption");
    }
    /**
     * @var bool
     */
    public function setStorageRequireEncryption($value)
    {
        $this->setProperty("StorageRequireEncryption", $value, true);
    }
}