<?php

/**
 * Generated by phpSPO model generator 2020-05-27T08:42:11+00:00 
 */
namespace Office365\Graph;

use Office365\Runtime\ClientObject;
use Office365\Runtime\ResourcePath;
class OnenoteSection extends ClientObject
{
    /**
     * @return bool
     */
    public function getIsDefault()
    {
        if (!$this->isPropertyAvailable("IsDefault")) {
            return null;
        }
        return $this->getProperty("IsDefault");
    }
    /**
     * @var bool
     */
    public function setIsDefault($value)
    {
        $this->setProperty("IsDefault", $value, true);
    }
    /**
     * @return string
     */
    public function getPagesUrl()
    {
        if (!$this->isPropertyAvailable("PagesUrl")) {
            return null;
        }
        return $this->getProperty("PagesUrl");
    }
    /**
     * @var string
     */
    public function setPagesUrl($value)
    {
        $this->setProperty("PagesUrl", $value, true);
    }
    /**
     * @return SectionLinks
     */
    public function getLinks()
    {
        if (!$this->isPropertyAvailable("Links")) {
            return null;
        }
        return $this->getProperty("Links");
    }
    /**
     * @var SectionLinks
     */
    public function setLinks($value)
    {
        $this->setProperty("Links", $value, true);
    }
    /**
     * @return Notebook
     */
    public function getParentNotebook()
    {
        if (!$this->isPropertyAvailable("ParentNotebook")) {
            $this->setProperty("ParentNotebook", new Notebook($this->getContext(), new ResourcePath("ParentNotebook", $this->getResourcePath())));
        }
        return $this->getProperty("ParentNotebook");
    }
    /**
     * @return SectionGroup
     */
    public function getParentSectionGroup()
    {
        if (!$this->isPropertyAvailable("ParentSectionGroup")) {
            $this->setProperty("ParentSectionGroup", new SectionGroup($this->getContext(), new ResourcePath("ParentSectionGroup", $this->getResourcePath())));
        }
        return $this->getProperty("ParentSectionGroup");
    }
    /**
     * @return OnenotePageCollection
     */
    public function getPages()
    {
        if (!$this->isPropertyAvailable("Pages")) {
            $this->setProperty("Pages", new OnenotePageCollection($this->getContext(), new ResourcePath("Pages", $this->getResourcePath())));
        }
        return $this->getProperty("Pages");
    }
}