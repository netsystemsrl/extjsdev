Ext.define("Ext.saki.state.HttpProvider",{extend:"Ext.state.Provider",alias:["state.saki-http","state.ux-http"],alternateClassName:"Ext.ux.state.HttpProvider",saveSuccessText:"Save Success",saveFailureText:"Save Failure",readSuccessText:"Read Success",readFailureText:"Read Failure",dataErrorText:"Data Error",delay:750,queue:[],dirty:false,started:false,autoStart:true,autoRead:false,user:"user",id:1,session:"session",logFailure:false,logSuccess:false,url:".",readUrl:undefined,saveUrl:undefined,method:"POST",paramNames:{id:"id",name:"name",value:"value",user:"user",session:"session",data:"data"},saveExtraParams:{},readExtraParams:{},constructor:function(){var a=this;a.saveExtraParams=a.saveBaseParams||a.saveExtraParams;a.readExtraParams=a.readBaseParams||a.readExtraParams;a.queue=[];a.callParent(arguments);if(a.autoRead){a.readState()}a.dt=new Ext.util.DelayedTask(a.saveState,a);if(a.autoStart){a.start()}},initState:function(b){var a=this;if(b instanceof Array){Ext.each(b,function(c){a.state[c[a.paramNames.name]]=a.decodeValue(c[a.paramNames.value])},a)}else{a.state=b||{}}},saveState:function(){var a=this,c={url:a.saveUrl||a.url,method:a.method,scope:a,success:a.onSaveSuccess,failure:a.onSaveFailure,queue:Ext.clone(a.queue),params:{}},b=Ext.apply({},a.saveExtraParams);if(!a.dirty){if(a.started){a.dt.delay(a.delay)}return}a.dt.cancel();b[a.paramNames.id]=a.id;b[a.paramNames.user]=a.user;b[a.paramNames.session]=a.session;b[a.paramNames.data]=Ext.encode(c.queue);Ext.apply(c.params,b);a.dirty=false;Ext.Ajax.request(c)},readState:function(){var a=this,c={url:a.readUrl||a.url,method:a.method,scope:a,success:a.onReadSuccess,failure:a.onReadFailure,params:{}},b=Ext.apply({},a.readExtraParams);b[a.paramNames.id]=a.id;b[a.paramNames.user]=a.user;b[a.paramNames.session]=a.session;Ext.apply(c.params,b);Ext.Ajax.request(c)},onReadFailure:function(a){var b=this;if(true===b.logFailure){b.log(b.readFailureText,a)}b.fireEvent("readfailure",b)},onReadSuccess:function(a){var b=this,f={},c;try{f=Ext.decode(a.responseText)}catch(d){if(true===b.logFailure){b.log(b.readFailureText,d,a)}return}if(true!==f.success){if(true===b.logFailure){b.log(b.readFailureText,f,a)}}else{c=f[b.paramNames.data];if(!(c instanceof Array)&&true===b.logFailure){b.log(b.dataErrorText,c,a);return}Ext.each(c,function(e){b.state[e[b.paramNames.name]]=b.decodeValue(e[b.paramNames.value])},b);b.queue=[];b.dirty=false;if(true===b.logSuccess){b.log(b.readSuccessText,c,a)}b.fireEvent("readsuccess",b)}},onSaveSuccess:function(c,m){var h=this,b={},a,k,f,d,l;try{b=Ext.decode(c.responseText)}catch(g){if(true===h.logFailure){h.log(h.saveFailureText,g,c)}h.dirty=true;return}if(true!==b.success){if(true===h.logFailure){h.log(h.saveFailureText,b,c)}h.dirty=true}else{Ext.each(m.queue,function(e){if(!e){return}a=e[h.paramNames.name];k=h.decodeValue(e[h.paramNames.value]);if(undefined===k||null===k){Ext.saki.state.HttpProvider.superclass.clear.call(h,a)}else{Ext.saki.state.HttpProvider.superclass.set.call(h,a,k)}},h);if(false===h.dirty){h.queue=[]}else{for(f=0;f<m.queue.length;f++){l=false;for(d=0;d<h.queue.length;d++){if(m.queue[f].name===h.queue[d].name){l=true;break}}if(true===l&&h.encodeValue(m.queue[f].value)===h.encodeValue(h.queue[d].value)){Ext.Array.remove(h.queue,h.queue[d])}}}if(true===h.logSuccess){h.log(h.saveSuccessText,b,c)}h.fireEvent("savesuccess",h)}},onSaveFailure:function(a){if(true===this.logFailure){this.log(this.saveFailureText,a)}this.dirty=true;this.fireEvent("savefailure",this)},start:function(){var a=this;a.dt.delay(a.delay);a.started=true},stop:function(){this.dt.cancel();this.started=false},set:function(a,b){if(!a){return}this.queueChange(a,b)},queueChange:function(b,f){var d=this,h={},c,e=false,a=this.state[b],g;for(c=0;c<d.queue.length;c++){if(d.queue[c].name===b){a=d.decodeValue(d.queue[c].value)}}g=undefined===a||Ext.encode(a)!==Ext.encode(f);if(g){h[d.paramNames.name]=b;h[d.paramNames.value]=d.encodeValue(f);for(c=0;c<d.queue.length;c++){if(d.queue[c].name===h.name){d.queue[c]=h;e=true}}if(false===e){d.queue.push(h)}d.dirty=true}if(d.started){d.start()}return g},clear:function(a){this.set(a,undefined)},isDirty:function(){return !!this.dirty},isStarted:function(){return !!this.started},log:function(){if(console){console.log.apply(console,arguments)}}});