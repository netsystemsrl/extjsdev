Ext.define('Ext.exporter.excel.PivotXlsx',{extend:'Ext.exporter.Base',alias:['exporter.pivotxlsx'],requires:['Ext.exporter.file.ooxml.Excel'],config:{titleStyle:{alignment:{horizontal:'Center',vertical:'Center'},font:{fontName:'Arial',family:'Swiss',size:18,color:'#1F497D'}},matrix:null,pivotTableStyle:{name:'PivotStyleMedium7'}},fileName:'export.xlsx',charset:'ascii',mimeType:'application/zip',binary:true,aggregateMap:{avg:'average',sum:'sum',count:'count',min:'min',max:'max',variance:'var',varianceP:'varp',stdDev:'stdDev',stdDevP:'stdDevp'},titleRowHeight:22.5,columnLabelsText:'Column Labels',rowLabelsText:'Row Labels',valuesText:'Values',totalText:'Total',grandTotalText:'Grand total',getContent:function(){var me=this,matrix=me.getMatrix(),excel,ws1,ws2,store,result;excel=new Ext.exporter.file.ooxml.Excel({properties:{title:me.getTitle(),author:me.getAuthor()}});store=matrix&&matrix.store;if(!matrix||!store||!store.isStore||store.isDestroyed){Ext.raise('No pivot matrix provided to the exporter or there is no store defined on the matrix');excel.addWorksheet({rows:[{cells:'Unable to export the pivot table since no raw data is available'}]});return excel.render();}
ws1=excel.addWorksheet();ws2=excel.addWorksheet();result=me.generateDataSheet({store:store,worksheet:ws2});me.generatePivotSheet({worksheet:ws1,data:result});result=excel.render();excel.destroy();return result;},generateDataSheet:function(params){var store=params.store,ws=params.worksheet,result;result=this.buildStoreRows(store);result.worksheet=ws;ws.beginRowRendering();ws.renderRows([result.fields]);ws.renderRows(result.rows);ws.endRowRendering();return result;},generatePivotSheet:function(params){var me=this,matrix=me._matrix,ws=params.worksheet,data=params.data;ws.beginRowRendering();me.generatePivotSheetTitle(ws);me.setupUniqueAggregateNames(data.fields);me.setupUniqueValues(matrix.aggregate,data.uniqueValues);me.setupUniqueValues(matrix.leftAxis.dimensions,data.uniqueValues);me.setupUniqueValues(matrix.topAxis.dimensions,data.uniqueValues);me.generatePivotSheetData(params);ws.endRowRendering();},generatePivotSheetTitle:function(ws){ws.renderRow({height:this.titleRowHeight,cells:[{mergeAcross:5,value:this.getTitle(),styleId:ws.getWorkbook().addCellStyle(this.getTitleStyle())}]});},generatePivotSheetData:function(params){var me=this,ws=params.worksheet;me.generatePivotConfig(params);me.generatePivotLocation(params);me.generatePivotDataFields(params);me.generatePivotFields(params);me.generatePivotRowFields(params);me.generatePivotColumnFields(params);ws.addPivotTable(params.pivotConfig);},generatePivotConfig:function(params){var matrix=this._matrix,data=params.data,dataWs=data.worksheet,countLeft=matrix.leftAxis.dimensions.items.length,pivotConfig;pivotConfig=params.pivotConfig={grandTotalCaption:matrix.textGrandTotalTpl,location:{ref:'',firstHeaderRow:1,firstDataRow:1,firstDataCol:1},cacheDefinition:{cacheSource:{worksheetSource:{ref:dataWs.getTopLeftRef()+':'+dataWs.getBottomRightRef(),sheet:dataWs.getName()}},cacheFields:[],cacheRecords:{items:data.cache}},pivotTableStyleInfo:this.getPivotTableStyle(),pivotFields:[],rowFields:[],colFields:[],dataFields:[],rowItems:[],colItems:[]};pivotConfig.rowHeaderCaption=this.rowLabelsText;pivotConfig.colHeaderCaption=this.columnLabelsText;pivotConfig.viewLayoutType=matrix.viewLayoutType;},generatePivotLocation:function(params){var me=this,matrix=me._matrix,ws=params.worksheet,location=params.pivotConfig.location,uniqueValues=params.data.uniqueValues,countAgg=matrix.aggregate.items.length,countLeft=matrix.leftAxis.dimensions.items.length,countTop=matrix.topAxis.dimensions.items.length,result,i,j,len,length,row,item,ref;params.header=[];params.body=[];params.totals=[];params.dataIndexes=[];params.columns=[];if(countLeft===0&&countTop===0){if(countAgg===0){me.generatePivotDataEmpty(params);}else{me.generatePivotDataAgg(params);}}else{location.firstDataRow+=countTop+(countAgg>1?1:0);location.firstDataCol=1;location.firstHeaderRow=1;me.generatePivotHeader(params);if(countAgg===0){if(countTop&&countLeft){me.generatePivotDataLeftTopAgg(params);}else if(countLeft){me.generatePivotDataLeft(params);}else{me.generatePivotDataTop(params);}}else{if(countTop&&countLeft){me.generatePivotDataLeftTopAgg(params);}else if(countLeft){me.generatePivotDataLeftAgg(params);}else{me.generatePivotDataTopAgg(params);}}
me.generatePivotBody(params);me.generatePivotRowTotals(params);}
me.generatePivotData(params);},generatePivotDataEmpty:function(params){var i;params.header.push({cells:[null,null,null]});for(i=0;i<17;i++){params.header.push({cells:[null,null,null]});}},generatePivotDataAgg:function(params){var matrix=this._matrix,location=params.pivotConfig.location,countAgg=matrix.aggregate.items.length,ref1,ref2,i,row,row2,record,item;row={cells:[{value:null}]};row2={cells:[{value:this.totalText}]};params.header.push(row,row2);for(i=0;i<countAgg;i++){item=matrix.aggregate.items[i];row.cells.push({value:item.excelName});record=matrix.results.items.map[matrix.grandTotalKey+'/'+matrix.grandTotalKey];row2.cells.push({value:record?record.values[item.id]:null});}
if(countAgg>1){location.firstHeaderRow=0;}},generatePivotDataLeftTopAgg:function(params){var matrix=this._matrix,pivotConfig=params.pivotConfig,location=pivotConfig.location,layout=pivotConfig.viewLayoutType,countAgg=matrix.aggregate.items.length,countLeft=matrix.leftAxis.dimensions.items.length,countTop=matrix.topAxis.dimensions.items.length,dataIndexes=params.dataIndexes,rows=params.header,row=rows[0],len=rows.length,i,j,item;for(i=0;i<len;i++){if(layout==='compact'){Ext.Array.insert(rows[i].cells,0,[{value:i===len-1?this.rowLabelsText:(i===0&&countAgg===1?matrix.aggregate.items[0].excelName:null)}]);}else{for(j=0;j<countLeft;j++){if(i===0&&j===0&&countAgg===1){item={value:matrix.aggregate.items[0].excelName};}else{item={value:i===len-1?matrix.leftAxis.dimensions.items[j].dataIndex:null};}
Ext.Array.insert(rows[i].cells,j,[item]);}}}
if(layout==='compact'){row.cells.push({value:this.columnLabelsText});Ext.Array.insert(dataIndexes,0,[{aggregate:false,dataIndex:matrix.compactViewKey}]);}else{for(i=0;i<countLeft;i++){Ext.Array.insert(dataIndexes,i,[{aggregate:false,dataIndex:matrix.leftAxis.dimensions.items[i].id}]);}
for(i=0;i<countTop;i++){row.cells.push({value:matrix.topAxis.dimensions.items[i].dataIndex});}
if(countAgg>1){row.cells.push({value:this.valuesText});}}
this.generatePivotColTotals(params,rows[1]);location.firstDataCol=(layout==='compact'?1:countLeft);},generatePivotDataLeftTop:function(params){var matrix=this._matrix,pivotConfig=params.pivotConfig,location=pivotConfig.location,layout=pivotConfig.viewLayoutType,countLeft=matrix.leftAxis.dimensions.items.length,countTop=matrix.topAxis.dimensions.items.length,dataIndexes=params.dataIndexes,rows=params.header,row=rows[0],len=rows.length,i,j;for(i=0;i<len;i++){if(layout==='compact'){Ext.Array.insert(rows[i].cells,0,[{value:i===len-1?this.rowLabelsText:null}]);}else{for(j=0;j<countLeft;j++){Ext.Array.insert(rows[i].cells,j,[{value:i===len-1?matrix.leftAxis.dimensions.items[j].dataIndex:null}]);}}}
if(layout==='compact'){row.cells.push({value:this.columnLabelsText});Ext.Array.insert(dataIndexes,0,[{aggregate:false,dataIndex:matrix.compactViewKey}]);}else{for(i=0;i<countLeft;i++){Ext.Array.insert(dataIndexes,i,[{aggregate:false,dataIndex:matrix.leftAxis.dimensions.items[i].id}]);}
for(i=0;i<countTop;i++){row.cells.push({value:matrix.topAxis.dimensions.items[i].dataIndex});}}
this.generatePivotColTotals(params,rows[1]);location.firstDataCol=(layout==='compact'?1:countLeft);},generatePivotDataLeftAgg:function(params){var matrix=this._matrix,pivotConfig=params.pivotConfig,location=pivotConfig.location,layout=pivotConfig.viewLayoutType,countAgg=matrix.aggregate.items.length,countLeft=matrix.leftAxis.dimensions.items.length,dataIndexes=params.dataIndexes,row=params.header[0],i,item;if(layout==='compact'){row.cells.push({value:this.rowLabelsText});dataIndexes.push({aggregate:false,dataIndex:matrix.compactViewKey});}else{for(i=0;i<countLeft;i++){item=matrix.leftAxis.dimensions.items[i];row.cells.push({value:item.dataIndex});dataIndexes.push({aggregate:false,dataIndex:item.id});}}
this.generatePivotColTotals(params,row);location.firstHeaderRow=countAgg>1?0:1;location.firstDataRow=1;location.firstDataCol=(layout==='compact'?1:countLeft);},generatePivotDataLeft:function(params){var matrix=this._matrix,pivotConfig=params.pivotConfig,location=pivotConfig.location,layout=pivotConfig.viewLayoutType,countLeft=matrix.leftAxis.dimensions.items.length,row=params.header[0],dataIndexes=params.dataIndexes,i,item;if(layout==='compact'){row.cells.push({value:this.rowLabelsText});dataIndexes.push({aggregate:false,dataIndex:matrix.compactViewKey});}else{for(i=0;i<countLeft;i++){item=matrix.leftAxis.dimensions.items[i];row.cells.push({value:item.dataIndex});dataIndexes.push({aggregate:false,dataIndex:item.id});}}
dataIndexes.push({aggregate:false});location.firstDataCol=(layout==='compact'?1:countLeft);},generatePivotDataTopAgg:function(params){var matrix=this._matrix,pivotConfig=params.pivotConfig,layout=pivotConfig.viewLayoutType,countAgg=matrix.aggregate.items.length,countTop=matrix.topAxis.dimensions.items.length,dataIndexes=params.dataIndexes,rows=params.header,row=rows[0],len=rows.length,i;for(i=0;i<len;i++){Ext.Array.insert(rows[i].cells,0,[{value:countAgg===1&&i===0?matrix.aggregate.items[0].excelName:null}]);}
Ext.Array.insert(dataIndexes,0,[{aggregate:false,dataIndex:layout==='compact'?matrix.compactViewKey:''}]);if(layout==='compact'){row.cells.push({value:this.columnLabelsText});}else{for(i=0;i<countTop;i++){row.cells.push({value:matrix.topAxis.dimensions.items[i].dataIndex});}
if(countAgg>1){row.cells.push({value:this.valuesText});}}
this.generatePivotColTotals(params,rows[1]);},generatePivotDataTop:function(params){var matrix=this._matrix,pivotConfig=params.pivotConfig,location=pivotConfig.location,layout=pivotConfig.viewLayoutType,countTop=matrix.topAxis.dimensions.items.length,dataIndexes=params.dataIndexes,rows=params.header,row=rows[0],len=rows.length,i;Ext.Array.insert(dataIndexes,0,[{aggregate:false,dataIndex:layout==='compact'?matrix.compactViewKey:''}]);for(i=0;i<len;i++){Ext.Array.insert(rows[i].cells,0,[{value:null}]);}
if(layout==='compact'){row.cells.push({value:this.columnLabelsText});}else{for(i=0;i<countTop;i++){row.cells.push({value:matrix.topAxis.dimensions.items[i].dataIndex});}}
this.generatePivotColTotals(params,rows[1]);location.firstDataCol=1;location.firstDataRow=countTop+1;},generatePivotHeader:function(params){var me=this,columns=params.columns,rows,i,j,len,length,item,row;me.generateTopAxisColumns(params,-1);rows=params.header;rows.push({cells:[]});len=columns.length;for(i=0;i<len;i++){row={cells:[]};item=columns[i];length=item.length;for(j=0;j<length;j++){row.cells.push({value:item[j].value});}
rows.push(row);}
if(len){params.pivotConfig.colItems=Ext.Array.pluck(columns[len-1],'colItem');params.dataIndexes=columns[len-1];}},generatePivotBody:function(params,items){var matrix=this._matrix,i,len;if(!items){items=matrix.leftAxis.getTree();}
len=items.length;for(i=0;i<len;i++){this.generatePivotBodyItem(params,items[i]);}},generatePivotBodyItem:function(params,item){var matrix=this._matrix,ws=params.worksheet,uniqueValues=params.data.uniqueValues,columns=params.dataIndexes,length=columns.length,layout=params.pivotConfig.viewLayoutType,rows=params.body,rowItems=params.pivotConfig.rowItems,i,col,cell,result,rowItem,row,level;rowItem={r:item.level,x:[Ext.Array.indexOf(uniqueValues[item.dimension.dataIndex],item.value)]};row={cells:[]};for(i=0;i<length;i++){col=columns[i];cell={value:null};if(col.aggregate){result=matrix.results.items.map[item.key+'/'+col.key];cell.value=result?result.values[col.dataIndex]:null;}else if(col.dataIndex===item.dimensionId){cell.value=item.value;}else if(layout==='compact'&&col.dataIndex===matrix.compactViewKey){params.styles=params.styles||{};level='level'+item.level;params.styles[level]=params.styles[level]||ws.getWorkbook().addCellStyle({alignment:{horizontal:'left',indent:item.level*2}});cell.styleId=params.styles[level];cell.value=item.value;}
row.cells.push(cell);}
rowItems.push(rowItem);rows.push(row);if(item.children){if(layout==='tabular'){this.generatePivotBodyTabularItem(params,item,item);}else{this.generatePivotBody(params,item.children);}}},generatePivotBodyTabularItem:function(params,item){var matrix=this._matrix,uniqueValues=params.data.uniqueValues,items=item.children,len=items.length,columns=params.dataIndexes,length=columns.length,rows=params.body,cells=rows[rows.length-1].cells,rowItems=params.pivotConfig.rowItems,rowItem=rowItems[rowItems.length-1],i,j,col,cell,result,group;for(i=0;i<len;i++){group=items[i];if(i===0){rowItem.x.push(Ext.Array.indexOf(uniqueValues[group.dimension.dataIndex],group.value));for(j=0;j<length;j++){col=columns[j];cell=cells[j];if(col.aggregate){result=matrix.results.items.map[group.key+'/'+col.key];cell.value=result?result.values[col.dataIndex]:null;}else if(col.dataIndex===group.dimensionId){cell.value=group.value;}}
if(group.children){this.generatePivotBodyTabularItem(params,group);}}else{this.generatePivotBodyItem(params,group);}}
rowItems.push({r:item.level,t:'default',x:[Ext.Array.indexOf(uniqueValues[item.dimension.dataIndex],item.value)]});cells=[];for(j=0;j<length;j++){col=columns[j];cell={value:null};if(col.aggregate){result=matrix.results.items.map[item.key+'/'+col.key];cell.value=result?result.values[col.dataIndex]:null;}else if(col.dataIndex===item.dimensionId){cell.value=item.data[col.dataIndex]+' '+this.totalText;}
cells.push(cell);}
rows.push({cells:cells});},generatePivotRowTotals:function(params){var matrix=this._matrix,countAgg=matrix.aggregate.items.length,countLeft=matrix.leftAxis.dimensions.items.length,columns=params.dataIndexes,length=columns.length,rows=params.totals,cells=[],rowItems=params.pivotConfig.rowItems,i,j,len,item,col,cell,result;for(j=0;j<length;j++){col=columns[j];cell={value:null};if(j===0){cell.value=countLeft?this.grandTotalText:(countAgg?this.totalText:null);}else if(col.aggregate){result=matrix.results.items.map[matrix.grandTotalKey+'/'+col.key];cell.value=result?result.values[col.dataIndex]:null;}
cells.push(cell);}
rows.push({cells:cells});rowItems.push({t:'grand',x:0});},generatePivotColTotals:function(params,row){var matrix=this._matrix,colItems=params.pivotConfig.colItems,dataIndexes=params.dataIndexes,aggregates=matrix.aggregate.items,countAgg=matrix.aggregate.items.length,countTop=matrix.topAxis.dimensions.items.length,i,item;if(countTop===0){for(i=0;i<countAgg;i++){item=aggregates[i];row.cells.push({value:item.excelName});dataIndexes.push({aggregate:true,key:matrix.grandTotalKey,dataIndex:item.id});colItems.push({t:'grand',i:i,x:0});}}else{if(countAgg<=1){row.cells.push({value:this.grandTotalText});dataIndexes.push({aggregate:true,key:matrix.grandTotalKey,dataIndex:countAgg?aggregates[0].id:''});colItems.push({t:'grand',x:0});}else{for(i=0;i<countAgg;i++){item=aggregates[i];row.cells.push({value:this.totalText+' '+item.excelName});dataIndexes.push({aggregate:true,key:matrix.grandTotalKey,dataIndex:item.id});colItems.push({t:'grand',i:i,x:0});}}}},generatePivotData:function(params){var ws=params.worksheet,location=params.pivotConfig.location,len,i,ref;len=params.header.length;for(i=0;i<len;i++){ref=ws.renderRow(params.header[i]);if(i===0){location.ref=ref.first+':';}}
ws.renderRows(params.body);ws.renderRows(params.totals);location.ref+=ws.getBottomRightRef();},generatePivotDataFields:function(params){var matrix=this._matrix,fields=params.data.fields,aggMap=this.aggregateMap,countAgg=matrix.aggregate.items.length,i,dimension;for(i=0;i<countAgg;i++){dimension=matrix.aggregate.items[i];params.pivotConfig.dataFields.push({name:dimension.excelName,fld:Ext.Array.indexOf(fields,dimension.dataIndex),subtotal:aggMap[dimension.aggregator]||'sum',baseField:0,baseItem:0});}},generatePivotFields:function(params){var me=this,matrix=me._matrix,data=params.data,fields=data.fields,uniqueValues=data.uniqueValues,countAgg=matrix.aggregate.items.length,i,j,len,length,field,item,dimension;len=fields.length;for(i=0;i<len;i++){field=fields[i];item={showAll:false};for(j=0;j<countAgg;j++){dimension=matrix.aggregate.items[j];if(dimension.dataIndex===field){item.dataField=true;break;}}
if(dimension=me.getDimension(matrix.aggregate,field)){}
else if(dimension=me.getDimension(matrix.leftAxis.dimensions,field)){item.axis='axisRow';if(dimension.getSortable()){item.sortType=(dimension.direction==='ASC'?'ascending':'descending');}else{item.sortType='manual';}}else if(dimension=me.getDimension(matrix.topAxis.dimensions,field)){item.axis='axisCol';if(dimension.getSortable()){item.sortType=(dimension.direction==='ASC'?'ascending':'descending');}else{item.sortType='manual';}}
if(dimension){item.items=[];length=uniqueValues[field].length;for(j=0;j<length;j++){item.items.push({x:j});}
item.items.push({t:'default'});}
params.pivotConfig.cacheDefinition.cacheFields.push({name:field,sharedItems:{items:dimension&&!dimension.isAggregate?uniqueValues[field]:[]}});params.pivotConfig.pivotFields.push(item);}},generatePivotRowFields:function(params){var matrix=this._matrix,fields=params.data.fields,countLeft=matrix.leftAxis.dimensions.items.length,i;for(i=0;i<countLeft;i++){params.pivotConfig.rowFields.push({x:Ext.Array.indexOf(fields,matrix.leftAxis.dimensions.items[i].dataIndex)});}},generatePivotColumnFields:function(params){var matrix=this._matrix,fields=params.data.fields,countAgg=matrix.aggregate.items.length,countTop=matrix.topAxis.dimensions.items.length,i;for(i=0;i<countTop;i++){params.pivotConfig.colFields.push({x:Ext.Array.indexOf(fields,matrix.topAxis.dimensions.items[i].dataIndex)});}
if(countAgg>1){params.pivotConfig.colFields.push({x:-2});}},buildStoreRows:function(store){var result={rows:[],cache:[],fields:[],uniqueValues:{}},fields,i,j,len,length,field,row,record,item,cache;fields=store.model.getFields();len=fields.length;for(i=0;i<len;i++){field=fields[i].getName();result.fields.push(field);result.uniqueValues[field]=[];}
length=store.data.length;for(i=0;i<length;i++){row=[];cache=[];record=store.data.items[i];for(j=0;j<len;j++){field=result.fields[j];item=record.get(field);row.push({value:item});cache.push(item);if(Ext.Array.indexOf(result.uniqueValues[field],item)===-1){result.uniqueValues[field].push(item);}}
result.rows.push(row);result.cache.push(cache);}
return result;},setupUniqueAggregateNames:function(fields){var aggregates=this._matrix.aggregate,len=aggregates.getCount(),length=fields.length,data=[],index,i,j,agg,name,temp;for(i=0;i<len;i++){agg=aggregates.getAt(i);name=agg.dataIndex||agg.header;temp=name;index=2;for(j=0;j<length;j++){if(String(temp).toLowerCase()===String(fields[j]).toLowerCase()||Ext.Array.indexOf(data,temp)>=0){temp=name+index;index++;j=-1;}}
data.push(temp);agg.excelName=temp;}},setupUniqueValues:function(dimensions,uniqueValues){var items=dimensions.items,len=items.length,i,item;for(i=0;i<len;i++){item=items[i];uniqueValues[item.dataIndex]=Ext.Array.pluck(item.values.items,'value');}},getDimension:function(collection,name){var index=collection.findIndex('dataIndex',name,0,false,true);return index>=0?collection.getAt(index):null;},generateTopAxisColumns:function(params,colIndex,items){var matrix=this._matrix,uniqueValues=params.data.uniqueValues,columns=params.columns,aggregates=matrix.aggregate.items,ret=[],i,j,k,len,length,levels,item,agg,col,level,obj,result,index;if(!items){items=matrix.topAxis.getTree();}
len=items.length;length=aggregates.length;for(i=0;i<len;i++){item=items[i];index=Ext.Array.indexOf(uniqueValues[item.dimension.dataIndex],item.value);level=item.level;columns[level]=columns[level]||[];col={value:item.value==null?'(blank)':item.value,index:index};columns[level].push(col);if(item.children){result=this.generateTopAxisColumns(params,colIndex,item.children);levels=result.length;for(j=1;j<levels;j++){columns[level].push({value:'',empty:true});}
for(j=0;j<length;j++){agg=aggregates[j];obj={value:col.value+' '+(agg.excelName)};columns[level].push(obj);result.push(obj);levels=columns.length;for(k=level+1;k<levels;k++){if(k===levels-1){columns[k].push({aggregate:true,value:'',key:item.key,dataIndex:agg.id,colItem:{t:'default',i:j,x:index}});}else{columns[k].push({value:'',empty:true});}}}
Ext.Array.insert(ret,ret.length,result);colIndex+=result.length;}else{if(length<=1){ret.push(col);colIndex++;col.aggregate=true;col.colItem=this.getColItem(colIndex,0,columns);}
if(length===1){col.key=item.key;col.dataIndex=aggregates[0].id;}else if(length>1){level++;columns[level]=columns[level]||[];for(j=0;j<length;j++){agg=aggregates[j];colIndex++;obj={aggregate:true,value:agg.excelName,index:j,key:item.key,dataIndex:agg.id};columns[level].push(obj);obj.colItem=this.getColItem(colIndex,j,columns);ret.push(obj);if(j>0){columns[level-1].push({value:'',empty:true});}}}}}
return ret;},getColItem:function(colIndex,aggIndex,columns){var colItem={i:aggIndex},r=0,x=[],len=columns.length,i,col;for(i=0;i<len;i++){col=columns[i][colIndex];if(col){if(!col.empty){x.push(col.index);}else{}}else
{r++;}}
colItem.r=r;colItem.x=x;return colItem;}});Ext.define('Ext.pivot.Aggregators',{alternateClassName:['Mz.aggregate.Aggregators'],singleton:true,customText:'Custom',sumText:'Sum',avgText:'Avg',minText:'Min',maxText:'Max',countText:'Count',groupSumPercentageText:'Group sum percentage',groupCountPercentageText:'Group count percentage',varianceText:'Var',variancePText:'Varp',stdDevText:'StdDev',stdDevPText:'StdDevp',sum:function(records,measure,matrix,rowGroupKey,colGroupKey){var length=records.length,total=0,i;for(i=0;i<length;i++){total+=Ext.Number.from(records[i].get(measure),0);}
return total;},avg:function(records,measure,matrix,rowGroupKey,colGroupKey){var length=records.length,total=0,i;for(i=0;i<length;i++){total+=Ext.Number.from(records[i].get(measure),0);}
return length>0?(total/length):0;},min:function(records,measure,matrix,rowGroupKey,colGroupKey){var data=[],length=records.length,i,v;for(i=0;i<length;i++){data.push(records[i].get(measure));}
v=Ext.Array.min(data);return v;},max:function(records,measure,matrix,rowGroupKey,colGroupKey){var data=[],length=records.length,i;for(i=0;i<length;i++){data.push(records[i].get(measure));}
return Ext.Array.max(data);},count:function(records,measure,matrix,rowGroupKey,colGroupKey){return records.length;},groupSumPercentage:function(records,measure,matrix,rowGroupKey,colGroupKey){var sumFn=Ext.pivot.Aggregators.sum,length=records.length,result,resultParent,sum=0,sumParent=0,keys=rowGroupKey.split(matrix.keysSeparator);if(length==0){return 0;}
keys.pop();keys=keys.join(matrix.keysSeparator);if(Ext.isEmpty(keys)){keys=matrix.grandTotalKey;}
result=matrix.results.get(rowGroupKey,colGroupKey);if(result){sum=result.getValue('groupSum');if(!Ext.isDefined(sum)){sum=result.calculateByFn('groupSum',measure,sumFn);}}
resultParent=matrix.results.get(keys,colGroupKey);if(resultParent){sumParent=resultParent.getValue('groupSum');if(!Ext.isDefined(sumParent)){sumParent=resultParent.calculateByFn('groupSum',measure,sumFn);}}
return(sumParent>0&&sum>0)?sum/sumParent*100:0;},groupCountPercentage:function(records,measure,matrix,rowGroupKey,colGroupKey){var countFn=Ext.pivot.Aggregators.count,length=records.length,result,resultParent,sum=0,sumParent=0,keys=rowGroupKey.split(matrix.keysSeparator);if(length==0){return 0;}
keys.pop();keys=keys.join(matrix.keysSeparator);if(Ext.isEmpty(keys)){keys=matrix.grandTotalKey;}
result=matrix.results.get(rowGroupKey,colGroupKey);if(result){sum=result.getValue('groupCount');if(!Ext.isDefined(sum)){sum=result.calculateByFn('groupCount',measure,countFn);}}
resultParent=matrix.results.get(keys,colGroupKey);if(resultParent){sumParent=resultParent.getValue('groupCount');if(!Ext.isDefined(sumParent)){sumParent=resultParent.calculateByFn('groupCount',measure,countFn);}}
return(sumParent>0&&sum>0)?sum/sumParent*100:0;},variance:function(records,measure,matrix,rowGroupKey,colGroupKey){var me=Ext.pivot.Aggregators,length=records.length,avg=me.avg.apply(me,arguments),total=0,i;if(avg>0){for(i=0;i<length;i++){total+=Math.pow(Ext.Number.from(records[i].get(measure),0)-avg,2);}}
return(total>0&&length>1)?(total/(length-1)):0;},varianceP:function(records,measure,matrix,rowGroupKey,colGroupKey){var me=Ext.pivot.Aggregators,length=records.length,avg=me.avg.apply(me,arguments),total=0,i;if(avg>0){for(i=0;i<length;i++){total+=Math.pow(Ext.Number.from(records[i].get(measure),0)-avg,2);}}
return(total>0&&length>0)?(total/length):0;},stdDev:function(records,measure,matrix,rowGroupKey,colGroupKey){var me=Ext.pivot.Aggregators,v=me.variance.apply(me,arguments);return v>0?Math.sqrt(v):0;},stdDevP:function(records,measure,matrix,rowGroupKey,colGroupKey){var me=Ext.pivot.Aggregators,v=me.varianceP.apply(me,arguments);return v>0?Math.sqrt(v):0;}});Ext.define('Ext.pivot.MixedCollection',{extend:'Ext.util.MixedCollection',alternateClassName:['Mz.aggregate.MixedCollection'],removeAt:function(index){Ext.destroy(this.callParent(arguments));},clear:function(){this.destroyItems();this.callParent(arguments);},removeAll:function(){this.destroyItems();this.callParent(arguments);},destroy:function(){this.clear();},destroyItems:function(){var items=this.items,len,i,item;if(items){len=items.length;for(i=0;i<len;i++){item=items[i];if(item.destroy){item.destroy();}}}}});Ext.define('Ext.pivot.filter.Base',{alternateClassName:['Mz.aggregate.filter.Abstract'],alias:'pivotfilter.base',mixins:['Ext.mixin.Factoryable'],operator:null,value:null,caseSensitive:true,parent:null,isFilter:true,constructor:function(config){var me=this,fmt=Ext.util.Format;me.thousandRe=new RegExp('['+fmt.thousandSeparator+']','g');me.decimalRe=new RegExp('['+fmt.decimalSeparator+']');Ext.apply(this,config);return this.callParent([config]);},destroy:function(){var me=this;me.parent=me.thousandRe=me.decimalRe=null;me.callParent();},serialize:function(){var me=this;return Ext.apply({type:me.type,operator:me.operator,value:me.value,caseSensitive:me.caseSensitive},me.getSerialArgs()||{});},getSerialArgs:Ext.emptyFn,isMatch:function(value){var me=this,v=me.value,ret,retFrom,retTo,from,to;v=(Ext.isArray(v)?v[0]:v)||'';ret=me.compare(value,v);if(me.operator=='='){return(ret===0);}
if(me.operator=='!='){return(ret!==0);}
if(me.operator=='>'){return(ret>0);}
if(me.operator=='>='){return(ret>=0);}
if(me.operator=='<'){return(ret<0);}
if(me.operator=='<='){return(ret<=0);}
v=me.value;from=(Ext.isArray(v)?v[0]:v)||'';to=(Ext.isArray(v)?v[1]:v)||'';retFrom=me.compare(value,from);retTo=me.compare(value,to);if(me.operator=='between'){return(retFrom>=0&&retTo<=0);}
if(me.operator=='not between'){return!(retFrom>=0&&retTo<=0);}
return true;},parseNumber:function(value){var v;if(typeof value==='number'){return value;}
if(Ext.isEmpty(value)){value='';}
v=String(value).replace(this.thousandRe,'');v=v.replace(this.decimalRe,'.');if(Ext.isNumeric(v)){return parseFloat(v);}
return null;},compare:function(a,b){var sorter=Ext.pivot.matrix.Base.prototype.naturalSort,v1=this.parseNumber(a),v2=this.parseNumber(b);if(Ext.isNumber(v1)&&Ext.isNumber(v2)){return sorter(v1,v2);}
if(Ext.isDate(a)){if(Ext.isDate(b)){return sorter(a,b);}else{return sorter(a,Ext.Date.parse(b,Ext.Date.defaultFormat));}}
return(this.caseSensitive?sorter(a||'',b||''):sorter(String(a||'').toLowerCase(),String(b||'').toLowerCase()));},deprecated:{'6.0':{properties:{mztype:null,from:null,to:null}}}});Ext.define('Ext.pivot.filter.Label',{alternateClassName:['Mz.aggregate.filter.Label'],extend:'Ext.pivot.filter.Base',alias:'pivotfilter.label',isMatch:function(value){var me=this,v;if(me.operator=='begins'){return Ext.String.startsWith(String(value||''),String(me.value||''),!me.caseSensitive);}
if(me.operator=='not begins'){return!Ext.String.startsWith(String(value||''),String(me.value||''),!me.caseSensitive);}
if(me.operator=='ends'){return Ext.String.endsWith(String(value||''),String(me.value||''),!me.caseSensitive);}
if(me.operator=='not ends'){return!Ext.String.endsWith(String(value||''),String(me.value||''),!me.caseSensitive);}
if(me.operator=='contains'){return me.stringContains(String(value||''),String(me.value||''),!me.caseSensitive);}
if(me.operator=='not contains'){return!me.stringContains(String(value||''),String(me.value||''),!me.caseSensitive);}
if(me.operator=='in'){return me.foundInArray(me.value);}
if(me.operator=='not in'){return!me.foundInArray(me.value);}
return me.callParent(arguments);},foundInArray:function(item){var values=Ext.Array.from(this.value),len=values.length,found=false,i;if(this.caseSensitive){return Ext.Array.indexOf(values,item)>=0;}else{for(i=0;i<len;i++){found=found||(String(item).toLowerCase()==String(values[i]).toLowerCase());if(found){break;}}
return found;}},stringContains:function(s,start,ignoreCase){var result=(start.length<=s.length);if(result){if(ignoreCase){s=s.toLowerCase();start=start.toLowerCase();}
result=(s.lastIndexOf(start)>=0);}
return result;},deprecated:{'6.0':{methods:{startsWith:Ext.emptyFn,endsWith:Ext.emptyFn}}}});Ext.define('Ext.pivot.filter.Value',{alternateClassName:['Mz.aggregate.filter.Value'],extend:'Ext.pivot.filter.Base',alias:'pivotfilter.value',dimensionId:'',topType:'items',topOrder:'top',topSort:true,isTopFilter:false,constructor:function(config){var ret=this.callParent([config]);if(Ext.isEmpty(this.dimensionId)){Ext.raise('dimensionId is mandatory on Value filters');}
this.isTopFilter=(this.operator==='top10');return ret;},destroy:function(){this.dimension=null;this.callParent();},getDimension:function(){if(!this.parent.matrix.aggregate.getByKey(this.dimensionId)){Ext.raise('There is no aggregate dimension that matches the dimensionId provided');}
return this.parent.matrix.aggregate.getByKey(this.dimensionId);},getSerialArgs:function(){var me=this;return{dimensionId:me.dimensionId,topType:me.topType,topOrder:me.topOrder,topSort:me.topSort};},applyFilter:function(axis,treeItems){var me=this,items=me.topSort?treeItems:Ext.Array.clone(treeItems),ret=[];if(treeItems.length==0){return ret;}
me.sortItemsByGrandTotal(axis,items);switch(me.topType){case'items':ret=me.extractTop10Items(items);break;case'sum':ret=me.extractTop10Sum(items);break;case'percent':ret=me.extractTop10Percent(axis,items);break;}
if(!me.topSort){items.length=0;}
return ret;},extractTop10Items:function(items){var me=this,uniqueValues=[],i;for(i=0;i<items.length;i++){if(uniqueValues.indexOf(items[i]['tempVar'])<0){uniqueValues.push(items[i]['tempVar']);if(uniqueValues.length>me.value||(me.value<i+1&&i>0)){break;}}}
return Ext.Array.slice(items,i);},extractTop10Sum:function(items){var me=this,sum=0,i;for(i=0;i<items.length;i++){sum+=items[i]['tempVar'];if(sum>=me.value){break;}}
return Ext.Array.slice(items,i+1);},extractTop10Percent:function(axis,items){var me=this,sum=0,keys=items[0].key.split(axis.matrix.keysSeparator),i,leftKey,topKey,parentKey,result,grandTotal;keys.length--;parentKey=(keys.length>0?keys.join(axis.matrix.keysSeparator):axis.matrix.grandTotalKey);leftKey=(axis.isLeftAxis?parentKey:axis.matrix.grandTotalKey);topKey=(axis.isLeftAxis?axis.matrix.grandTotalKey:parentKey);result=axis.matrix.results.get(leftKey,topKey);grandTotal=(result?result.getValue(me.dimensionId):0);for(i=0;i<items.length;i++){sum+=items[i]['tempVar'];if((sum*100/grandTotal)>=me.value){break;}}
return Ext.Array.slice(items,i+1);},sortItemsByGrandTotal:function(axis,items){var me=this,leftKey,topKey,result,i;for(i=0;i<items.length;i++){leftKey=(axis.isLeftAxis?items[i].key:axis.matrix.grandTotalKey);topKey=(axis.isLeftAxis?axis.matrix.grandTotalKey:items[i].key);result=axis.matrix.results.get(leftKey,topKey);items[i]['tempVar']=(result?result.getValue(me.dimensionId):0);}
Ext.Array.sort(items,function(a,b){var result=axis.matrix.naturalSort(a['tempVar'],b['tempVar']);if(result<0&&me.topOrder==='top'){return 1;}
if(result>0&&me.topOrder==='top'){return-1;}
return result;});}});Ext.define('Ext.pivot.dimension.Item',{alternateClassName:['Mz.aggregate.dimension.Item'],requires:['Ext.pivot.MixedCollection','Ext.pivot.filter.Label','Ext.pivot.filter.Value','Ext.app.bind.Template'],$configPrefixed:false,$configStrict:false,config:{id:null,header:'',dataIndex:'',sortIndex:'',width:100,flex:0,align:'left',sortable:true,direction:'ASC',sorterFn:null,caseSensitiveSort:true,filter:null,labelRenderer:null,renderer:null,formatter:null,column:null,exportStyle:null,scope:null,grouperFn:null,blankText:'(blank)',showZeroAsBlank:false,aggregator:'sum',values:[]},isAggregate:false,matrix:null,constructor:function(config){var me=this;this.initConfig(config);if(!me.getId()){me.setId(Ext.id());}
if(Ext.isEmpty(me.dataIndex)){Ext.raise('No dataIndex provided to the dimension!');}
if(!me.grouperFn){me.groupFn=Ext.bind(me.defaultGrouperFn,me);}
if(me.sortable){if(!me.sorterFn){me.sortFn=Ext.bind(me.defaultSorterFn,me);}}else{me.sortFn=Ext.bind(me.manualSorterFn,me);}
if(Ext.isEmpty(me.getSortIndex())){me.setSortIndex(me.getDataIndex());}
if(me.isAggregate&&!me.getFormatter()&&!me.getRenderer()){me.setRenderer(me.getDefaultFormatRenderer('0,000.00'));}
return this.callParent([config]);},destroy:function(){this.setConfig({values:null,grouperFn:null,sorterFn:null,filter:null,renderer:null,labelRenderer:null,aggregator:null});this.callParent();},serialize:function(){return this.getConfiguration(true);},getConfiguration:function(serializable){var me=this,cfg=me.getConfig();delete(cfg.values);if(cfg.filter){cfg.filter=cfg.filter.serialize();}
if(serializable&&typeof cfg.aggregator==='function'){cfg.aggregator='sum';}
if(serializable&&typeof cfg.renderer==='function'){cfg.renderer=null;}
if(serializable&&typeof cfg.labelRenderer==='function'){cfg.labelRenderer=null;}
return cfg;},applyId:function(id){return id?id:Ext.id();},updateExportStyle:function(style){if(style&&!style.id){style.id=this.getId();}},applyFilter:function(filter,oldFilter){if(filter==null){return filter;}
if(filter&&filter.isFilter){filter.parent=this;return filter;}
if(Ext.isObject(filter)){Ext.applyIf(filter,{type:'label',parent:this});filter=Ext.Factory.pivotfilter(filter);}else{filter=false;}
return filter;},updateAggregator:function(fn){var aggregators=Ext.pivot.Aggregators;if(Ext.isString(fn)&&Ext.isFunction(aggregators[fn])){this.aggregatorFn=Ext.bind(aggregators[fn],aggregators);}else{this.aggregatorFn=fn||'sum';}},updateGrouperFn:function(fn){this.groupFn=(Ext.isFunction(fn)?Ext.bind(fn,this):fn);},updateSorterFn:function(fn){this.sortFn=(Ext.isFunction(fn)?Ext.bind(fn,this):fn);},addValue:function(value,display){var values=this.values;if(!values.getByKey(value)){values.add({sortValue:value,value:value,display:display});}},applyValues:function(values,oldValues){var ret;Ext.destroy(oldValues);if(values&&!values.isInstance){ret=new Ext.pivot.MixedCollection();ret.getKey=function(item){return item.value;};ret.addAll(values);return ret;}
return values;},sortValues:function(){if(this.sortable){this.values.sortBy(this.sortFn);}},defaultSorterFn:function(o1,o2){var me=this,s1=o1.sortValue,s2=o2.sortValue,result;if(s1 instanceof Date){s1=s1.getTime();}
if(s2 instanceof Date){s2=s2.getTime();}
if(!me.caseSensitiveSort){s1=typeof s1==='string'?s1.toUpperCase():s1;s2=typeof s2==='string'?s2.toUpperCase():s2;}
if(me.matrix.useNaturalSorting){result=me.matrix.naturalSort(s1,s2);}else{result=(s1===s2?0:(s1<s2?-1:1));}
if(result<0&&me.direction==='DESC'){return 1;}
if(result>0&&me.direction==='DESC'){return-1;}
return result;},manualSorterFn:function(o1,o2){var v=this.values,i1=v?v.indexOfKey(o1.value):0,i2=v?v.indexOfKey(o2.value):0;return(i1===i2?0:(i1<i2?-1:1));},getDefaultFormatRenderer:function(format){var me=this;return function(v){var positive;if(Ext.isEmpty(format)){return v;}
if(Ext.isFunction(format)){return format.apply(me,arguments);}
if(!Ext.isNumber(v)){return v;}
if(me.isAggregate&&v===0&&me.showZeroAsBlank){return'';}
positive=(v>=0);v=Math.abs(v);v=Ext.util.Format.number(v,format);return positive?v:'-'+v;};},defaultGrouperFn:function(record){return record.get(this.dataIndex);},getFormatterFn:function(){var me=this,format=me.getFormatter(),scoped;if(format){scoped=format.indexOf('this.')===0;if(scoped){format=format.substring(5);}
format=Ext.app.bind.Template.prototype.parseFormat(format);if(scoped){format.scope=null;}
return function(v){return format.format(v,format.scope||me.getScope()||me.matrix.cmp.resolveListenerScope('self.controller')||this);};}},aggregatorFn:Ext.emptyFn,groupFn:Ext.emptyFn,sortFn:Ext.emptyFn});Ext.define('Ext.pivot.axis.Item',{alternateClassName:['Mz.aggregate.axis.Item'],level:0,key:'',value:'',sortValue:'',name:'',dimensionId:'',dimension:null,children:null,record:null,records:null,axis:null,data:null,expanded:false,constructor:function(config){var me=this,axis;Ext.apply(me,config||{});if(Ext.isEmpty(me.sortValue)){me.sortValue=me.value;}
axis=me.axis;me.expanded=(axis&&((axis.isLeftAxis&&!axis.matrix.collapsibleRows)||(!axis.isLeftAxis&&!axis.matrix.collapsibleColumns)));me.callParent(arguments);},destroy:function(){var me=this;Ext.destroy(me.children);me.axis=me.data=me.dimension=me.record=me.children=me.records=null;me.callParent(arguments);},getTextTotal:function(){var me=this,groupHeaderTpl=Ext.XTemplate.getTpl(me.axis.matrix,'textTotalTpl');return groupHeaderTpl.apply({groupField:me.dimension.dataIndex,columnName:me.dimension.dataIndex,name:me.name,rows:me.children||[]});},expand:function(includeChildren){var me=this;me.expanded=true;if(includeChildren===true){me.expandCollapseChildrenTree(true);}
me.axis.matrix.fireEvent('groupexpand',me.axis.matrix,(me.axis.isLeftAxis?'row':'col'),me);},collapse:function(includeChildren){var me=this;me.expanded=false;if(includeChildren===true){me.expandCollapseChildrenTree(false);}
me.axis.matrix.fireEvent('groupcollapse',me.axis.matrix,(me.axis.isLeftAxis?'row':'col'),me);},expandCollapseChildrenTree:function(state){var me=this,i;me.expanded=state;if(Ext.isArray(me.children)){for(i=0;i<me.children.length;i++){me.children[i].expandCollapseChildrenTree(state);}}}});Ext.define('Ext.pivot.axis.Base',{alternateClassName:['Mz.aggregate.axis.Abstract'],alias:'pivotaxis.base',mixins:['Ext.mixin.Factoryable'],requires:['Ext.pivot.MixedCollection','Ext.pivot.dimension.Item','Ext.pivot.axis.Item'],dimensions:null,matrix:null,items:null,tree:null,levels:0,isLeftAxis:false,constructor:function(config){var me=this,i,sorter;if(!config||!config.matrix){Ext.log('Wrong initialization of the axis!');return;}
me.isLeftAxis=config.isLeftAxis||me.isLeftAxis;me.matrix=config.matrix;me.tree=[];me.dimensions=new Ext.pivot.MixedCollection();me.dimensions.getKey=function(item){return item.getId();};me.items=new Ext.pivot.MixedCollection();me.items.getKey=function(item){return item.key;};Ext.Array.each(Ext.Array.from(config.dimensions||[]),me.addDimension,me);},destroy:function(){var me=this;Ext.destroyMembers(me,'dimensions','items','tree');me.matrix=me.dimensions=me.items=me.tree=null;},addDimension:function(config){var item=config;if(!config){return;}
if(!config.isInstance){item=new Ext.pivot.dimension.Item(config);}
item.matrix=this.matrix;this.dimensions.add(item);},addItem:function(item){var me=this;if(!Ext.isObject(item)||Ext.isEmpty(item.key)||Ext.isEmpty(item.value)||Ext.isEmpty(item.dimensionId)){return false;}
item.key=String(item.key);item.dimension=me.dimensions.getByKey(item.dimensionId);item.name=item.name||Ext.callback(item.dimension.labelRenderer,item.dimension.scope||'self.controller',[item.value],0,me.matrix.cmp)||item.value;item.dimension.addValue(item.value,item.name);item.axis=me;if(!me.items.map[item.key]&&item.dimension){me.items.add(new Ext.pivot.axis.Item(item));return true;}
return false;},clear:function(){this.items.clear();this.tree=null;},getTree:function(){if(!this.tree){this.buildTree();}
return this.tree;},expandAll:function(){var me=this,items=me.getTree(),len=items.length,i;for(i=0;i<len;i++){items[i].expandCollapseChildrenTree(true);}
if(len>0){me.matrix.fireEvent('groupexpand',me.matrix,(me.isLeftAxis?'row':'col'),null);}},collapseAll:function(){var me=this,items=me.getTree(),len=items.length,i;for(i=0;i<len;i++){items[i].expandCollapseChildrenTree(false);}
if(len>0){me.matrix.fireEvent('groupcollapse',me.matrix,(me.isLeftAxis?'row':'col'),null);}},findTreeElement:function(attribute,value){var items=this.items,len=items.getCount(),found=false,i,item;for(i=0;i<len;i++){item=items.items[i];if(Ext.isDate(value)?Ext.Date.isEqual(item[attribute],value):item[attribute]===value){found=true;break;}}
return found?{level:item.level,node:item}:null;},buildTree:function(){var me=this,items=me.dimensions.items,len=items.length,i,item,keys,parentKey,el;for(i=0;i<len;i++){items[i].sortValues();}
me.tree=[];items=me.items.items;len=items.length;for(i=0;i<len;i++){item=items[i];keys=String(item.key).split(me.matrix.keysSeparator);keys=Ext.Array.slice(keys,0,keys.length-1);parentKey=keys.join(me.matrix.keysSeparator);el=me.items.map[parentKey];if(el){item.level=el.level+1;item.data=Ext.clone(el.data||{});el.children=el.children||[];el.children.push(item);}else{item.level=0;item.data={};me.tree.push(item);}
item.data[item.dimension.getId()]=item.name;me.levels=Math.max(me.levels,item.level);}
me.sortTree();},rebuildTree:function(){var items=this.items.items,len=items.length,i;this.tree=null;for(i=0;i<len;i++){items[i].children=null;}
this.buildTree();},sortTree:function(){var tree=arguments[0]||this.tree,len=tree.length,dimension,i,item;if(tree.length>0){dimension=tree[0].dimension;}
if(dimension){Ext.Array.sort(tree,dimension.sortFn);}
for(i=0;i<len;i++){item=tree[i];if(item.children){this.sortTree(item.children);}}},sortTreeByField:function(field,direction){var me=this,sorted=false,dimension,len,i;if(field==me.matrix.compactViewKey){sorted=me.sortTreeByDimension(me.tree,me.dimensions.items,direction);len=me.dimensions.items.length;for(i=0;i<len;i++){me.dimensions.items[i].direction=direction;}}else{direction=direction||'ASC';dimension=me.dimensions.getByKey(field);if(dimension){sorted=me.sortTreeByDimension(me.tree,dimension,direction);dimension.direction=direction;}else{sorted=me.sortTreeByRecords(me.tree,field,direction);}}
return sorted;},sortTreeByDimension:function(tree,dimension,direction){var sorted=false,dimensions=Ext.Array.from(dimension),aDimension,len,i,temp;tree=tree||[];len=tree.length;if(len>0){aDimension=tree[0].dimension;}
if(Ext.Array.indexOf(dimensions,aDimension)>=0){if(aDimension.sortable){temp=aDimension.direction;aDimension.direction=direction;Ext.Array.sort(tree,aDimension.sortFn);aDimension.direction=temp;}
sorted=aDimension.sortable;}
for(i=0;i<len;i++){sorted=this.sortTreeByDimension(tree[i].children,dimension,direction)||sorted;}
return sorted;},sortTreeByRecords:function(tree,field,direction){var i,len;tree=tree||[];len=tree.length;if(len<=0){return false;}
if(tree[0].record){this.sortTreeRecords(tree,field,direction);}else{this.sortTreeLeaves(tree,field,direction);}
for(i=0;i<len;i++){this.sortTreeByRecords(tree[i].children,field,direction);}
return true;},sortTreeRecords:function(tree,field,direction){var sortFn=this.matrix.naturalSort;direction=direction||'ASC';Ext.Array.sort(tree||[],function(a,b){var result,o1=a.record,o2=b.record;if(!(o1&&o1.isModel&&o2&&o2.isModel)){return 0;}
result=sortFn(o1.get(field)||'',o2.get(field)||'');if(result<0&&direction==='DESC'){return 1;}
if(result>0&&direction==='DESC'){return-1;}
return result;});},sortTreeLeaves:function(tree,field,direction){var sortFn=this.matrix.naturalSort,results=this.matrix.results,matrixModel=this.matrix.model,idx=Ext.Array.indexOf(Ext.Array.pluck(matrixModel,'name'),field),col,agg;if(idx<0){return false;}
col=matrixModel[idx]['col'];agg=matrixModel[idx]['agg'];direction=direction||'ASC';Ext.Array.sort(tree||[],function(a,b){var result,o1,o2;o1=results.get(a.key,col);if(o1){o1=o1.getValue(agg);}else{o1=0;}
o2=results.get(b.key,col);if(o2){o2=o2.getValue(agg);}else{o2=0;}
result=sortFn(o1,o2);if(result<0&&direction==='DESC'){return 1;}
if(result>0&&direction==='DESC'){return-1;}
return result;});}});Ext.define('Ext.pivot.axis.Local',{alternateClassName:['Mz.aggregate.axis.Local'],extend:'Ext.pivot.axis.Base',alias:'pivotaxis.local',processRecord:function(record){var me=this,items=[],parentKey='',filterOk=true,dimCount=me.dimensions.items.length,groupValue,groupKey,dimension,i;for(i=0;i<dimCount;i++){dimension=me.dimensions.items[i];groupValue=Ext.callback(dimension.groupFn,dimension.scope||'self.controller',[record],0,me.matrix.cmp);groupKey=parentKey?parentKey+me.matrix.keysSeparator:'';groupValue=Ext.isEmpty(groupValue)?dimension.blankText:groupValue;groupKey+=me.matrix.getKey(groupValue);if(dimension.filter instanceof Ext.pivot.filter.Label){filterOk=dimension.filter.isMatch(groupValue);}
if(!filterOk){break;}
items.push({value:groupValue,sortValue:record.get(dimension.sortIndex),key:groupKey,dimensionId:dimension.getId()});parentKey=groupKey;}
if(filterOk){return items;}else{return null;}},buildTree:function(){this.callParent(arguments);this.filterTree();},filterTree:function(){var me=this,length=me.dimensions.items.length,hasFilters=false,i;for(i=0;i<length;i++){hasFilters=hasFilters||(me.dimensions.items[i].filter instanceof Ext.pivot.filter.Value);}
if(!hasFilters){return;}
me.matrix.filterApplied=true;me.filterTreeItems(me.tree);},filterTreeItems:function(items){var me=this,filter,i,filteredItems;if(!items||!Ext.isArray(items)||items.length<=0){return;}
filter=items[0].dimension.filter;if(filter&&(filter instanceof Ext.pivot.filter.Value)){if(filter.isTopFilter){filteredItems=filter.applyFilter(me,items)||[];}else{filteredItems=Ext.Array.filter(items,me.canRemoveItem,me);}
me.removeRecordsFromResults(filteredItems);me.removeItemsFromArray(items,filteredItems);for(i=0;i<filteredItems.length;i++){me.removeTreeChildren(filteredItems[i]);}}
for(i=0;i<items.length;i++){if(items[i].children){me.filterTreeItems(items[i].children);if(items[i].children.length===0){me.items.remove(items[i]);Ext.Array.erase(items,i,1);i--;}}}},removeTreeChildren:function(item){var i,len;if(item.children){len=item.children.length;for(i=0;i<len;i++){this.removeTreeChildren(item.children[i]);}}
this.items.remove(item);},canRemoveItem:function(item){var me=this,leftKey=(me.isLeftAxis?item.key:me.matrix.grandTotalKey),topKey=(me.isLeftAxis?me.matrix.grandTotalKey:item.key),result=me.matrix.results.get(leftKey,topKey),filter=item.dimension.filter;return(result?!filter.isMatch(result.getValue(filter.dimensionId)):false);},removeItemsFromArray:function(source,toDelete){for(var i=0;i<source.length;i++){if(Ext.Array.indexOf(toDelete,source[i])>=0){Ext.Array.erase(source,i,1);i--;}}},removeRecordsFromResults:function(items){for(var i=0;i<items.length;i++){this.removeRecordsByItem(items[i]);}},removeRecordsByItem:function(item){var me=this,keys,i,results,result,toRemove;if(item.children){me.removeRecordsFromResults(item.children);}
if(me.isLeftAxis){toRemove=me.matrix.results.get(item.key,me.matrix.grandTotalKey);results=me.matrix.results.getByLeftKey(me.matrix.grandTotalKey);}else{toRemove=me.matrix.results.get(me.matrix.grandTotalKey,item.key);results=me.matrix.results.getByTopKey(me.matrix.grandTotalKey);}
if(!toRemove){return;}
for(i=0;i<results.length;i++){me.removeItemsFromArray(results[i].records,toRemove.records);}
keys=item.key.split(me.matrix.keysSeparator);keys.length=keys.length-1;while(keys.length>0){if(me.isLeftAxis){results=me.matrix.results.getByLeftKey(keys.join(me.matrix.keysSeparator));}else{results=me.matrix.results.getByTopKey(keys.join(me.matrix.keysSeparator));}
for(i=0;i<results.length;i++){me.removeItemsFromArray(results[i].records,toRemove.records);}
keys.length=keys.length-1;}}});Ext.define('Ext.pivot.feature.PivotStore',{config:{store:null,grid:null,matrix:null,clsGrandTotal:'',clsGroupTotal:''},totalRowEvent:'pivottotal',groupRowEvent:'pivotgroup',itemRowEvent:'pivotitem',constructor:function(config){this.initConfig(config);return this.callParent(arguments);},destroy:function(){var me=this;Ext.destroy(me.storeListeners,me.matrixListeners);me.setConfig({store:null,matrix:null,grid:null});me.storeInfo=me.storeListeners=null;me.callParent(arguments);},updateStore:function(store){var me=this;Ext.destroy(me.storeListeners);if(store){me.storeListeners=store.on({pivotstoreremodel:me.processStore,scope:me,destroyable:true});}},updateMatrix:function(matrix){var me=this;Ext.destroy(me.matrixListeners);if(matrix){me.matrixListeners=matrix.on({groupexpand:me.onGroupExpand,groupcollapse:me.onGroupCollapse,scope:me,destroyable:true});}},processStore:function(){var me=this,store=me.getStore(),matrix=me.getMatrix(),records=[],isClassic=Ext.toolkit=='classic',items,length,i,group,fields;if(!matrix||!store){return;}
fields=matrix.getColumns();store.model.replaceFields(fields,true);store.removeAll(true);me.storeInfo={};if(matrix.rowGrandTotalsPosition=='first'){records.push.apply(records,me.processGrandTotal()||[]);}
items=matrix.leftAxis.getTree();length=items.length;for(i=0;i<length;i++){group=items[i];records.push.apply(records,me.processGroup({group:group,previousExpanded:(i>0?items[i-1].expanded:false)})||[]);}
if(matrix.rowGrandTotalsPosition=='last'){records.push.apply(records,me.processGrandTotal()||[]);}
store.loadData(records);if(!isClassic){store.fireEvent('load',store);}},processGroup:function(config){var me=this,fn=me['processGroup'+Ext.String.capitalize(me.getMatrix().viewLayoutType)];if(!Ext.isFunction(fn)){fn=me.processGroupOutline;}
return fn.call(me,config);},processGrandTotal:function(){var me=this,found=false,matrix=me.getMatrix(),group={key:matrix.grandTotalKey},records=[],lenT=matrix.totals.length,dimensions=matrix.leftAxis.dimensions.items,lenD=dimensions.length,i,j,k,total,column,record,key;for(i=0;i<lenT;i++){total=matrix.totals[i];record=total.record;k=lenD;if(record&&record.isModel){me.storeInfo[record.internalId]={leftKey:group.key,rowStyle:'',rowClasses:[me.getClsGrandTotal()],rowEvent:me.totalRowEvent,rendererParams:{}};for(j=0;j<lenD;j++){column=dimensions[j];if(matrix.viewLayoutType=='compact'||j===0){if(matrix.viewLayoutType=='compact'){key=matrix.compactViewKey;k=1;}else{key=column.getId();}
record.data[key]=total.title;me.storeInfo[record.internalId].rendererParams[key]={fn:'groupOutlineRenderer',group:group,colspan:k,hidden:false,subtotalRow:true};found=true;}else{me.storeInfo[record.internalId].rendererParams[column.id]={fn:'groupOutlineRenderer',group:group,colspan:0,hidden:found,subtotalRow:true};k--;}}
me.storeInfo[record.internalId].rendererParams['topaxis']={fn:'topAxisRenderer'};records.push(record);}}
return records;},processGroupOutline:function(config){var me=this,group=config['group'],results=[];if(group.record){me.processRecordOutline({results:results,group:group});}else{me.processGroupOutlineWithChildren({results:results,group:group,previousExpanded:config.previousExpanded});}
return results;},processGroupOutlineWithChildren:function(config){var me=this,matrix=me.getMatrix(),group=config['group'],previousExpanded=config['previousExpanded'],hasSummaryData,record,i,len;hasSummaryData=(!group.expanded||(group.expanded&&matrix.rowSubTotalsPosition=='first'));record=group.expanded?group.records.expanded:group.records.collapsed;me.processGroupHeaderRecordOutline({results:config.results,group:group,record:record,previousExpanded:previousExpanded,hasSummaryData:hasSummaryData});if(group.expanded){if(group.children){len=group.children.length;for(i=0;i<len;i++){if(group.children[i]['children']){me.processGroupOutlineWithChildren({results:config.results,group:group.children[i]});}else{me.processRecordOutline({results:config.results,group:group.children[i]});}}}
if(matrix.rowSubTotalsPosition=='last'){record=group.records.footer;me.processGroupHeaderRecordOutline({results:config.results,group:group,record:record,previousExpanded:previousExpanded,subtotalRow:true,hasSummaryData:true});}}},processGroupHeaderRecordOutline:function(config){var me=this,matrix=me.getMatrix(),group=config['group'],record=config['record'],previousExpanded=config['previousExpanded'],subtotalRow=config['subtotalRow'],hasSummaryData=config['hasSummaryData'],items=matrix.leftAxis.dimensions.items,len=items.length,k=len,found=false,i,column;me.storeInfo[record.internalId]={leftKey:group.key,rowStyle:'',rowClasses:[me.getClsGroupTotal()],rowEvent:me.groupRowEvent,rendererParams:{}};for(i=0;i<len;i++){column=items[i];if(column.id==group.dimension.id){me.storeInfo[record.internalId].rendererParams[column.id]={fn:'groupOutlineRenderer',group:group,colspan:k,hidden:false,previousExpanded:previousExpanded,subtotalRow:subtotalRow};found=true;}else{me.storeInfo[record.internalId].rendererParams[column.id]={fn:'groupOutlineRenderer',group:group,colspan:0,hidden:found,previousExpanded:previousExpanded,subtotalRow:subtotalRow};k--;}}
me.storeInfo[record.internalId].rendererParams['topaxis']={fn:(hasSummaryData?'topAxisRenderer':'topAxisNoRenderer'),group:group};config.results.push(record);},processRecordOutline:function(config){var me=this,group=config['group'],found=false,record=group.record,items=me.getMatrix().leftAxis.dimensions.items,len=items.length,i,column;me.storeInfo[record.internalId]={leftKey:group.key,rowStyle:'',rowClasses:[],rowEvent:me.itemRowEvent,rendererParams:{}};for(i=0;i<len;i++){column=items[i];if(column.id==group.dimension.id){found=true;}
me.storeInfo[record.internalId].rendererParams[column.id]={fn:'recordOutlineRenderer',group:group,hidden:!found};}
me.storeInfo[record.internalId].rendererParams['topaxis']={fn:'topAxisRenderer',group:group};config.results.push(record);},processGroupCompact:function(config){var me=this,group=config['group'],previousExpanded=config['previousExpanded'],results=[];if(group.record){me.processRecordCompact({results:results,group:group});}else{me.processGroupCompactWithChildren({results:results,group:group,previousExpanded:previousExpanded});}
return results;},processGroupCompactWithChildren:function(config){var me=this,matrix=me.getMatrix(),group=config['group'],previousExpanded=config['previousExpanded'],hasSummaryData,i,len;hasSummaryData=(!group.expanded||(group.expanded&&matrix.rowSubTotalsPosition=='first'));me.processGroupHeaderRecordCompact({results:config.results,group:group,record:group.expanded?group.records.expanded:group.records.collapsed,previousExpanded:previousExpanded,hasSummaryData:hasSummaryData});if(group.expanded){if(group.children){len=group.children.length;for(i=0;i<len;i++){if(group.children[i]['children']){me.processGroupCompactWithChildren({results:config.results,group:group.children[i]});}else{me.processRecordCompact({results:config.results,group:group.children[i]});}}}
if(matrix.rowSubTotalsPosition=='last'){me.processGroupHeaderRecordCompact({results:config.results,group:group,record:group.records.footer,previousExpanded:previousExpanded,subtotalRow:true,hasSummaryData:true});}}},processGroupHeaderRecordCompact:function(config){var me=this,matrix=me.getMatrix(),group=config['group'],record=config['record'],previousExpanded=config['previousExpanded'],subtotalRow=config['subtotalRow'],hasSummaryData=config['hasSummaryData'];me.storeInfo[record.internalId]={leftKey:group.key,rowStyle:'',rowClasses:[me.getClsGroupTotal()],rowEvent:me.groupRowEvent,rendererParams:{}};me.storeInfo[record.internalId].rendererParams[matrix.compactViewKey]={fn:'groupCompactRenderer',group:group,colspan:0,previousExpanded:previousExpanded,subtotalRow:subtotalRow};me.storeInfo[record.internalId].rendererParams['topaxis']={fn:(hasSummaryData?'topAxisRenderer':'topAxisNoRenderer'),group:group};config.results.push(record);},processRecordCompact:function(config){var me=this,group=config['group'],record=group.record;me.storeInfo[record.internalId]={leftKey:group.key,rowStyle:'',rowClasses:[],rowEvent:me.itemRowEvent,rendererParams:{}};me.storeInfo[record.internalId].rendererParams[me.getMatrix().compactViewKey]={fn:'recordCompactRenderer',group:group};me.storeInfo[record.internalId].rendererParams['topaxis']={fn:'topAxisRenderer',group:group};config.results.push(record);},processGroupTabular:function(config){var me=this,group=config['group'],results=[];if(group.record){me.processRecordTabular({results:results,group:group});}else{me.processGroupTabularWithChildren({results:results,group:group,previousExpanded:config.previousExpanded});}
return results;},processGroupTabularWithChildren:function(config,noFirstRecord){var me=this,matrix=me.getMatrix(),group=config['group'],previousExpanded=config['previousExpanded'],record,i,child,len;if(!noFirstRecord){me.processGroupHeaderRecordTabular({results:config.results,group:group,previousExpanded:previousExpanded,hasSummaryData:!group.expanded});}
if(group.expanded){if(group.children){len=group.children.length;for(i=0;i<len;i++){child=group.children[i];if(i===0&&child.children&&child.expanded){me.processGroupTabularWithChildren({results:config.results,group:child},true);}else if(i>0){if(child.children){me.processGroupTabularWithChildren({results:config.results,group:child});}else{me.processRecordTabular({results:config.results,group:child});}}}}
if(matrix.rowSubTotalsPosition!=='none'){record=group.records.footer;me.processGroupHeaderRecordTabular({results:config.results,group:group,record:record,previousExpanded:previousExpanded,subtotalRow:true,hasSummaryData:true});}}},getTabularGroupRecord:function(group){var record=group.record;if(!record){if(!group.expanded){record=group.records.collapsed;}else{record=this.getTabularGroupRecord(group.children[0]);}}
return record;},processGroupHeaderRecordTabular:function(config){var me=this,matrix=me.getMatrix(),group=config['group'],record=config['record'],previousExpanded=config['previousExpanded'],subtotalRow=config['subtotalRow'],hasSummaryData=config['hasSummaryData'],dimensions=matrix.leftAxis.dimensions,len=dimensions.length,k=len,found=false,rendererParams={},rowClasses=[],rowEvent=me.itemRowEvent,i,dim,item,keys,parentGroup,prevGroup;if(!record){item=group;record=item.record;while(!record){rendererParams[item.dimension.id]={fn:'groupTabularRenderer',group:item,colspan:0,hidden:false,previousExpanded:previousExpanded,subtotalRow:subtotalRow};if(item.children){if(!item.expanded){record=item.records.collapsed;rendererParams[item.dimension.id].colspan=len-item.level;}else{item=item.children[0];}}else{record=item.record;}}
found=false;for(i=0;i<len;i++){dim=matrix.leftAxis.dimensions.items[i];if(rendererParams[dim.id]){record.data[dim.id]=rendererParams[dim.id].group.name;found=true;}else if(found){rendererParams[dim.id]={fn:'groupTabularRenderer',group:group,colspan:0,hidden:true,previousExpanded:previousExpanded,subtotalRow:subtotalRow};}else{record.data[dim.id]='';}}
if(group.level>0){prevGroup=group;keys=prevGroup.key.split(matrix.keysSeparator);keys.length--;parentGroup=matrix.leftAxis.items.getByKey(keys.join(matrix.keysSeparator));while(parentGroup&&parentGroup.children[0]==prevGroup){rendererParams[parentGroup.dimension.id]={fn:'groupTabularRenderer',group:parentGroup,colspan:0,hidden:false,previousExpanded:previousExpanded,subtotalRow:subtotalRow};record.data[parentGroup.dimension.id]=parentGroup.name;prevGroup=parentGroup;keys=prevGroup.key.split(matrix.keysSeparator);keys.length--;parentGroup=matrix.leftAxis.items.getByKey(keys.join(matrix.keysSeparator));}}}else{for(i=0;i<len;i++){dim=matrix.leftAxis.dimensions.items[i];rendererParams[dim.id]={fn:'groupTabularRenderer',group:group,colspan:0,hidden:false,previousExpanded:previousExpanded,subtotalRow:subtotalRow};if(dim.id==group.dimension.id){rendererParams[dim.id].colspan=k;found=true;}else{rendererParams[dim.id].hidden=found;k--;}}
item=group;}
if(hasSummaryData){rowClasses.push(me.getClsGroupTotal());rowEvent=me.groupRowEvent;}
me.storeInfo[record.internalId]={leftKey:group.key,rowStyle:'',rowClasses:rowClasses,rowEvent:rowEvent,rendererParams:rendererParams};me.storeInfo[record.internalId].rendererParams['topaxis']={fn:'topAxisRenderer',group:item};config.results.push(record);},processRecordTabular:function(config){var me=this,group=config['group'],found=false,record=group.record,items=me.getMatrix().leftAxis.dimensions.items,len=items.length,i,column;me.storeInfo[record.internalId]={leftKey:group.key,rowStyle:'',rowClasses:[],rowEvent:me.itemRowEvent,rendererParams:{}};for(i=0;i<len;i++){column=items[i];if(column.id==group.dimension.id){found=true;}else{record.data[column.id]=null;}
me.storeInfo[record.internalId].rendererParams[column.id]={fn:'recordTabularRenderer',group:group,hidden:!found};}
me.storeInfo[record.internalId].rendererParams['topaxis']={fn:'topAxisRenderer',group:group};config.results.push(record);},doExpandCollapse:function(key,oldRecord){var me=this,gridMaster=me.getGrid(),group;group=me.getMatrix().leftAxis.findTreeElement('key',key);if(!group){return;}
me.doExpandCollapseInternal(group.node,oldRecord);gridMaster.fireEvent((group.node.expanded?'pivotgroupexpand':'pivotgroupcollapse'),gridMaster,'row',group.node);},doExpandCollapseInternal:function(group,oldRecord){var me=this,store=me.getStore(),isClassic=Ext.toolkit=='classic',items,oldItems,startIdx,len;group.expanded=!group.expanded;oldItems=me.processGroup({group:group,previousExpanded:false});group.expanded=!group.expanded;items=me.processGroup({group:group,previousExpanded:false});if(items.length&&oldItems.length&&(startIdx=store.indexOf(oldItems[0]))!==-1){if(isClassic){store.suspendEvents();}
if(group.expanded){store.remove(store.getAt(startIdx));store.insert(startIdx,items);}else{store.remove(oldItems);store.insert(startIdx,items);}
me.removeStoreInfoData(oldItems);if(isClassic){store.resumeEvents();store.fireEvent('replace',store,startIdx,oldItems,items);}}},removeStoreInfoData:function(records){var len=records.length,record,i;for(i=0;i<len;i++){record=records[i];if(this.storeInfo[record.internalId]){delete this.storeInfo[record.internalId];}}},onGroupExpand:function(matrix,type,item){if(type=='row'){if(item){this.doExpandCollapseInternal(item,item.records.collapsed);}else{this.processStore();}}},onGroupCollapse:function(matrix,type,item){if(type=='row'){if(item){this.doExpandCollapseInternal(item,item.records.expanded);}else{this.processStore();}}}});Ext.define('Ext.pivot.result.Base',{alias:'pivotresult.base',mixins:['Ext.mixin.Factoryable'],leftKey:'',topKey:'',dirty:false,values:null,matrix:null,constructor:function(config){var me=this;Ext.apply(me,config||{});me.values={};return me.callParent(arguments);},destroy:function(){var me=this;me.matrix=me.values=null;me.leftAxisItem=me.topAxisItem=null;return me.callParent(arguments);},calculate:Ext.emptyFn,calculateByFn:Ext.emptyFn,addValue:function(dimensionId,value){this.values[dimensionId]=value;},getValue:function(dimensionId){return this.values[dimensionId];},getLeftAxisItem:function(){return this.matrix.leftAxis.items.getByKey(this.leftKey);},getTopAxisItem:function(){return this.matrix.topAxis.items.getByKey(this.topKey);}});Ext.define('Ext.pivot.result.Collection',{alternateClassName:['Mz.aggregate.matrix.Results'],requires:['Ext.pivot.MixedCollection','Ext.pivot.result.Base'],resultType:'base',items:null,matrix:null,constructor:function(config){var me=this;Ext.apply(me,config||{});me.items=new Ext.pivot.MixedCollection();me.items.getKey=function(obj){return obj.leftKey+'/'+obj.topKey;};return me.callParent(arguments);},destroy:function(){var me=this;Ext.destroy(me.items);me.matrix=me.items=null;me.callParent(arguments);},clear:function(){this.items.clear();},add:function(leftKey,topKey){var obj=this.get(leftKey,topKey);if(!obj){obj=this.items.add(Ext.Factory.pivotresult({type:this.resultType,leftKey:leftKey,topKey:topKey,matrix:this.matrix}));}
return obj;},get:function(leftKey,topKey){return this.items.getByKey(leftKey+'/'+topKey);},remove:function(leftKey,topKey){this.items.removeAtKey(leftKey+'/'+topKey);},getByLeftKey:function(leftKey){var col=this.items.filterBy(function(item,key){var keys=String(key).split('/');return(leftKey==keys[0]);});return col.getRange();},getByTopKey:function(topKey){var col=this.items.filterBy(function(item,key){var keys=String(key).split('/');return(keys.length>1&&topKey==keys[1]);});return col.getRange();},calculate:function(){var len=this.items.getCount(),i;for(i=0;i<len;i++){this.items.getAt(i).calculate();}}});Ext.define('Ext.pivot.matrix.Base',{alternateClassName:['Mz.aggregate.matrix.Abstract'],extend:'Ext.util.Observable',alias:'pivotmatrix.base',mixins:['Ext.mixin.Factoryable'],requires:['Ext.util.DelayedTask','Ext.data.ArrayStore','Ext.XTemplate','Ext.pivot.Aggregators','Ext.pivot.MixedCollection','Ext.pivot.axis.Base','Ext.pivot.dimension.Item','Ext.pivot.result.Collection'],resultType:'base',leftAxisType:'base',topAxisType:'base',textRowLabels:'Row labels',textTotalTpl:'Total ({name})',textGrandTotalTpl:'Grand total',keysSeparator:'#_#',grandTotalKey:'grandtotal',compactViewKey:'_compactview_',compactViewColumnWidth:200,viewLayoutType:'outline',rowSubTotalsPosition:'first',rowGrandTotalsPosition:'last',colSubTotalsPosition:'last',colGrandTotalsPosition:'last',showZeroAsBlank:false,leftAxis:null,topAxis:null,aggregate:null,results:null,pivotStore:null,isDestroyed:false,cmp:null,useNaturalSorting:false,collapsibleRows:true,collapsibleColumns:true,isPivotMatrix:true,serializeProperties:['viewLayoutType','rowSubTotalsPosition','rowGrandTotalsPosition','colSubTotalsPosition','colGrandTotalsPosition','showZeroAsBlank','collapsibleRows','collapsibleColumns'],constructor:function(config){var ret=this.callParent(arguments);this.initialize(true,config);return ret;},destroy:function(){var me=this;me.delayedTask.cancel();me.delayedTask=null;if(Ext.isFunction(me.onDestroy)){me.onDestroy();}
Ext.destroy(me.results,me.leftAxis,me.topAxis,me.aggregate,me.pivotStore);me.results=me.leftAxis=me.topAxis=me.aggregate=me.pivotStore=null;if(Ext.isArray(me.columns)){me.columns.length=0;}
if(Ext.isArray(me.model)){me.model.length=0;}
if(Ext.isArray(me.totals)){me.totals.length=0;}
me.columns=me.model=me.totals=me.keysMap=me.cmp=me.modelInfo=null;me.isDestroyed=true;me.callParent(arguments);},getKey:function(value){var me=this;me.keysMap=me.keysMap||{};if(!Ext.isDefined(me.keysMap[value])){me.keysMap[value]=Ext.id();}
return me.keysMap[value];},naturalSort:(function(){var re=/(^([+\-]?(?:\d*)(?:\.\d*)?(?:[eE][+\-]?\d+)?)?$|^0x[\da-fA-F]+$|\d+)/g,sre=/^\s+|\s+$/g,snre=/\s+/g,dre=/(^([\w ]+,?[\w ]+)?[\w ]+,?[\w ]+\d+:\d+(:\d+)?[\w ]?|^\d{1,4}[\/\-]\d{1,4}[\/\-]\d{1,4}|^\w+, \w+ \d+, \d{4})/,hre=/^0x[0-9a-f]+$/i,ore=/^0/,normChunk=function(s,l){s=s||'';return(!s.match(ore)||l==1)&&parseFloat(s)||s.replace(snre,' ').replace(sre,'')||0;};return function(a,b){var x=String(a instanceof Date?a.getTime():(a||'')).replace(sre,''),y=String(b instanceof Date?b.getTime():(b||'')).replace(sre,''),xN=x.replace(re,'\x00$1\x00').replace(/\0$/,'').replace(/^\0/,'').split('\x00'),yN=y.replace(re,'\x00$1\x00').replace(/\0$/,'').replace(/^\0/,'').split('\x00'),xD=parseInt(x.match(hre),16)||(xN.length!==1&&Date.parse(x)),yD=parseInt(y.match(hre),16)||xD&&y.match(dre)&&Date.parse(y)||null,oFxNcL,oFyNcL;if(yD){if(xD<yD){return-1;}else if(xD>yD){return 1;}}
for(var cLoc=0,xNl=xN.length,yNl=yN.length,numS=Math.max(xNl,yNl);cLoc<numS;cLoc++){oFxNcL=normChunk(xN[cLoc],xNl);oFyNcL=normChunk(yN[cLoc],yNl);if(isNaN(oFxNcL)!==isNaN(oFyNcL)){return(isNaN(oFxNcL))?1:-1;}
else if(typeof oFxNcL!==typeof oFyNcL){oFxNcL+='';oFyNcL+='';}
if(oFxNcL<oFyNcL){return-1;}
if(oFxNcL>oFyNcL){return 1;}}
return 0;};}()),initialize:function(firstTime,config){var me=this,props=me.serializeProperties,i;config=config||{};me.initResults();if(firstTime||config.aggregate){me.initAggregates(config.aggregate||[]);}
if(firstTime||config.leftAxis){me.initLeftAxis(config.leftAxis||[]);}
if(firstTime||config.topAxis){me.initTopAxis(config.topAxis||[]);}
for(i=0;i<props.length;i++){if(Ext.isDefined(config[props[i]])){me[props[i]]=config[props[i]];}}
me.totals=[];me.modelInfo={};me.keysMap=null;if(!firstTime){if(!me.collapsibleRows){me.leftAxis.expandAll();}
if(!me.collapsibleColumns){me.topAxis.expandAll();}}
if(firstTime){me.pivotStore=new Ext.data.ArrayStore({autoDestroy:false,fields:[]});me.delayedTask=new Ext.util.DelayedTask(me.startProcess,me);if(Ext.isFunction(me.onInitialize)){me.onInitialize();}}
me.delayedTask.delay(5);},onInitialize:Ext.emptyFn,onDestroy:Ext.emptyFn,reconfigure:function(config){var me=this,cfg=Ext.clone(config||{});if(me.fireEvent('beforereconfigure',me,cfg)!==false){if(Ext.isFunction(me.onReconfigure)){me.onReconfigure(cfg);}
me.fireEvent('reconfigure',me,cfg);me.initialize(false,cfg);me.clearData();}else{me.delayedTask.cancel();}},onReconfigure:Ext.emptyFn,serialize:function(){var me=this,props=me.serializeProperties,len=props.length,cfg={},i,prop;for(i=0;i<len;i++){prop=props[i];cfg[prop]=me[prop];}
cfg.leftAxis=me.serializeDimensions(me.leftAxis.dimensions);cfg.topAxis=me.serializeDimensions(me.topAxis.dimensions);cfg.aggregate=me.serializeDimensions(me.aggregate);return cfg;},serializeDimensions:function(dimensions){var len=dimensions.getCount(),cfg=[],i;for(i=0;i<len;i++){cfg.push(dimensions.getAt(i).serialize());}
return cfg;},initResults:function(){Ext.destroy(this.results);this.results=new Ext.pivot.result.Collection({resultType:this.resultType,matrix:this});},initAggregates:function(dimensions){var me=this,i,item;Ext.destroy(me.aggregate);me.aggregate=new Ext.pivot.MixedCollection();me.aggregate.getKey=function(item){return item.getId();};if(Ext.isEmpty(dimensions)){return;}
dimensions=Ext.Array.from(dimensions);for(i=0;i<dimensions.length;i++){item=dimensions[i];if(!item.isInstance){Ext.applyIf(item,{isAggregate:true,align:'right',showZeroAsBlank:me.showZeroAsBlank});item=new Ext.pivot.dimension.Item(item);}
item.matrix=this;me.aggregate.add(item);}},initLeftAxis:function(dimensions){var me=this;dimensions=Ext.Array.from(dimensions||[]);Ext.destroy(me.leftAxis);me.leftAxis=Ext.Factory.pivotaxis({type:me.leftAxisType,matrix:me,dimensions:dimensions,isLeftAxis:true});},initTopAxis:function(dimensions){var me=this;dimensions=Ext.Array.from(dimensions||[]);Ext.destroy(me.topAxis);me.topAxis=Ext.Factory.pivotaxis({type:me.topAxisType,matrix:me,dimensions:dimensions,isLeftAxis:false});},clearData:function(){var me=this;me.fireEvent('cleardata',me);me.leftAxis.clear();me.topAxis.clear();me.results.clear();if(Ext.isArray(me.columns)){me.columns.length=0;}
if(Ext.isArray(me.model)){me.model.length=0;}
me.totals=[];me.modelInfo={};me.keysMap=null;if(me.pivotStore){me.pivotStore.removeAll(true);}},startProcess:Ext.emptyFn,endProcess:function(){var me=this;me.leftAxis.getTree();me.topAxis.getTree();me.buildModelAndColumns();me.buildPivotStore();if(Ext.isFunction(me.onBuildStore)){me.onBuildStore(me.pivotStore);}
me.fireEvent('storebuilt',me,me.pivotStore);me.fireEvent('done',me);},onBuildModel:Ext.emptyFn,onBuildColumns:Ext.emptyFn,onBuildRecord:Ext.emptyFn,onBuildTotals:Ext.emptyFn,onBuildStore:Ext.emptyFn,buildModelAndColumns:function(){var me=this;me.model=[{name:'id',type:'string'},{name:'isRowGroupHeader',type:'boolean',defaultValue:false},{name:'isRowGroupTotal',type:'boolean',defaultValue:false},{name:'isRowGrandTotal',type:'boolean',defaultValue:false},{name:'leftAxisKey',type:'string',defaultValue:null}];me.internalCounter=0;me.columns=[];if(me.viewLayoutType=='compact'){me.generateCompactLeftAxis();}else{me.leftAxis.dimensions.each(me.parseLeftAxisDimension,me);}
if(me.colGrandTotalsPosition=='first'){me.columns.push(me.parseAggregateForColumn(null,{text:me.textGrandTotalTpl,grandTotal:true}));}
Ext.Array.each(me.topAxis.getTree(),me.parseTopAxisItem,me);if(me.colGrandTotalsPosition=='last'){me.columns.push(me.parseAggregateForColumn(null,{text:me.textGrandTotalTpl,grandTotal:true}));}
if(Ext.isFunction(me.onBuildModel)){me.onBuildModel(me.model);}
me.fireEvent('modelbuilt',me,me.model);if(Ext.isFunction(me.onBuildColumns)){me.onBuildColumns(me.columns);}
me.fireEvent('columnsbuilt',me,me.columns);},getDefaultFieldInfo:function(config){return Ext.apply({isColGroupTotal:false,isColGrandTotal:false,leftAxisColumn:false,topAxisColumn:false,topAxisKey:null},config);},parseLeftAxisDimension:function(dimension){var me=this,id=dimension.getId();me.model.push({name:id,type:'auto'});me.columns.push(Ext.merge({dataIndex:id,text:dimension.header,dimension:dimension,leftAxis:true},dimension.column));me.modelInfo[id]=me.getDefaultFieldInfo({leftAxisColumn:true});},generateCompactLeftAxis:function(){var me=this;me.model.push({name:me.compactViewKey,type:'auto'});me.columns.push({dataIndex:me.compactViewKey,text:me.textRowLabels,leftAxis:true,width:me.compactViewColumnWidth});me.modelInfo[me.compactViewKey]=me.getDefaultFieldInfo({leftAxisColumn:true});},parseTopAxisItem:function(item){var me=this,columns=[],retColumns=[],o1,o2,len,i,ret;if(!item.children){columns=me.parseAggregateForColumn(item,null);if(item.level===0){me.columns.push(columns);}else{return columns;}}else{if(me.colSubTotalsPosition=='first'){o2=me.addColSummary(item);if(o2){retColumns.push(o2);}}
len=item.children.length;for(i=0;i<len;i++){ret=me.parseTopAxisItem(item.children[i]);if(Ext.isArray(ret)){Ext.Array.insert(columns,columns.length,ret);}else{columns.push(ret);}}
o1={text:item.name,group:item,columns:columns,key:item.key,xexpandable:true,xgrouped:true};if(item.level===0){me.columns.push(o1);}
retColumns.push(o1);if(me.colSubTotalsPosition=='last'){o2=me.addColSummary(item);if(o2){retColumns.push(o2);}}
if(me.colSubTotalsPosition=='none'){o2=me.addColSummary(item);if(o2){retColumns.push(o2);}}
return retColumns;}},addColSummary:function(item){var me=this,o2,doAdd=false;o2=me.parseAggregateForColumn(item,{text:item.expanded?item.getTextTotal():item.name,group:item,subTotal:true});if(item.level===0){me.columns.push(o2);}
Ext.apply(o2,{key:item.key,xexpandable:true,xgrouped:true});return o2;},parseAggregateForColumn:function(item,config){var me=this,columns=[],column={},dimensions=me.aggregate.getRange(),length=dimensions.length,i,agg;for(i=0;i<length;i++){agg=dimensions[i];me.internalCounter++;me.model.push({name:'c'+me.internalCounter,type:'auto',defaultValue:undefined,useNull:true,col:item?item.key:me.grandTotalKey,agg:agg.getId()});columns.push(Ext.merge({dataIndex:'c'+me.internalCounter,text:agg.header,topAxis:true,subTotal:(config?config.subTotal===true:false),grandTotal:(config?config.grandTotal===true:false),dimension:agg},agg.column));me.modelInfo['c'+me.internalCounter]=me.getDefaultFieldInfo({isColGroupTotal:(config?config.subTotal===true:false),isColGrandTotal:(config?config.grandTotal===true:false),topAxisColumn:true,topAxisKey:item?item.key:me.grandTotalKey});}
if(columns.length==0&&me.aggregate.getCount()==0){me.internalCounter++;column=Ext.apply({text:item?item.name:'',dataIndex:'c'+me.internalCounter},config||{});}else if(columns.length==1){column=Ext.applyIf({text:item?item.name:''},columns[0]);Ext.apply(column,config||{});if(config&&config.grandTotal&&me.aggregate.getCount()==1){column.text=me.aggregate.getAt(0).header||config.text;}}else{column=Ext.apply({text:item?item.name:'',columns:columns},config||{});}
return column;},buildPivotStore:function(){var me=this;if(Ext.isFunction(me.pivotStore.model.setFields)){me.pivotStore.model.setFields(me.model);}else{me.pivotStore.model.replaceFields(me.model,true);}
me.pivotStore.removeAll(true);Ext.Array.each(me.leftAxis.getTree(),me.addRecordToPivotStore,me);me.addGrandTotalsToPivotStore();},addGrandTotalsToPivotStore:function(){var me=this,totals=[],len,i,t;totals.push({title:me.textGrandTotalTpl,values:me.preparePivotStoreRecordData({key:me.grandTotalKey},{isRowGrandTotal:true})});if(Ext.isFunction(me.onBuildTotals)){me.onBuildTotals(totals);}
me.fireEvent('buildtotals',me,totals);len=totals.length;for(i=0;i<len;i++){t=totals[i];if(Ext.isObject(t)&&Ext.isObject(t.values)){Ext.applyIf(t.values,{isRowGrandTotal:true});me.totals.push({title:t.title||'',record:me.pivotStore.add(t.values)[0]});}}},addRecordToPivotStore:function(item){var me=this,record,dataIndex;if(!item.children){record=me.pivotStore.add(me.preparePivotStoreRecordData(item))[0];item.record=record;if(Ext.isFunction(me.onBuildRecord)){me.onBuildRecord(record,item);}
me.fireEvent('recordbuilt',me,record,item);}else{item.records={};dataIndex=(me.viewLayoutType==='compact'?me.compactViewKey:item.dimensionId);item.records.collapsed=me.pivotStore.add(me.preparePivotStoreRecordData(item,{isRowGroupHeader:true,isRowGroupTotal:true}))[0];if(me.rowSubTotalsPosition==='first'&&me.viewLayoutType!=='tabular'){item.records.expanded=me.pivotStore.add(me.preparePivotStoreRecordData(item,{isRowGroupHeader:true}))[0];}else{record={};record[dataIndex]=item.name;record.isRowGroupHeader=true;item.records.expanded=me.pivotStore.add(record)[0];if(me.rowSubTotalsPosition==='last'||me.viewLayoutType==='tabular'){record=me.preparePivotStoreRecordData(item,{isRowGroupTotal:true});record[dataIndex]=item.getTextTotal();item.records.footer=me.pivotStore.add(record)[0];}}
Ext.Array.each(item.children,me.addRecordToPivotStore,me);}},preparePivotStoreRecordData:function(group,values){var me=this,data={},len=me.model.length,i,field,result;if(group){if(group.dimensionId){data[group.dimensionId]=group.name;}
data.leftAxisKey=group.key;for(i=0;i<len;i++){field=me.model[i];if(field.col&&field.agg){result=me.results.items.map[group.key+'/'+field.col];data[field.name]=result?result.values[field.agg]:null;}}
if(me.viewLayoutType==='compact'){data[me.compactViewKey]=group.name;}}
return Ext.applyIf(data,values);},getColumns:function(){return this.model;},getColumnHeaders:function(){var me=this;if(!me.model){me.buildModelAndColumns();}
return me.columns;},isGroupRow:function(key){var obj=this.leftAxis.findTreeElement('key',key);if(!obj){return false;}
return(obj.node.children&&obj.node.children.length==0)?0:obj.level;},isGroupCol:function(key){var obj=this.topAxis.findTreeElement('key',key);if(!obj){return false;}
return(obj.node.children&&obj.node.children.length==0)?0:obj.level;},deprecated:{'6.0':{properties:{mztype:'type',mztypeLeftAxis:'leftAxisType',mztypeTopAxis:'topAxisType'}}}});Ext.define('Ext.pivot.result.Local',{extend:'Ext.pivot.result.Base',alias:'pivotresult.local',alternateClassName:['Mz.aggregate.matrix.Result'],records:null,constructor:function(config){this.records=[];return this.callParent(arguments);},destroy:function(){this.records.length=0;this.records=null;return this.callParent(arguments);},calculate:function(){var me=this,i,dimension,length=me.matrix.aggregate.getCount();for(i=0;i<length;i++){dimension=me.matrix.aggregate.getAt(i);me.addValue(dimension.getId(),Ext.callback(dimension.aggregatorFn,dimension.getScope()||'self.controller',[me.records,dimension.dataIndex,me.matrix,me.leftKey,me.topKey],0,me.matrix.cmp));}},calculateByFn:function(key,dataIndex,aggFn){var me=this,v;if(Ext.isString(aggFn)){aggFn=Ext.pivot.Aggregators[aggFn];}
if(!Ext.isFunction(aggFn)){Ext.raise('Invalid function provided!');}
v=aggFn(me.records,dataIndex,me.matrix,me.leftKey,me.topKey);me.addValue(key,v);return v;},addRecord:function(record){this.records.push(record);},removeRecord:function(record){Ext.Array.remove(this.records,record);}});Ext.define('Ext.pivot.matrix.Local',{alternateClassName:['Mz.aggregate.matrix.Local'],extend:'Ext.pivot.matrix.Base',alias:'pivotmatrix.local',requires:['Ext.pivot.matrix.Base','Ext.pivot.axis.Local','Ext.pivot.result.Local'],isLocalMatrix:true,resultType:'local',leftAxisType:'local',topAxisType:'local',store:null,recordsPerJob:1000,timeBetweenJobs:2,onInitialize:function(){var me=this;me.localDelayedTask=new Ext.util.DelayedTask(me.delayedProcess,me);me.storeCleanDelayedTask=new Ext.util.DelayedTask(me.onOriginalStoreCleanDelayed,me);me.storeChangedDelayedTask=new Ext.util.DelayedTask(me.onOriginalStoreChangedDelayed,me);me.initializeStore({store:me.store});me.callParent(arguments);},initializeStore:function(config){var me=this,store,newStore;me.processedRecords={};if(config.store){newStore=config.store;}else{if(me.store){if(me.store.isStore&&!me.storeListeners){store=me.store;}else{newStore=me.store;}}}
if(newStore){store=Ext.getStore(newStore||'');if(Ext.isEmpty(store)&&Ext.isString(newStore)){store=Ext.create(newStore);}}
if(store&&store.isStore){Ext.destroy(me.storeListeners);if(me.store&&me.store.autoDestroy&&store!=me.store){Ext.destroy(me.store);}
me.store=store;me.storeListeners=me.store.on({refresh:me.startProcess,beforeload:me.onOriginalStoreBeforeLoad,add:me.onOriginalStoreAdd,update:me.onOriginalStoreUpdate,remove:me.onOriginalStoreRemove,commit:me.onOriginalStoreClean,reject:me.onOriginalStoreClean,clear:me.startProcess,scope:me,destroyable:true});if(store.isLoaded()){me.startProcess();}}},onReconfigure:function(config){this.initializeStore(config);this.callParent(arguments);},onDestroy:function(){var me=this;me.localDelayedTask.cancel();me.localDelayedTask=null;me.storeCleanDelayedTask.cancel();me.storeCleanDelayedTask=null;me.storeChangedDelayedTask.cancel();me.storeChangedDelayedTask=null;if(Ext.isArray(me.records)){me.records.length=0;}
me.records=me.changedRecords=null;Ext.destroy(me.storeListeners);if(me.store&&me.store.isStore&&me.store.autoDestroy){Ext.destroy(me.store);}
me.store=me.storeListeners=me.processedRecords=null;me.callParent(arguments);},onOriginalStoreBeforeLoad:function(store){this.fireEvent('start',this);},createStoreChangesQueue:function(){var me=this;me.changedRecords=me.changedRecords||{};me.changedRecords.add=me.changedRecords.add||[];me.changedRecords.update=me.changedRecords.update||[];me.changedRecords.remove=me.changedRecords.remove||[];},dropStoreChangesQueue:function(){var me=this;if(me.changedRecords){me.changedRecords.add.length=0;me.changedRecords.update.length=0;me.changedRecords.remove.length=0;}},onOriginalStoreAdd:function(store,records){var me=this;me.createStoreChangesQueue();Ext.Array.insert(me.changedRecords.add,me.changedRecords.add.length,records);me.storeChangedDelayedTask.delay(100);},onOriginalStoreUpdate:function(store,record){var me=this;me.createStoreChangesQueue();if(Ext.Array.indexOf(me.changedRecords.add,record)<0){Ext.Array.insert(me.changedRecords.update,me.changedRecords.update.length,[record]);}
me.storeChangedDelayedTask.delay(100);},onOriginalStoreRemove:function(store,records,index,isMove){var me=this,len=records.length,i;if(isMove){return;}
me.createStoreChangesQueue();for(i=0;i<len;i++){Ext.Array.remove(me.changedRecords.update,records[i]);Ext.Array.remove(me.changedRecords.add,records[i]);}
Ext.Array.insert(me.changedRecords.remove,me.changedRecords.remove.length,records);me.storeChangedDelayedTask.delay(100);},onOriginalStoreChangedDelayed:function(){var me=this,records=me.changedRecords;if(me.isDestroyed){return;}
me.storeChanged=!!(records.add.length||records.update.length||records.remove.length);if(me.storeChanged){me.onOriginalStoreAddDelayed();me.onOriginalStoreUpdateDelayed();me.onOriginalStoreRemoveDelayed();}},onOriginalStoreAddDelayed:function(){var me=this,items=[],changed=false,len,i,records,record,obj;records=me.changedRecords.add;len=records.length;if(!len){return;}
for(i=0;i<len;i++){record=records[i];me.processRecord(record,i,len);obj=me.processedRecords[record.internalId];changed=changed||obj.left.length||obj.top.length;if(obj.left.length){Ext.Array.insert(items,items.length,obj.left);}}
records.length=0;if(changed){me.leftAxis.rebuildTree();me.topAxis.rebuildTree();}
len=items.length;if(len){for(i=0;i<len;i++){obj=items[i];if((obj.children&&!obj.records)||(!obj.children&&!obj.record)){me.addRecordToPivotStore(obj);}}}
me.recalculateResults(me.store,records,changed);},onOriginalStoreUpdateDelayed:function(){var me=this,items=[],changed=false,len,i,j,records,record,obj,prev,current,sameLeft,sameTop;records=me.changedRecords.update;len=records.length;if(!len){return;}
for(i=0;i<len;i++){record=records[i];prev=me.processedRecords[record.internalId];me.removeRecordFromResults(record);me.processRecord(record,i,len);current=me.processedRecords[record.internalId];if(prev&&current){sameLeft=Ext.Array.equals(prev.left,current.left);sameTop=Ext.Array.equals(prev.top,current.top);changed=changed||!sameLeft||!sameTop;if(!sameLeft){Ext.Array.insert(items,items.length,current.left);}}}
records.length=0;if(changed){me.leftAxis.rebuildTree();me.topAxis.rebuildTree();}
len=items.length;for(i=0;i<len;i++){obj=items[i];if((obj.children&&!obj.records)||(!obj.children&&!obj.record)){me.addRecordToPivotStore(obj);}}
me.recalculateResults(me.store,records,changed);},onOriginalStoreRemoveDelayed:function(){var me=this,len,i,records,changed;records=me.changedRecords.remove;len=records.length;if(!len){return;}
for(i=0;i<len;i++){changed=me.removeRecordFromResults(records[i])||changed;}
records.length=0;if(changed){me.leftAxis.rebuildTree();me.topAxis.rebuildTree();}
me.recalculateResults(me.store,records,changed);},onOriginalStoreClean:function(){var me=this;if(me.localDelayedTask.id){me.dropStoreChangesQueue();me.storeChanged=false;}else{me.storeCleanDelayedTask.delay(100);}},onOriginalStoreCleanDelayed:function(){var me=this,records,length,i;if(me.isDestroyed){return;}
records=me.pivotStore.getRange();length=records.length;for(i=0;i<length;i++){records[i].commit(true);}
me.storeChanged=false;me.fireEvent('afterupdate',me,false);},removeRecordFromResults:function(record){var me=this,obj=me.processedRecords[record.internalId],grandTotalKey=me.grandTotalKey,changed=false,result,item,i,j,len,length;if(!obj){return changed;}
result=me.results.get(grandTotalKey,grandTotalKey);if(result){result.removeRecord(record);if(result.records.length===0){me.results.remove(grandTotalKey,grandTotalKey);}}
len=obj.top.length;for(i=0;i<len;i++){item=obj.top[i];result=me.results.get(grandTotalKey,item.key);if(result){result.removeRecord(record);if(result.records.length===0){me.results.remove(grandTotalKey,item.key);me.topAxis.items.remove(item);changed=true;}}}
len=obj.left.length;for(i=0;i<len;i++){item=obj.left[i];result=me.results.get(item.key,grandTotalKey);if(result){result.removeRecord(record);if(result.records.length===0){me.results.remove(item.key,grandTotalKey);me.leftAxis.items.remove(item);changed=true;}}
length=obj.top.length;for(j=0;j<length;j++){result=me.results.get(obj.left[i].key,obj.top[j].key);if(result){result.removeRecord(record);if(result.records.length===0){me.results.remove(obj.left[i].key,obj.top[j].key);}}}}
return changed;},recalculateResults:function(store,records,changed){var me=this;me.fireEvent('beforeupdate',me,changed);me.buildModelAndColumns();me.results.calculate();Ext.Array.each(me.leftAxis.getTree(),me.updateRecordToPivotStore,me);me.updateGrandTotalsToPivotStore();me.fireEvent('afterupdate',me,changed);},updateGrandTotalsToPivotStore:function(){var me=this,totals=[],i;if(me.totals.length<=0){return;}
totals.push({title:me.textGrandTotalTpl,values:me.preparePivotStoreRecordData({key:me.grandTotalKey})});if(Ext.isFunction(me.onBuildTotals)){me.onBuildTotals(totals);}
me.fireEvent('buildtotals',me,totals);if(me.totals.length===totals.length){for(i=0;i<me.totals.length;i++){if(Ext.isObject(totals[i])&&Ext.isObject(totals[i].values)&&(me.totals[i].record instanceof Ext.data.Model)){delete(totals[i].values.id);me.totals[i].record.set(totals[i].values);}}}},updateRecordToPivotStore:function(item){var me=this,dataIndex,data;if(!item.children){if(item.record){data=me.preparePivotStoreRecordData(item);delete(data['id']);item.record.set(data);}}else{if(item.records){dataIndex=(me.viewLayoutType==='compact'?me.compactViewKey:item.dimensionId);data=me.preparePivotStoreRecordData(item);delete(data['id']);delete(data[dataIndex]);item.records.collapsed.set(data);if(item.records.expanded){item.records.expanded.set(data);}
if(item.records.footer){item.records.footer.set(data);}}
Ext.Array.each(item.children,me.updateRecordToPivotStore,me);}},startProcess:function(){var me=this;if(!me.store||(me.store&&!me.store.isStore)||me.isDestroyed||me.store.isLoading()){return;}
me.dropStoreChangesQueue();me.clearData();me.localDelayedTask.delay(50);},delayedProcess:function(){var me=this;if(me.isDestroyed){return;}
me.fireEvent('start',me);me.records=me.store.getRange();if(me.records.length==0){me.endProcess();return;}
me.statusInProgress=false;me.processRecords(0);},processRecords:function(position){var me=this,i=position,totalLength;if(me.isDestroyed){return;}
totalLength=me.records.length;me.statusInProgress=true;while(i<totalLength&&i<position+me.recordsPerJob&&me.statusInProgress){me.processRecord(me.records[i],i,totalLength);i++;}
if(i>=totalLength){me.statusInProgress=false;me.results.calculate();me.leftAxis.buildTree();me.topAxis.buildTree();if(me.filterApplied){me.results.calculate();}
me.records=null;me.endProcess();return;}
if(me.statusInProgress&&totalLength>0){Ext.defer(me.processRecords,me.timeBetweenJobs,me,[i]);}},processRecord:function(record,index,total){var me=this,grandTotalKey=me.grandTotalKey,leftItems,topItems,i,j,len,length,records,item;me.processedRecords[record.internalId]=records={left:[],top:[]};leftItems=me.leftAxis.processRecord(record);topItems=me.topAxis.processRecord(record);if(leftItems&&topItems){me.results.add(grandTotalKey,grandTotalKey).addRecord(record);len=topItems.length;for(i=0;i<len;i++){item=topItems[i];me.topAxis.addItem(item);records.top.push(me.topAxis.items.map[item.key]);me.results.add(grandTotalKey,item.key).addRecord(record);}
length=leftItems.length;for(i=0;i<length;i++){item=leftItems[i];me.leftAxis.addItem(item);records.left.push(me.leftAxis.items.map[item.key]);me.results.add(item.key,grandTotalKey).addRecord(record);for(j=0;j<len;j++){me.results.add(item.key,topItems[j].key).addRecord(record);}}}
me.fireEvent('progress',me,index+1,total);},getRecordsByRowGroup:function(key){var results=this.results.getByLeftKey(key),length=results.length,records=[],i;for(i=0;i<length;i++){Ext.Array.insert(records,records.length,results[i].records||[]);}
return records;},getRecordsByColGroup:function(key){var results=this.results.getByTopKey(key),length=results.length,records=[],i;for(i=0;i<length;i++){Ext.Array.insert(records,records.length,results[i].records||[]);}
return records;},getRecordsByGroups:function(rowKey,colKey){var result=this.results.get(rowKey,colKey);return(result?result.records||[]:[]);}});Ext.define('Ext.pivot.matrix.Remote',{alternateClassName:['Mz.aggregate.matrix.Remote'],extend:'Ext.pivot.matrix.Base',alias:'pivotmatrix.remote',isRemoteMatrix:true,url:'',timeout:3000,onBeforeRequest:Ext.emptyFn,onRequestException:Ext.emptyFn,onInitialize:function(){var me=this;me.remoteDelayedTask=new Ext.util.DelayedTask(me.delayedProcess,me);me.callParent(arguments);},onDestroy:function(){this.remoteDelayedTask.cancel();this.remoteDelayedTask=null;this.callParent();},startProcess:function(){var me=this;if(Ext.isEmpty(me.url)){return;}
me.clearData();me.fireEvent('start',me);me.statusInProgress=false;me.remoteDelayedTask.delay(5);},delayedProcess:function(){var me=this,matrix=me.serialize(),ret,params;params={keysSeparator:me.keysSeparator,grandTotalKey:me.grandTotalKey,leftAxis:matrix.leftAxis,topAxis:matrix.topAxis,aggregate:matrix.aggregate};ret=me.fireEvent('beforerequest',me,params);if(ret!==false){if(Ext.isFunction(me.onBeforeRequest)){ret=me.onBeforeRequest(params);}}
if(ret===false){me.endProcess();}else{Ext.Ajax.request({url:me.url,timeout:me.timeout,jsonData:params,callback:me.processRemoteResults,scope:me});}},processRemoteResults:function(options,success,response){var me=this,exception=!success,data=Ext.JSON.decode(response.responseText,true),items,item,len,i;if(success){exception=(!data||!data['success']);}
if(exception){me.fireEvent('requestexception',me,response);if(Ext.isFunction(me.onRequestException)){me.onRequestException(response);}
me.endProcess();return;}
items=Ext.Array.from(data.leftAxis||[]);len=items.length;for(i=0;i<len;i++){item=items[i];if(Ext.isObject(item)){me.leftAxis.addItem(item);}}
items=Ext.Array.from(data.topAxis||[]);len=items.length;for(i=0;i<len;i++){item=items[i];if(Ext.isObject(item)){me.topAxis.addItem(item);}}
items=Ext.Array.from(data.results||[]);len=items.length;for(i=0;i<len;i++){item=items[i];if(Ext.isObject(item)){var result=me.results.add(item.leftKey||'',item.topKey||'');Ext.Object.each(item.values||{},result.addValue,result);}}
me.endProcess();}});Ext.define('Ext.pivot.plugin.Exporter',{alternateClassName:['Mz.pivot.plugin.ExcelExport'],alias:['plugin.pivotexporter','plugin.mzexcelexport'],extend:'Ext.exporter.Plugin',lockableScope:'top',init:function(cmp){var me=this;if(!cmp.isPivotGrid){Ext.raise('This plugin is only compatible with Ext.pivot.Grid');}
return me.callParent([cmp]);},prepareData:function(config){var me=this,table=new Ext.exporter.data.Table(),matrix,group,columns,headers,total,i,j,dLen,tLen,dataIndexes,row,value,cells;me.matrix=matrix=me.cmp.getMatrix();me.onlyExpandedNodes=(config&&config.onlyExpandedNodes);if(!me.onlyExpandedNodes){me.setColumnsExpanded(matrix.topAxis.getTree(),true);}
columns=Ext.clone(matrix.getColumnHeaders());headers=me.getColumnHeaders(columns,config);dataIndexes=me.getDataIndexColumns(columns);if(!me.onlyExpandedNodes){me.setColumnsExpanded(matrix.topAxis.getTree());}
group={text:'',groups:[]};me.extractGroups(group,matrix.leftAxis.getTree(),dataIndexes);tLen=matrix.totals.length;dLen=dataIndexes.length;if(tLen){group.summaries=[];for(i=0;i<tLen;i++){total=matrix.totals[i];row={cells:[{value:total.title}]};for(j=1;j<dLen;j++){value=total.record.data[dataIndexes[j].dataIndex];row.cells.push({value:(value==null||value===0)&&matrix.showZeroAsBlank?'':value});}
group.summaries.push(row);}}
me.matrix=me.onlyExpandedNodes=null;table.addGroup(group);table.setColumns(headers);return table;},setColumnsExpanded:function(items,expanded){for(var i=0;i<items.length;i++){if(Ext.isDefined(expanded)){items[i].backupExpanded=items[i].expanded;items[i].expanded=expanded;}else{items[i].expanded=items[i].backupExpanded;items[i].backupExpanded=null;}
if(items[i].children){this.setColumnsExpanded(items[i].children,expanded);}}},getColumnHeaders:function(columns,config){var cols=[],length=columns.length,i,obj,col,doExtract;for(i=0;i<length;i++){col=columns[i];doExtract=this.onlyExpandedNodes?(!col.group||col.group.expanded||(!col.group.expanded&&col.subTotal)):true;if(doExtract){obj={text:(col.subTotal&&col.group&&col.group.expanded?col.group.getTextTotal():col.text)};if(col.columns){obj.columns=this.getColumnHeaders(col.columns,config);}else{obj.width=col.dimension?col.dimension.getWidth():col.width||100;obj.style=col.dimension?this.getExportStyle(col.dimension.getExportStyle(),config):null;}
cols.push(obj);}}
return cols;},getDataIndexColumns:function(columns){var cols=[],i,col,doExtract;for(i=0;i<columns.length;i++){col=columns[i];doExtract=this.onlyExpandedNodes?(!col.group||col.group.expanded||(!col.group.expanded&&col.subTotal)):true;if(doExtract){if(col.dataIndex){cols.push({dataIndex:col.dataIndex,agg:col.dimension?col.dimension.getId():null});}else if(col.columns){Ext.Array.insert(cols,cols.length,this.getDataIndexColumns(col.columns));}}}
return cols;},extractGroups:function(group,items,columns){var i,j,iLen,cLen,doExtract,item,row,subGroup,record,value,cells;iLen=items.length;for(i=0;i<iLen;i++){item=items[i];if(item.record){group.rows=group.rows||[];cells=[];row={cells:cells};for(j=0;j<columns.length;j++){value=item.record.data[columns[j].dataIndex];cells.push({value:(value==null||value===0)&&this.matrix.showZeroAsBlank?'':value});}
group.rows.push(row);}else if(item.children){group.groups=group.groups||[];subGroup={text:item.name};doExtract=this.onlyExpandedNodes?item.expanded:true;if(doExtract){this.extractGroups(subGroup,item.children,columns);}
subGroup.summaries=[];cells=[{value:(doExtract?item.getTextTotal():item.value)}];row={cells:cells};record=(item.expanded?item.records.expanded:item.records.collapsed);cLen=columns.length;for(j=1;j<cLen;j++){value=record.data[columns[j].dataIndex];cells.push({value:(value==null||value===0)&&this.matrix.showZeroAsBlank?'':value});}
subGroup.summaries.push(row);group.groups.push(subGroup);}}}});Ext.define('Ext.pivot.plugin.configurator.FieldSettings',{$configStrict:false,config:{cls:'',style:null,fixed:[],allowed:['leftAxis','topAxis','aggregate'],aggregators:['sum','avg','min','max','count','groupSumPercentage','groupCountPercentage','variance','varianceP','stdDev','stdDevP'],renderers:{},formatters:{}},isFieldSettings:true,constructor:function(config){this.initConfig(config||{});return this.callParent(arguments);},getDefaultEmptyArray:function(prop){var ret=this['_'+prop];if(!ret){ret=[];this['set'+Ext.String.capitalize(prop)](ret);}
return ret;},applyArrayValues:function(prop,newValue,oldValue){if(newValue==null||(newValue&&Ext.isArray(newValue))){return newValue;}
if(newValue){if(!oldValue){oldValue=this['get'+Ext.String.capitalize(prop)]();}
Ext.Array.splice(oldValue,0,oldValue.length,newValue);}
return oldValue;},getFixed:function(){return this.getDefaultEmptyArray('fixed');},applyFixed:function(newValue,oldValue){return this.applyArrayValues('fixed',newValue,oldValue);},getAllowed:function(){return this.getDefaultEmptyArray('allowed');},applyAllowed:function(newValue,oldValue){return this.applyArrayValues('allowed',newValue,oldValue);},getAggregators:function(){return this.getDefaultEmptyArray('aggregators');},applyAggregators:function(newValue,oldValue){return this.applyArrayValues('aggregators',newValue,oldValue);},isFixed:function(fromContainer){var type;if(!fromContainer){return false;}
type=fromContainer.getFieldType();return Ext.Array.indexOf(this.getFixed(),type)>=0;},isAllowed:function(toContainer){var fixed=this.getFixed(),type;if(!toContainer){return false;}
type=toContainer.getFieldType();if(fixed.length){return Ext.Array.indexOf(fixed,type)>=0;}
return(type==='all')||(Ext.Array.indexOf(this.getAllowed(),type)>=0);}});Ext.define('Ext.pivot.plugin.configurator.Field',{extend:'Ext.pivot.dimension.Item',requires:['Ext.pivot.plugin.configurator.FieldSettings'],config:{editor:null,settings:{}},isField:true,clone:function(){return new Ext.pivot.plugin.configurator.Field(Ext.applyIf({id:Ext.id()},this.getInitialConfig()));},getConfiguration:function(serializable){var cfg=this.callParent([serializable]);if(cfg.settings){cfg.settings=cfg.settings.getConfig();}
return cfg;},updateAggregator:function(agg,oldAgg){var settings,fns;this.callParent([agg,oldAgg]);if(agg){settings=this.getSettings();fns=settings.getAggregators();if(fns.length===0){Ext.Array.remove(settings.getAllowed(),'aggregate');}else{Ext.Array.include(fns,agg);}}},getSettings:function(){var ret=this.settings;if(!ret){ret=new Ext.pivot.plugin.configurator.FieldSettings({});this.setSettings(ret);}
return ret;},applySettings:function(settings,obj){if(settings==null||(settings&&settings.isFieldSettings)){return settings;}
if(settings){if(!obj){obj=this.getSettings();}
obj.setConfig(settings);}
if(obj){this.setAggregator(this.getAggregator());}
return obj;},getFieldText:function(){var header=this.getHeader();if(this.isAggregate){header+=' ('+this.getAggText()+')';}
return header;},getAggText:function(fn){var Agg=Ext.pivot.Aggregators,f=fn||this.getAggregator();if(Ext.isFunction(f)){return Agg.customText;}
return Agg[f+'Text']||Agg.customText;}});Ext.define('Ext.pivot.update.Base',{extend:'Ext.mixin.Observable',alias:'pivotupdate.base',mixins:['Ext.mixin.Factoryable'],config:{leftKey:null,topKey:null,matrix:null,dataIndex:null,value:null},destroy:function(){Ext.asapCancel(this.updateTimer);this.setMatrix(null);this.callParent();},getResult:function(){var matrix=this.getMatrix();return matrix?matrix.results.get(this.getLeftKey(),this.getTopKey()):null;},update:function(){var me=this;Ext.asapCancel(me.updateTimer);return new Ext.Promise(function(resolve,reject){if(!me.getMatrix()||!me.getDataIndex()){Ext.raise('Invalid configuration');}
var result=me.getResult();if(result){if(me.fireEvent('beforeupdate',me)!==false){me.updateTimer=Ext.asap(me.onUpdate,me,[result,resolve,reject]);}else{reject('Operation canceled!');}}else{reject('No Result found!');}});},onUpdate:function(result,resolve,reject){this.fireEvent('update',this);resolve(this);}});Ext.define('Ext.pivot.update.Increment',{extend:'Ext.pivot.update.Base',alias:'pivotupdate.increment',onUpdate:function(result,resolve,reject){var dataIndex=this.getDataIndex(),value=parseFloat(this.getValue()),records=result.records,len,i;if(records){len=records.length;for(i=0;i<len;i++){records[i].set(dataIndex,records[i].get(dataIndex)+value);}}
this.callParent([result,resolve,reject]);}});Ext.define('Ext.pivot.update.Overwrite',{extend:'Ext.pivot.update.Base',alias:'pivotupdate.overwrite',onUpdate:function(result,resolve,reject){if(this.destroyed){return;}
var dataIndex=this.getDataIndex(),value=this.getValue(),records=result.records,len,i;if(records){len=records.length;for(i=0;i<len;i++){records[i].set(dataIndex,value);}}
this.callParent([result,resolve,reject]);}});Ext.define('Ext.pivot.update.Percentage',{extend:'Ext.pivot.update.Base',alias:'pivotupdate.percentage',onUpdate:function(result,resolve,reject){var dataIndex=this.getDataIndex(),value=parseFloat(this.getValue()),records=result.records,len,i;if(records){len=records.length;for(i=0;i<len;i++){records[i].set(dataIndex,Math.floor(records[i].get(dataIndex)*value/100));}}
this.callParent([result,resolve,reject]);}});Ext.define('Ext.pivot.update.Uniform',{extend:'Ext.pivot.update.Base',alias:'pivotupdate.uniform',onUpdate:function(result,resolve,reject){var dataIndex=this.getDataIndex(),records=result.records,len,i,avg;if(records){len=records.length;if(len>0){avg=(parseFloat(this.getValue())/len);for(i=0;i<len;i++){records[i].set(dataIndex,avg);}}}
this.callParent([result,resolve,reject]);}});Ext.define('Ext.pivot.feature.PivotEvents',{alternateClassName:['Mz.pivot.feature.PivotEvents'],extend:'Ext.grid.feature.Feature',alias:'feature.pivotevents',requires:['Ext.pivot.feature.PivotStore'],eventPrefix:'pivotcell',eventSelector:'.'+Ext.baseCSSPrefix+'grid-cell',cellSelector:'.'+Ext.baseCSSPrefix+'grid-cell',rowSelector:'.'+Ext.baseCSSPrefix+'grid-row',groupHeaderCls:Ext.baseCSSPrefix+'pivot-grid-group-header',groupHeaderCollapsibleCls:Ext.baseCSSPrefix+'pivot-grid-group-header-collapsible',init:function(grid){this.initEventsListeners();this.callParent(arguments);},destroy:function(){var me=this;me.destroyEventsListeners();Ext.destroy(me.dataSource);me.view=me.grid=me.gridMaster=me.matrix=me.dataSource=null;me.callParent(arguments);},initEventsListeners:function(){var me=this;me.eventsViewListeners=me.view.on(Ext.apply({scope:me,destroyable:true},me.getViewListeners()||{}));me.gridListeners=me.grid.on(Ext.apply({scope:me,destroyable:true},me.getGridListeners()||{}));},getViewListeners:function(){var me=this,listeners={afterrender:me.onViewAfterRender};listeners[me.eventPrefix+'click']=me.onCellEvent;listeners[me.eventPrefix+'dblclick']=me.onCellEvent;listeners[me.eventPrefix+'contextmenu']=me.onCellEvent;return listeners;},getGridListeners:Ext.emptyFn,destroyEventsListeners:function(){Ext.destroyMembers(this,'eventsViewListeners','gridListeners');this.eventsViewListeners=this.gridListeners=null;},onViewAfterRender:function(){var me=this,lockPartner;me.gridMaster=me.view.up('pivotgrid');me.matrix=me.gridMaster.getMatrix();lockPartner=me.lockingPartner;if(lockPartner&&lockPartner.dataSource){me.dataSource=lockPartner.dataSource;}else{me.dataSource=new Ext.pivot.feature.PivotStore({store:me.grid.store,matrix:me.matrix,grid:me.gridMaster,clsGrandTotal:me.gridMaster.clsGrandTotal,clsGroupTotal:me.gridMaster.clsGroupTotal});}},getRowId:function(record){return this.view.id+'-record-'+record.internalId;},getRecord:function(row){return this.view.getRecord(row);},onCellEvent:function(view,tdCell,e){var me=this,row=Ext.fly(tdCell).findParent(me.rowSelector),record=me.getRecord(row),params={grid:me.gridMaster,view:me.view,cellEl:tdCell},colIndex,ret,eventName,column,colDef,leftKey,topKey,matrix,leftItem,topItem,recordInfo;if(!row||!record){return false;}
matrix=me.gridMaster.getMatrix();colIndex=Ext.getDom(tdCell).getAttribute('data-columnid');column=me.getColumnHeaderById(colIndex);recordInfo=me.dataSource.storeInfo[record.internalId];leftItem=recordInfo.rendererParams[column.dataIndex];if(!leftItem){leftItem=recordInfo.rendererParams['topaxis'];}
leftItem=leftItem?leftItem.group:null;leftKey=leftItem?leftItem.key:recordInfo.leftKey;row=Ext.fly(row);eventName=recordInfo.rowEvent;Ext.apply(params,{columnId:colIndex,column:column,leftKey:leftKey,leftItem:leftItem});if(Ext.fly(tdCell).hasCls(me.groupHeaderCls)){}
else if(column){eventName+='cell';colDef=me.getTopAxisGroupByDataIndex(column.dataIndex);if(colDef){topKey=colDef.col;topItem=matrix.topAxis.findTreeElement('key',topKey);Ext.apply(params,{topKey:topKey,topItem:topItem?topItem.node:null,dimensionId:colDef.agg});}}
ret=me.gridMaster.fireEvent(eventName+e.type,params,e);if(ret!==false&&e.type=='click'&&Ext.fly(tdCell).hasCls(me.groupHeaderCollapsibleCls)){if(leftItem.expanded){leftItem.collapse();me.view.focusNode(matrix.viewLayoutType==='tabular'?me.dataSource.getTabularGroupRecord(leftItem):leftItem.records.collapsed);}else{leftItem.expand();me.view.focusNode(matrix.viewLayoutType==='tabular'?me.dataSource.getTabularGroupRecord(leftItem):leftItem.records.expanded);}}
return false;},getColumnHeaderById:function(columnId){var columns=this.view.getGridColumns(),i;for(i=0;i<columns.length;i++){if(columns[i].id===columnId){return columns[i];}}},getTopAxisGroupByDataIndex:function(dataIndex){var columns=this.gridMaster.matrix.getColumns(),i;for(i=0;i<columns.length;i++){if(columns[i].name===dataIndex){return columns[i];}}}});Ext.define('Ext.pivot.feature.PivotView',{extend:'Ext.pivot.feature.PivotEvents',alias:'feature.pivotview',groupCls:Ext.baseCSSPrefix+'pivot-grid-group',groupTitleCls:Ext.baseCSSPrefix+'pivot-grid-group-title',groupHeaderCollapsedCls:Ext.baseCSSPrefix+'pivot-grid-group-header-collapsed',outlineCellHiddenCls:Ext.baseCSSPrefix+'pivot-grid-outline-cell-hidden',outlineCellGroupExpandedCls:Ext.baseCSSPrefix+'pivot-grid-outline-cell-previous-expanded',compactGroupHeaderCls:Ext.baseCSSPrefix+'pivot-grid-group-header-compact',outlineGroupHeaderCls:Ext.baseCSSPrefix+'pivot-grid-group-header-outline',tabularGroupHeaderCls:Ext.baseCSSPrefix+'pivot-grid-group-header-tabular',compactLayoutPadding:25,outerTpl:['{%','var me = this.pivotViewFeature;','if (!(me.disabled)) {','me.setup();','}','this.nextTpl.applyOut(values, out, parent);','%}',{priority:200}],rowTpl:['{%','var me = this.pivotViewFeature;','me.setupRowData(values.record, values.rowIndex, values);','values.view.renderColumnSizer(values, out);','this.nextTpl.applyOut(values, out, parent);','me.resetRenderers();','%}',{priority:200,syncRowHeights:function(firstRow,secondRow){var firstHeight,secondHeight;firstRow=Ext.fly(firstRow,'syncDest');if(firstRow){firstHeight=firstRow.offsetHeight;}
secondRow=Ext.fly(secondRow,'sycSrc');if(secondRow){secondHeight=secondRow.offsetHeight;}
if(firstRow&&secondRow){if(firstHeight>secondHeight){Ext.fly(secondRow).setHeight(firstHeight);}else if(secondHeight>firstHeight){Ext.fly(firstRow).setHeight(secondHeight);}}}}],cellTpl:['{%','values.hideCell = values.tdAttr == "hidden";\n','%}','<tpl if="!hideCell">','<td class="{tdCls}" role="{cellRole}" {tdAttr} {cellAttr:attributes}',' style="width:{column.cellWidth}px;<tpl if="tdStyle">{tdStyle}</tpl>"',' tabindex="-1" data-columnid="{[values.column.getItemId()]}">','<div {unselectableAttr} class="'+Ext.baseCSSPrefix+'grid-cell-inner {innerCls}" ','style="text-align:{align};<tpl if="style">{style}</tpl>" ','{cellInnerAttr:attributes}>{value}</div>','</td>','</tpl>',{priority:0}],rtlCellTpl:['{%','values.hideCell = values.tdAttr == "hidden";\n','%}','<tpl if="!hideCell">','<td class="{tdCls}" role="{cellRole}" {tdAttr} {cellAttr:attributes}',' style="width:{column.cellWidth}px;<tpl if="tdStyle">{tdStyle}</tpl>"',' tabindex="-1" data-columnid="{[values.column.getItemId()]}">','<div {unselectableAttr} class="'+Ext.baseCSSPrefix+'grid-cell-inner {innerCls}" ','style="text-align:{[this.getAlign(values.align)]};<tpl if="style">{style}</tpl>" ','{cellInnerAttr:attributes}>{value}</div>','</td>','</tpl>',{priority:200,rtlAlign:{right:'left',left:'right',center:'center'},getAlign:function(align){return this.rtlAlign[align];}}],init:function(grid){var me=this,view=me.view;me.callParent(arguments);view.addTpl(Ext.XTemplate.getTpl(me,'outerTpl')).pivotViewFeature=me;view.addRowTpl(Ext.XTemplate.getTpl(me,'rowTpl')).pivotViewFeature=me;view.preserveScrollOnRefresh=true;if(view.bufferedRenderer){view.bufferedRenderer.variableRowHeight=true;}else{grid.variableRowHeight=view.variableRowHeight=true;}},destroy:function(){this.columns=null;this.callParent(arguments);},setup:function(){this.columns=this.view.getGridColumns();},isRTL:function(){var me=this,grid=me.gridMaster||me.grid;if(Ext.isFunction(grid.isLocalRtl)){return grid.isLocalRtl();}
return false;},getGridListeners:function(){var me=this;return Ext.apply(me.callParent(arguments)||{},{beforerender:me.onBeforeGridRendered});},onBeforeGridRendered:function(grid){var me=this;if(me.isRTL()){me.view.addCellTpl(Ext.XTemplate.getTpl(me,'rtlCellTpl'));}else{me.view.addCellTpl(Ext.XTemplate.getTpl(me,'cellTpl'));}},vetoEvent:function(record,row,rowIndex,e){if(e.type!=='mouseover'&&e.type!=='mouseout'&&e.type!=='mouseenter'&&e.type!=='mouseleave'&&e.getTarget(this.eventSelector)){return false;}},setupRowData:function(record,idx,rowValues){var storeInfo=this.dataSource.storeInfo[record.internalId],rendererParams=storeInfo?storeInfo.rendererParams:{};rowValues.rowClasses.length=0;Ext.Array.insert(rowValues.rowClasses,0,storeInfo?storeInfo.rowClasses:[]);this.setRenderers(rendererParams);},setRenderers:function(rendererParams){var len=this.columns.length,i,column;for(i=0;i<len;i++){column=this.columns[i];if(column.leftAxis&&rendererParams[column.dataIndex]){column.savedRenderer=column.renderer;column.renderer=this[rendererParams[column.dataIndex].fn](Ext.apply({renderer:column.savedRenderer},rendererParams[column.dataIndex]));}
if(column.topAxis&&rendererParams['topaxis']){column.savedRenderer=column.renderer;column.renderer=this[rendererParams['topaxis'].fn](Ext.apply({renderer:column.savedRenderer},rendererParams[column.dataIndex]));}}},resetRenderers:function(){var len=this.columns.length,i,column;for(i=0;i<len;i++){column=this.columns[i];if(Ext.isDefined(column.savedRenderer)){column.renderer=column.savedRenderer;delete column.savedRenderer;}}},groupOutlineRenderer:function(config){var me=this,prevRenderer=config['renderer'],group=config['group'],colspan=config['colspan'],hidden=config['hidden'],previousExpanded=config['previousExpanded'],subtotalRow=config['subtotalRow'];return function(value,metaData,record,rowIndex,colIndex,store,view){if(Ext.isFunction(prevRenderer)){value=prevRenderer.apply(this,arguments);}
if(colspan>0){metaData.tdAttr='colspan = "'+colspan+'"';metaData.tdCls=me.groupHeaderCls+' '+me.outlineGroupHeaderCls;if(!subtotalRow){if(group&&group.children&&group.axis.matrix.collapsibleRows){metaData.tdCls+=' '+me.groupHeaderCollapsibleCls;if(!group.expanded){metaData.tdCls+=' '+me.groupHeaderCollapsedCls;}}
if(previousExpanded){metaData.tdCls+=' '+me.outlineCellGroupExpandedCls;}}
return'<div class="'+me.groupTitleCls+' '+me.groupCls+'">'+value+'</div>';}
if(hidden){metaData.tdAttr='hidden';}
metaData.tdCls=me.outlineCellHiddenCls;return'';};},recordOutlineRenderer:function(config){var me=this,prevRenderer=config['renderer'],group=config['group'],hidden=config['hidden'];return function(value,metaData,record,rowIndex,colIndex,store,view){if(Ext.isFunction(prevRenderer)){value=prevRenderer.apply(this,arguments);}
if(hidden){metaData.tdCls=me.outlineCellHiddenCls;return'';}
metaData.tdCls=me.groupHeaderCls+' '+me.groupTitleCls;return value;};},groupCompactRenderer:function(config){var me=this,prevRenderer=config['renderer'],group=config['group'],colspan=config['colspan'],previousExpanded=config['previousExpanded'],subtotalRow=config['subtotalRow'];return function(value,metaData,record,rowIndex,colIndex,store,view){if(Ext.isFunction(prevRenderer)){value=prevRenderer.apply(this,arguments);}
if(group.level>0){metaData.style=(me.isRTL()?'margin-right: ':'margin-left: ')+(me.compactLayoutPadding*group.level)+'px;';}
metaData.tdCls=me.groupHeaderCls+' '+me.compactGroupHeaderCls;if(!subtotalRow){if(group&&group.children&&group.axis.matrix.collapsibleRows){metaData.tdCls+=' '+me.groupHeaderCollapsibleCls;if(!group.expanded){metaData.tdCls+=' '+me.groupHeaderCollapsedCls;}}
if(previousExpanded){metaData.tdCls+=' '+me.outlineCellGroupExpandedCls;}}
return'<div class="'+me.groupTitleCls+' '+me.groupCls+'">'+value+'</div>';};},recordCompactRenderer:function(config){var me=this,prevRenderer=config['renderer'],group=config['group'];return function(value,metaData,record,rowIndex,colIndex,store,view){if(Ext.isFunction(prevRenderer)){value=prevRenderer.apply(this,arguments);}
if(group.level>0){metaData.style=(me.isRTL()?'margin-right: ':'margin-left: ')+(me.compactLayoutPadding*group.level)+'px;';}
metaData.tdCls=me.groupHeaderCls+' '+me.groupTitleCls+' '+me.compactGroupHeaderCls;return value;};},groupTabularRenderer:function(config){var me=this,prevRenderer=config['renderer'],group=config['group'],colspan=config['colspan'],hidden=config['hidden'],previousExpanded=config['previousExpanded'],subtotalRow=config['subtotalRow'];return function(value,metaData,record,rowIndex,colIndex,store,view){if(Ext.isFunction(prevRenderer)){value=prevRenderer.apply(this,arguments);}
if(colspan>0){metaData.tdAttr='colspan = "'+colspan+'"';}
metaData.tdCls=me.groupHeaderCls+' '+me.tabularGroupHeaderCls;if(!subtotalRow){if(group&&group.children&&group.axis.matrix.collapsibleRows){metaData.tdCls+=' '+me.groupHeaderCollapsibleCls;if(!group.expanded){metaData.tdCls+=' '+me.groupHeaderCollapsedCls;}}}
if(hidden){metaData.tdAttr='hidden';}
return'<div class="'+me.groupTitleCls+' '+me.groupCls+'">'+value+'</div>';};},recordTabularRenderer:function(config){var me=this,prevRenderer=config['renderer'],group=config['group'],hidden=config['hidden'];return function(value,metaData,record,rowIndex,colIndex,store,view){if(hidden){return'';}
if(Ext.isFunction(prevRenderer)){value=prevRenderer.apply(this,arguments);}
metaData.tdCls=me.groupHeaderCls+' '+me.groupTitleCls;return value;};},topAxisNoRenderer:function(config){return function(value,metaData,record,rowIndex,colIndex,store,view){return'';};},topAxisRenderer:function(config){var me=this,prevRenderer=config['renderer'];return function(value,metaData,record,rowIndex,colIndex,store,view){var hideValue=(value===0&&me.gridMaster.showZeroAsBlank);if(Ext.isFunction(prevRenderer)){value=prevRenderer.apply(this,arguments);}
return hideValue?'':value;};}});Ext.define('Ext.pivot.Grid',{extend:'Ext.grid.Panel',alternateClassName:['Mz.pivot.Grid','Mz.pivot.Table'],xtype:['pivotgrid','mzpivotgrid'],requires:['Ext.pivot.matrix.Local','Ext.pivot.matrix.Remote','Ext.pivot.feature.PivotView','Ext.data.ArrayStore'],subGridXType:'gridpanel',isPivotGrid:true,isPivotComponent:true,enableLoadMask:true,enableLocking:false,enableColumnSort:true,columnLines:true,clsGroupTotal:Ext.baseCSSPrefix+'pivot-grid-group-total',clsGrandTotal:Ext.baseCSSPrefix+'pivot-grid-grand-total',startRowGroupsCollapsed:true,startColGroupsCollapsed:true,stateEvents:['pivotgroupexpand','pivotgroupcollapse','pivotdone'],groupHeaderCollapsedCls:Ext.baseCSSPrefix+'pivot-grid-group-header-collapsed',groupHeaderCollapsibleCls:Ext.baseCSSPrefix+'pivot-grid-group-header-collapsible',groupCls:Ext.baseCSSPrefix+'pivot-grid-group',relayedMatrixEvents:['beforereconfigure','reconfigure','start','progress','done','modelbuilt','columnsbuilt','recordbuilt','buildtotals','storebuilt','groupexpand','groupcollapse','beforerequest','requestexception'],deprecatedConfigs:['matrixConfig','leftAxis','topAxis','aggregate','showZeroAsBlank','textTotalTpl','textGrandTotalTpl','viewLayoutType','rowSubTotalsPosition','rowGrandTotalsPosition','colSubTotalsPosition','colGrandTotalsPosition'],config:{matrix:{type:'local'}},initComponent:function(){var me=this;me.columns=[];me.preInitialize();me.callParent(arguments);me.postInitialize();},preInitialize:function(){var me=this;me.features=[{id:'group',ftype:'pivotview',summaryRowCls:me.clsGroupTotal,grandSummaryRowCls:me.clsGrandTotal}];me.addCls(Ext.baseCSSPrefix+'pivot-grid');if(me.store){me.originalStore=me.store;}
me.store=new Ext.data.ArrayStore({fields:[]});me.enableColumnMove=false;},postInitialize:function(){var me=this,headerListener={headerclick:me.onHeaderClick,scope:me,destroyable:true},view=me.getView(),deprecated=[],configs=me.deprecatedConfigs,len=configs.length,matrix=me.getMatrix(),i,cfg,temp;if(me.enableLocking){me.lockedHeaderCtListeners=view.lockedView.getHeaderCt().on(headerListener);me.headerCtListeners=view.normalView.getHeaderCt().on(headerListener);}else{me.headerCtListeners=view.getHeaderCt().on(headerListener);}
for(i=0;i<len;i++){temp=configs[i];if(!!me[temp]){deprecated.push(temp);}}
if(deprecated.length>0){cfg={};len=deprecated.length;for(i=0;i<len;i++){temp=deprecated[i];if(temp==='matrixConfig'){Ext.apply(cfg,me.matrixConfig);}else{cfg[temp]=me[temp];}}
if(me.originalStore){cfg.store=me.originalStore;}
if(matrix){if(cfg.type&&matrix.type===cfg.type){matrix.reconfigure(cfg);return;}}else{if(!cfg.type){cfg.type='local';}
cfg.cmp=me;}
me.setMatrix(cfg);}},destroy:function(){var me=this;me.setMatrix(null);Ext.destroy(me.headerCtListeners,me.lockedHeaderCtListeners);Ext.destroy(me.originalStore);me.headerCtListeners=me.lockedHeaderCtListeners=null;me.originalStore=me.pivotColumns=null;me.callParent(arguments);Ext.destroy(me.store);me.store=null;},applyMatrix:function(newMatrix,oldMatrix){Ext.destroy(oldMatrix);if(newMatrix==null){return newMatrix;}
if(newMatrix&&newMatrix.isPivotMatrix){newMatrix.cmp=this;return newMatrix;}
Ext.applyIf(newMatrix,{type:'local'});newMatrix.cmp=this;if(newMatrix.type=='local'&&this.originalStore){Ext.applyIf(newMatrix,{store:this.originalStore});}
return Ext.Factory.pivotmatrix(newMatrix);},updateMatrix:function(matrix,oldMatrix){var me=this,dataSource;me.matrixRelayedListeners=me.matrixListeners=Ext.destroy(oldMatrix,me.matrixListeners,me.matrixRelayedListeners);if(matrix){me.matrixListeners=me.matrix.on({cleardata:me.onMatrixClearData,start:me.onMatrixProcessStart,progress:me.onMatrixProcessProgress,done:me.onMatrixDataReady,afterupdate:me.onMatrixAfterUpdate,groupexpand:me.onMatrixGroupExpandCollapse,groupcollapse:me.onMatrixGroupExpandCollapse,scope:me,destroyable:true});me.matrixRelayedListeners=me.relayEvents(me.matrix,me.relayedMatrixEvents,'pivot');dataSource=me.getFeatureDataSource();if(dataSource&&!me.isConfiguring){dataSource.setMatrix(matrix);}}},refreshView:function(){var me=this;if(me.destroyed||me.destroying){return;}
me.store.fireEvent('pivotstoreremodel',me);},updateHeaderContainerColumns:function(group){var me=this,view=this.getView(),headerCt=view.normalView?view.normalView.getHeaderCt():view.getHeaderCt(),grid=view.normalGrid?view.normalGrid:me,i=0,toDestroy=[],cols,index,ownerCt,item,column;if(group){column=me.getColumnForGroup(headerCt.items,group);if(column.found){grid.reconfiguring=true;ownerCt=column.item.ownerCt;index=column.index;while(i<ownerCt.items.length){item=ownerCt.items.getAt(i);if(item.group==group){toDestroy.push(item);}
i++;}
cols=Ext.clone(me.pivotColumns);me.preparePivotColumns(cols);cols=me.getVisiblePivotColumns(me.prepareVisiblePivotColumns(cols),group);cols=ownerCt.insert(index,cols);Ext.destroy(toDestroy);grid.reconfiguring=false;if(cols&&cols.length){cols[0].focus();}
grid.onHeadersChanged();}}else{cols=Ext.clone(me.pivotColumns);me.preparePivotColumns(cols);cols=me.prepareVisiblePivotColumns(cols);me.reconfigure(undefined,cols);}},getColumnForGroup:function(items,group){var length=items.length,ret={found:false,index:-1,item:null},i,item;for(i=0;i<length;i++){item=items.getAt(i);if(item.group==group){ret.found=true;ret.index=i;ret.item=item;}else if(item.items){ret=this.getColumnForGroup(item.items,group);}
if(ret.found){break;}}
return ret;},onMatrixClearData:function(){var me=this;me.store.removeAll(true);if(!me.expandedItemsState){me.lastColumnsState=null;}
me.sortedColumn=null;},onMatrixProcessStart:function(){if(this.enableLoadMask){this.setLoading(true);}},onMatrixProcessProgress:function(matrix,index,length){var me=this,percent=((index||0.1)*100)/(length||0.1),pEl;if(me.loadMask){if(me.loadMask.msgTextEl){pEl=me.loadMask.msgTextEl;}else if(me.loadMask.msgEl){pEl=me.loadMask.msgEl;}
if(pEl){pEl.update(Ext.util.Format.number(percent,'0')+'%');}}},onMatrixDataReady:function(matrix){this.refreshMatrixData(matrix,false);},onMatrixAfterUpdate:function(matrix,changed){if(changed){this.refreshMatrixData(matrix,true);}else{this.refreshView();}},onMatrixGroupExpandCollapse:function(matrix,type,item){if(type=='col'){this.updateHeaderContainerColumns(item);}},refreshMatrixData:function(matrix,keepStates){var me=this,cols=matrix.getColumnHeaders(),stateApplied=false,leftItems=matrix.leftAxis.items.items,topItems=matrix.topAxis.items.items,i,len,item;if(me.enableLoadMask){me.setLoading(false);}
if(!keepStates){if(me.expandedItemsState){len=leftItems.length;for(i=0;i<len;i++){item=leftItems[i];if(Ext.Array.indexOf(me.expandedItemsState['rows'],item.value)>=0){item.expanded=true;stateApplied=true;}}
len=topItems.length;for(i=0;i<len;i++){item=topItems[i];if(Ext.Array.indexOf(me.expandedItemsState['cols'],item.value)>=0){item.expanded=true;stateApplied=true;}}
if(stateApplied){delete me.expandedItemsState;}}else{if(matrix.collapsibleRows){me.doExpandCollapseTree(matrix.leftAxis.getTree(),!me.startRowGroupsCollapsed);}
if(matrix.collapsibleColumns){me.doExpandCollapseTree(matrix.topAxis.getTree(),!me.startColGroupsCollapsed);}}}
me.pivotColumns=Ext.clone(cols);cols=Ext.clone(me.pivotColumns);me.preparePivotColumns(cols);me.restorePivotColumnsState(cols);cols=me.prepareVisiblePivotColumns(cols);me.reconfigure(undefined,cols);if(!Ext.isEmpty(me.sortedColumn)){matrix.leftAxis.sortTreeByField(me.sortedColumn.dataIndex,me.sortedColumn.direction);}
me.store.fireEvent('pivotstoreremodel',me);if(!Ext.isEmpty(me.sortedColumn)){me.updateColumnSortState(me.sortedColumn.dataIndex,me.sortedColumn.direction);}},getVisiblePivotColumns:function(columns,group){var ret=[],len=columns.length,i,column;for(i=0;i<len;i++){column=columns[i];if(column.group==group){ret.push(column);}
if(column.columns){ret=Ext.Array.merge(ret,this.getVisiblePivotColumns(column.columns,group));}}
return ret;},prepareVisiblePivotColumns:function(columns){var len=columns.length,ret=[],i,column,valid;for(i=0;i<len;i++){column=columns[i];if(!column.hidden){ret.push(column);}
if(column.columns){column.columns=this.prepareVisiblePivotColumns(column.columns);}}
return ret;},preparePivotColumns:function(columns){var me=this,defaultColConfig={menuDisabled:true,sortable:false,lockable:false},colCount=columns.length,i,column;for(i=0;i<colCount;i++){column=columns[i];column.cls=column.cls||'';Ext.apply(column,defaultColConfig);if(column.leftAxis){column.locked=me.enableLocking;}
if(column.subTotal){column.cls=column.tdCls=me.clsGroupTotal;}
if(column.grandTotal){column.cls=column.tdCls=me.clsGrandTotal;}
if(column.group&&column.xgrouped){if(column.group.expanded){if(!column.subTotal&&me.matrix.collapsibleColumns){column.cls+=(Ext.isEmpty(column.cls)?'':' ')+me.groupHeaderCollapsibleCls;}}else{if(column.subTotal&&me.matrix.collapsibleColumns){column.cls+=(Ext.isEmpty(column.cls)?'':' ')+me.groupHeaderCollapsibleCls+' '+me.groupHeaderCollapsedCls;}}
if(column.subTotal){column.text=column.group.expanded?column.group.getTextTotal():Ext.String.format('<span class="'+this.groupCls+'">{0}</span>',column.group.name);}else if(column.group){column.text=Ext.String.format('<span class="'+this.groupCls+'">{0}</span>',column.group.name);}
column.xexpandable=column.subTotal?!column.group.expanded:column.group.expanded;if((!column.group.expanded&&!column.subTotal)||(column.group.expanded&&column.subTotal&&this.getMatrix().colSubTotalsPosition=='none')){column.hidden=true;}}
if(Ext.isEmpty(column.columns)){if(column.dimension){column.renderer=column.dimension?column.dimension.getRenderer():false;column.formatter=column.dimension?column.dimension.getFormatter():false;column.scope=column.dimension?column.dimension.scope:null;column.align=column.dimension.align;if(column.dimension.flex>0){column.flex=column.flex||column.dimension.flex;}else{column.width=column.width||column.dimension.width;}}}else{column.focusable=true;column.enableFocusableContainer=true;me.preparePivotColumns(column.columns);}}},reconfigurePivot:function(config){var matrix=this.getMatrix();config=config||{};if(matrix){if(config.type&&matrix.type!==config.type){this.setMatrix(config);}else{matrix.reconfigure(config);}}else{this.setMatrix(config);}},doExpandCollapseTree:function(tree,expanded){var i;for(i=0;i<tree.length;i++){tree[i].expanded=expanded;if(tree[i].children){this.doExpandCollapseTree(tree[i].children,expanded);}}},doExpandCollapse:function(type,groupId,state,includeChildren){var matrix=this.getMatrix(),item;if(!matrix){return;}
item=(type=='row'?matrix.leftAxis:matrix.topAxis)['findTreeElement']('key',groupId);if(!item){return;}
item=item.node;state=Ext.isDefined(state)?state:!item.expanded;if(state){item.expand(includeChildren);}else{item.collapse(includeChildren);}},setHeaderGroupVisibility:function(column){var i,len,col,columns;if(column.xgrouped){if(column.subTotal){column.setText(column.group.expanded?column.group.getTextTotal():Ext.String.format('<span class="'+this.groupCls+'">{0}</span>',column.group.name));if(!column.group.expanded){column.addCls(this.groupHeaderCollapsibleCls);column.addCls(this.groupHeaderCollapsedCls);}else{column.removeCls(this.groupHeaderCollapsibleCls);column.removeCls(this.groupHeaderCollapsedCls);}}else{column.setText(Ext.String.format('<span class="'+this.groupCls+'">{0}</span>',column.group.name));column.addCls(this.groupHeaderCollapsibleCls);}
column.xexpandable=column.subTotal?!column.group.expanded:column.group.expanded;if((!column.group.expanded&&!column.subTotal)||(column.group.expanded&&column.subTotal&&this.getMatrix().colSubTotalsPosition=='none')){column.hide();return;}}
column.show();column.items.each(this.setHeaderGroupVisibility,this);},expandRow:function(leftAxisItemKey,includeChildren){this.doExpandCollapse('row',leftAxisItemKey,true,includeChildren);},collapseRow:function(leftAxisItemKey,includeChildren){this.doExpandCollapse('row',leftAxisItemKey,false,includeChildren);},expandCol:function(topAxisItemKey,includeChildren){this.doExpandCollapse('col',topAxisItemKey,true,includeChildren);},collapseCol:function(topAxisItemKey,includeChildren){this.doExpandCollapse('col',topAxisItemKey,false,includeChildren);},expandAll:function(){this.expandAllColumns();this.expandAllRows();},expandAllRows:function(){this.getMatrix().leftAxis.expandAll();},expandAllColumns:function(){this.getMatrix().topAxis.expandAll();},collapseAll:function(){this.collapseAllRows();this.collapseAllColumns();},collapseAllRows:function(){this.getMatrix().leftAxis.collapseAll();},collapseAllColumns:function(){this.getMatrix().topAxis.collapseAll();},setStore:function(store){var matrix=this.getMatrix();if(matrix&&matrix.type==='local'){matrix.initializeStore({store:store});}},getStore:function(){var me=this,matrix=me.getMatrix();return((matrix instanceof Ext.pivot.matrix.Local)?matrix.store:me.originalStore)||me.store;},getPivotStore:function(){return this.store;},getTopAxisItem:function(column){var me=this,matrix=me.getMatrix(),columns=matrix.getColumns(),key,i;if(!column){return null;}
for(i=0;i<columns.length;i++){if(columns[i].name===column.dataIndex){key=columns[i].col;break;}}
return Ext.isEmpty(key)?null:matrix.topAxis.items.getByKey(key);},getLeftAxisItem:function(record){var dataSource=this.getFeatureDataSource(),info;if(!record||!dataSource){return null;}
info=dataSource.storeInfo[record.internalId];return info?this.getMatrix().leftAxis.items.getByKey(info.leftKey):null;},getFeatureDataSource:function(){var view=this.rendered?this.getView():null,feature;if(!view){return;}
view=view.normalView||view;feature=view.getFeature('group');return feature?feature.dataSource:null;},onHeaderClick:function(ct,column,e){var me=this,sortState=(column.sortState?(column.sortState=='ASC'?'DESC':'ASC'):'ASC');if(e){e.stopEvent();}
if(!column.xexpandable){if(!me.enableColumnSort){return;}
if((column.leftAxis||column.topAxis)&&!Ext.isEmpty(column.dataIndex)){if(me.getMatrix().leftAxis.sortTreeByField(column.dataIndex,sortState)){me.refreshView();me.updateColumnSortState(column,sortState);}}
return false;}
if(me.matrix.collapsibleColumns){me.doExpandCollapse('col',column.key);}
return false;},updateColumnSortState:function(column,sortState){if(Ext.isString(column)){column=this.down('[dataIndex="'+column+'"]');}
if(!column){return;}
column.setSortState(new Ext.util.Sorter({direction:sortState,property:'dummy'}));column.sortState=sortState;this.sortedColumn={dataIndex:column.dataIndex,direction:sortState};},getStateProperties:function(){return['enableColumnSort','sortedColumn','startRowGroupsCollapsed','startColGroupsCollapsed'];},applyState:function(state){var me=this,props=me.getStateProperties(),matrix=me.getMatrix(),i,prop;for(i=0;i<props.length;i++){prop=props[i];if(state[prop]){me[prop]=state[prop];}}
if(state['expandedItems']){me.expandedItemsState=state['expandedItems'];}
me.lastColumnsState=state['pivotcolumns']||{};if(matrix){matrix.reconfigure(state.matrix);}else{me.setMatrix(state.matrix);}},getState:function(){var state={},props=this.getStateProperties(),matrix=this.getMatrix(),i,len,item;len=props.length;for(i=0;i<len;i++){state[props[i]]=this[props[i]];}
state.expandedItems={cols:[],rows:[]};if(matrix){state.matrix=matrix.serialize();len=matrix.leftAxis.items.getCount();for(i=0;i<len;i++){item=matrix.leftAxis.items.getAt(i);if(item.expanded){state.expandedItems.rows.push(item.value);}}
len=matrix.leftAxis.dimensions.getCount();for(i=0;i<len;i++){item=matrix.leftAxis.dimensions.getAt(i);state.matrix.leftAxis[i]['id']=item.getId();}
len=matrix.topAxis.items.getCount();for(i=0;i<len;i++){item=matrix.topAxis.items.getAt(i);if(item.expanded){state.expandedItems.cols.push(item.value);}}}
state.pivotcolumns=this.getPivotColumnsState();return state;},getPivotColumnsState:function(){var me=this,i,cols;if(!me.lastColumnsState){cols=me.getDataIndexColumns(me.getMatrix().getColumnHeaders());me.lastColumnsState={};for(i=0;i<cols.length;i++){if(cols[i].dataIndex){me.lastColumnsState[cols[i].dataIndex]={width:cols[i].width,flex:cols[i].flex||0};}}}
cols=me.getView().getGridColumns();for(i=0;i<cols.length;i++){if(cols[i].dataIndex){me.lastColumnsState[cols[i].dataIndex]={width:cols[i].rendered?cols[i].getWidth():cols[i].width,flex:cols[i].flex||0};}}
return me.lastColumnsState;},getDataIndexColumns:function(columns){var cols=[],i;for(i=0;i<columns.length;i++){if(columns[i].dataIndex){cols.push(columns[i].dataIndex);}else if(Ext.isArray(columns[i].columns)){cols=Ext.Array.merge(cols,this.getDataIndexColumns(columns[i].columns));}}
return cols;},restorePivotColumnsState:function(columns){this.parsePivotColumnsState(this.getPivotColumnsState(),columns);},parsePivotColumnsState:function(state,columns){var item,i;if(!columns){return;}
for(i=0;i<columns.length;i++){item=state[columns[i].dataIndex];if(item){if(item.flex){columns[i].flex=item.flex;}else if(item.width){columns[i].width=item.width;}}
this.parsePivotColumnsState(state,columns[i].columns);}},deprecated:{'6.2':{properties:{matrixConfig:null,viewLayoutType:'outline',rowSubTotalsPosition:'first',rowGrandTotalsPosition:'last',colSubTotalsPosition:'last',colGrandTotalsPosition:'last',textTotalTpl:'Total ({name})',textGrandTotalTpl:'Grand total',showZeroAsBlank:false,leftAxis:null,topAxis:null,aggregate:null}}}});Ext.define('Ext.pivot.plugin.CellEditing',{extend:'Ext.grid.plugin.CellEditing',alias:'plugin.pivotcellediting',requires:['Ext.pivot.update.Increment','Ext.pivot.update.Overwrite','Ext.pivot.update.Percentage','Ext.pivot.update.Uniform'],defaultUpdater:'uniform',defaultValue:null,updater:null,init:function(grid){var me=this;me.callParent([grid]);me.pivot=grid.isPivotGrid?grid:grid.up('pivotgrid');me.mon(me,{beforeedit:me.onBeforeEdit,priority:1000,scope:me});if(!me.pivot.isCellEditingAttached){me.mon(me.pivot,{pivotcolumnsbuilt:me.addColumnEditors,scope:me});me.pivot.isCellEditingAttached=true;}
me.updater=Ext.Factory.pivotupdate({type:me.defaultUpdater});me.pivot.relayEvents(me.updater,['beforeupdate','update'],'pivot');},destroy:function(){var me=this;me.pivot.isCellEditingAttached=false;me.pivot=me.updater=Ext.destroy(me.updater);me.callParent();},addColumnEditors:function(matrix,columns){var len=columns.length,col,i;for(i=0;i<len;i++){col=columns[i];if(col.dimension&&col.dimension.editor){col.editor=Ext.clone(col.dimension.editor);}
if(col.columns){this.addColumnEditors(matrix,col.columns);}}},isCellEditable:function(record,columnHeader){return this.callParent([record,columnHeader])&&Boolean(this.getPivotResult(this.getEditingContext(record,columnHeader)));},onBeforeEdit:function(plugin,context){if(!Ext.isEmpty(this.defaultValue)){context.value=this.defaultValue;}
return this.isCellEditable(context.record,context.column);},getPivotResult:function(context){var matrix=this.pivot.getMatrix(),leftItem=this.pivot.getLeftAxisItem(context.record),topItem=this.pivot.getTopAxisItem(context.column);return matrix.results.get(leftItem?leftItem.key:matrix.grandTotalKey,topItem?topItem.key:matrix.grandTotalKey);},updateRecords:function(context,value){var pivot=this.pivot,matrix=pivot.getMatrix(),leftItem=pivot.getLeftAxisItem(context.record),topItem=pivot.getTopAxisItem(context.column);this.updater.setConfig({leftKey:leftItem?leftItem.key:matrix.grandTotalKey,topKey:topItem?topItem.key:matrix.grandTotalKey,matrix:matrix,dataIndex:context.column.dimension.dataIndex,value:value});this.updater.update();},onEditComplete:function(ed,value,startValue){var me=this,context=ed.context,view,record,result;view=context.view;record=context.record;context.value=value;if(!me.validateEdit(context)){me.editing=false;return;}
me.updateRecords(context,value);context.rowIdx=view.indexOf(record);me.fireEvent('edit',me,context);if(me.context===context){me.setActiveEditor(null);me.setActiveColumn(null);me.setActiveRecord(null);me.editing=false;}}});Ext.define('Ext.pivot.plugin.configurator.window.Window',{extend:'Ext.window.Window',requires:['Ext.form.Panel','Ext.form.FieldContainer','Ext.form.field.Text','Ext.form.field.Hidden','Ext.form.field.ComboBox','Ext.layout.container.HBox'],modal:true,closeAction:'destroy',initComponent:function(){var me=this;Ext.apply(me,{layout:'fit',items:[me.getSettingsForm()],buttons:[{text:Ext.Msg.buttonText.ok,handler:me.applySettings,scope:me},{text:Ext.Msg.buttonText.cancel,handler:me.cancelSettings,scope:me}]});return me.callParent(arguments);},beforeApplySettings:Ext.emptyFn,getSettingsForm:function(){return{xtype:'form',bodyPadding:5,items:[]};},loadSettings:function(settings){var form=this.down('form');if(form){form.getForm().setValues(settings||{});}},applySettings:function(){var form=this.down('form'),settings;if(form&&form.getForm().isValid()){settings=form.getForm().getValues();if(this.beforeApplySettings(settings)!==false){if(this.fireEvent('applysettings',this,settings)!==false){this.cancelSettings();}}}},cancelSettings:function(){this.close();}});Ext.define('Ext.pivot.plugin.configurator.window.FilterLabel',{extend:'Ext.pivot.plugin.configurator.window.Window',titleText:'Label filter ({0})',fieldText:'Show items for which the label',caseSensitiveText:'Case sensitive',initComponent:function(){var me=this;me.callParent(arguments);me.setTitle(Ext.String.format(me.titleText,me.title));},getSettingsForm:function(){var me=this,items=me.filterFields||[];items.push({xtype:'combo',editable:false,queryMode:'local',valueField:'value',store:me.store,name:'operator',listeners:{change:function(combo,newValue){var me=this,hidden=me.isOperatorBetween(newValue);me.down('#fValue').setVisible(!hidden);me.down('#fValue').allowBlank=hidden;me.down('#fFrom').setVisible(hidden);me.down('#fFrom').allowBlank=!hidden;me.down('#fTo').setVisible(hidden);me.down('#fTo').allowBlank=!hidden;},scope:me}},{itemId:'fValue',xtype:'textfield',margin:'0 0 0 5',name:'value'},{itemId:'fFrom',xtype:'textfield',margin:'0 0 0 5',name:'from'},{itemId:'fTo',xtype:'textfield',margin:'0 0 0 5',name:'to'});return Ext.apply(me.callParent(arguments),{items:[{xtype:'hidden',name:'type'},{xtype:'fieldcontainer',labelSeparator:'',fieldLabel:me.fieldText,labelAlign:'top',layout:{type:'hbox',align:'stretch'},defaults:{allowBlank:false,flex:1},items:items},{xtype:'checkbox',boxLabel:me.caseSensitiveText,name:'caseSensitive'}]});},beforeApplySettings:function(settings){if(this.isOperatorBetween(settings.operator)){settings.value=[settings.from,settings.to];}
delete(settings.from);delete(settings.to);settings.caseSensitive=(settings.caseSensitive==='on');settings.topSort=(settings.topSort==='on');},isOperatorBetween:function(operator){return Ext.Array.indexOf(['between','not between'],operator)>=0;}});Ext.define('Ext.pivot.plugin.configurator.window.FilterValue',{extend:'Ext.pivot.plugin.configurator.window.FilterLabel',titleText:'Value filter ({0})',fieldText:'Show items for which',initComponent:function(){var me=this;me.filterFields=[{xtype:'combo',editable:false,queryMode:'local',valueField:'value',store:me.storeAgg,name:'dimensionId'}];me.callParent(arguments);}});Ext.define('Ext.pivot.plugin.configurator.window.FilterTop',{extend:'Ext.pivot.plugin.configurator.window.Window',titleText:'Top 10 filter ({0})',fieldText:'Show',sortResultsText:'Sort results',initComponent:function(){var me=this;me.callParent(arguments);me.setTitle(Ext.String.format(me.titleText,me.title));},getSettingsForm:function(){var me=this,items=[];items.push({xtype:'combo',editable:false,queryMode:'local',valueField:'value',store:me.storeTopOrder,name:'topOrder'},{xtype:'textfield',margin:'0 0 0 5',name:'value'},{xtype:'combo',margin:'0 0 0 5',editable:false,queryMode:'local',valueField:'value',store:me.storeTopType,name:'topType'},{xtype:'combo',margin:'0 0 0 5',editable:false,queryMode:'local',valueField:'value',store:me.storeAgg,name:'dimensionId'});return Ext.apply(me.callParent(arguments),{defaults:{allowBlank:false},items:[{xtype:'hidden',name:'type'},{xtype:'hidden',name:'operator'},{xtype:'fieldcontainer',labelSeparator:'',fieldLabel:me.fieldText,labelAlign:'top',layout:{type:'hbox',align:'stretch'},defaults:{flex:1,allowBlank:false},items:items},{xtype:'checkbox',boxLabel:me.sortResultsText,name:'topSort'}]});}});Ext.define('Ext.pivot.plugin.configurator.window.FieldSettings',{extend:'Ext.pivot.plugin.configurator.window.Window',requires:['Ext.form.field.Display'],title:'Field settings',formatText:'Format as',summarizeByText:'Summarize by',customNameText:'Custom name',sourceNameText:'Source name',alignText:'Align',alignLeftText:'Left',alignCenterText:'Center',alignRightText:'Right',field:null,getSettingsForm:function(){var me=this,dataFormatters=[],dataAggregators=[],settings=me.field.getSettings(),formatters=settings.getFormatters(),renderers=settings.getRenderers(),fns=settings.getAggregators(),length,i,list;length=fns.length;for(i=0;i<length;i++){dataAggregators.push([me.field.getAggText(fns[i]),fns[i]]);}
list=Ext.Object.getAllKeys(formatters||{});length=list.length;for(i=0;i<length;i++){dataFormatters.push([list[i],formatters[list[i]],1]);}
list=Ext.Object.getAllKeys(renderers||{});length=list.length;for(i=0;i<length;i++){dataFormatters.push([list[i],renderers[list[i]],2]);}
return Ext.apply(me.callParent(arguments),{items:[{xtype:'displayfield',fieldLabel:me.sourceNameText,name:'dataIndex'},{xtype:'textfield',fieldLabel:me.customNameText,name:'header',allowBlank:false},{xtype:'combo',fieldLabel:me.alignText,editable:false,queryMode:'local',valueField:'value',name:'align',store:new Ext.data.ArrayStore({fields:['text','value'],data:[[me.alignLeftText,'left'],[me.alignCenterText,'center'],[me.alignRightText,'right']]})},{xtype:'combo',fieldLabel:me.formatText,editable:false,queryMode:'local',valueField:'value',name:'formatter',store:new Ext.data.ArrayStore({fields:['text','value','type'],data:dataFormatters})},{xtype:'combo',fieldLabel:me.summarizeByText,editable:false,queryMode:'local',valueField:'value',name:'aggregator',store:new Ext.data.ArrayStore({fields:['text','value'],data:dataAggregators})}]});},beforeApplySettings:function(settings){var formatAs=this.down('[name=formatter]'),store,item;if(formatAs){store=formatAs.getStore();item=store.findRecord('value',settings.formatter,0,false,true,true);if(item){if(item.get('type')==1){settings.formatter=item.get('value');settings.renderer=null;}else{settings.renderer=item.get('value');settings.formatter=null;}}}},loadSettings:function(settings){var format=settings.formatter;if(Ext.isFunction(format)){format=null;}
if(!format&&!Ext.isFunction(settings.renderer)){format=settings.renderer;}
settings.formatter=format;this.callParent([settings]);}});Ext.define('Ext.pivot.plugin.configurator.Column',{extend:'Ext.Component',requires:['Ext.menu.Menu','Ext.menu.CheckItem','Ext.menu.Item','Ext.menu.Separator','Ext.pivot.plugin.configurator.Field','Ext.pivot.plugin.configurator.window.FilterLabel','Ext.pivot.plugin.configurator.window.FilterValue','Ext.pivot.plugin.configurator.window.FilterTop','Ext.pivot.plugin.configurator.window.FieldSettings'],alias:'widget.pivotconfigfield',childEls:['textCol','filterCol','sortCol'],tabIndex:0,focusable:true,isConfiguratorField:true,renderTpl:'<div id="{id}-configCol" role="button" class="'+Ext.baseCSSPrefix+'pivot-grid-config-column-inner" >'+'<span id="{id}-customCol" role="presentation" class="'+Ext.baseCSSPrefix+'pivot-grid-config-column-btn-customize '+Ext.baseCSSPrefix+'border-box '+Ext.baseCSSPrefix+'pivot-grid-config-column-btn '+Ext.baseCSSPrefix+'pivot-grid-config-column-btn-image"></span>'+'<span id="{id}-sortCol" role="presentation" data-ref="sortCol" class="'+Ext.baseCSSPrefix+'border-box '+Ext.baseCSSPrefix+'pivot-grid-config-column-btn"></span>'+'<span id="{id}-filterCol" role="presentation" data-ref="filterCol" class="'+Ext.baseCSSPrefix+'border-box '+Ext.baseCSSPrefix+'pivot-grid-config-column-btn"></span>'+'<span id="{id}-textCol" role="presentation" data-ref="textCol" data-qtip="{header}" class="'+Ext.baseCSSPrefix+'pivot-grid-config-column-text '+Ext.baseCSSPrefix+'column-header-text '+Ext.baseCSSPrefix+'border-box">'+'{header}'+'</span>'+'</div>',header:'&#160;',minWidth:80,sortAscText:'Sort A to Z',sortDescText:'Sort Z to A',sortClearText:'Disable sorting',clearFilterText:'Clear filter from "{0}"',labelFiltersText:'Label filters',valueFiltersText:'Value filters',equalsText:'Equals...',doesNotEqualText:'Does not equal...',beginsWithText:'Begins with...',doesNotBeginWithText:'Does not begin with...',endsWithText:'Ends with...',doesNotEndWithText:'Does not end with...',containsText:'Contains...',doesNotContainText:'Does not contain...',greaterThanText:'Greater than...',greaterThanOrEqualToText:'Greater than or equal to...',lessThanText:'Less than...',lessThanOrEqualToText:'Less than or equal to...',betweenText:'Between...',notBetweenText:'Not between...',top10Text:'Top 10...',equalsLText:'equals',doesNotEqualLText:'does not equal',beginsWithLText:'begins with',doesNotBeginWithLText:'does not begin with',endsWithLText:'ends with',doesNotEndWithLText:'does not end with',containsLText:'contains',doesNotContainLText:'does not contain',greaterThanLText:'is greater than',greaterThanOrEqualToLText:'is greater than or equal to',lessThanLText:'is less than',lessThanOrEqualToLText:'is less than or equal to',betweenLText:'is between',notBetweenLText:'is not between',top10LText:'Top 10...',topOrderTopText:'Top',topOrderBottomText:'Bottom',topTypeItemsText:'Items',topTypePercentText:'Percent',topTypeSumText:'Sum',baseCls:Ext.baseCSSPrefix+'pivot-grid-config-column',btnIconCls:Ext.baseCSSPrefix+'pivot-grid-config-column-btn-image',setFilterIconCls:Ext.baseCSSPrefix+'pivot-grid-config-column-btn-filter-set',clearFilterIconCls:Ext.baseCSSPrefix+'pivot-grid-config-column-btn-filter-clear',ascSortIconCls:Ext.baseCSSPrefix+'pivot-grid-config-column-btn-sort-asc',descSortIconCls:Ext.baseCSSPrefix+'pivot-grid-config-column-btn-sort-desc',clearSortIconCls:Ext.baseCSSPrefix+'pivot-grid-config-column-btn-sort-clear',overCls:Ext.baseCSSPrefix+'pivot-grid-config-column-over',cls:Ext.baseCSSPrefix+'unselectable',config:{fieldType:'all',field:null},destroy:function(){this.setField(null);this.callParent();},initRenderData:function(){var dim=this.getField();return Ext.apply(this.callParent(arguments),{header:this.getFieldType()=='aggregate'?dim.getFieldText():dim.getHeader(),dimension:dim});},afterRender:function(){var me=this,dim=me.getField(),settings=dim.getSettings();me.callParent();if(Ext.Array.indexOf(['leftAxis','topAxis'],me.getFieldType())>=0){if(!Ext.isDefined(dim.sortable)||dim.sortable){me.addSortCls(dim.direction);}
if(dim.filter){me.addFilterCls();}}
me.textCol.setStyle(settings.getStyle());me.addCls(settings.getCls());},getMenuConfig:function(){var fieldType=this.getFieldType();if(fieldType=='leftAxis'||fieldType=='topAxis'){return this.getColMenuConfig();}},addSortCls:function(direction){var me=this;if(!me.sortCol){return;}
if(direction==='ASC'||!direction){me.sortCol.addCls(me.ascSortIconCls);me.sortCol.removeCls(me.descSortIconCls);}else{me.sortCol.addCls(me.descSortIconCls);me.sortCol.removeCls(me.ascSortIconCls);}
me.sortCol.addCls(me.btnIconCls);},removeSortCls:function(direction){var me=this;if(!me.sortCol){return;}
if(direction==='ASC'){me.sortCol.removeCls(me.ascSortIconCls);}else{me.sortCol.removeCls(me.descSortIconCls);}
me.sortCol.removeCls(me.btnIconCls);},addFilterCls:function(){var me=this;if(me.filterCol&&!me.filterCol.hasCls(me.setFilterIconCls)){me.filterCol.addCls(me.setFilterIconCls);me.filterCol.addCls(me.btnIconCls);}},removeFilterCls:function(){var me=this;if(me.filterCol){me.filterCol.removeCls(me.setFilterIconCls);me.filterCol.removeCls(me.btnIconCls);}},getColMenuConfig:function(){var me=this,items=[],labelItems,valueItems,commonItems,i,filter=me.getField().filter;items.push({text:me.sortAscText,direction:'ASC',iconCls:me.ascSortIconCls,handler:me.sortMe},{text:me.sortDescText,direction:'DESC',iconCls:me.descSortIconCls,handler:me.sortMe},{text:me.sortClearText,direction:'',disabled:me.getField().sortable===false,iconCls:me.clearSortIconCls,handler:me.sortMe},{xtype:'menuseparator'});commonItems=[{text:me.equalsText,operator:'='},{text:me.doesNotEqualText,operator:'!='},{xtype:'menuseparator'},{text:me.greaterThanText,operator:'>'},{text:me.greaterThanOrEqualToText,operator:'>='},{text:me.lessThanText,operator:'<'},{text:me.lessThanOrEqualToText,operator:'<='},{xtype:'menuseparator'},{text:me.betweenText,operator:'between'},{text:me.notBetweenText,operator:'not between'}];labelItems=Ext.clone(commonItems);Ext.Array.insert(labelItems,3,[{text:me.beginsWithText,operator:'begins'},{text:me.doesNotBeginWithText,operator:'not begins'},{text:me.endsWithText,operator:'ends'},{text:me.doesNotEndWithText,operator:'not ends'},{xtype:'menuseparator'},{text:me.containsText,operator:'contains'},{text:me.doesNotContainText,operator:'not contains'},{xtype:'menuseparator'}]);for(i=0;i<labelItems.length;i++){labelItems[i]['checked']=(filter&&filter.type=='label'&&filter.operator==labelItems[i].operator);}
valueItems=Ext.clone(commonItems);valueItems.push({xtype:'menuseparator'},{text:me.top10Text,operator:'top10'});for(i=0;i<valueItems.length;i++){valueItems[i]['checked']=(filter&&filter.type=='value'&&filter.operator==valueItems[i].operator);}
items.push({text:Ext.String.format(me.clearFilterText,me.header),iconCls:me.clearFilterIconCls,disabled:!filter,handler:me.onRemoveFilter},{text:me.labelFiltersText,menu:{defaults:{handler:me.onShowFilter,scope:me,xtype:'menucheckitem',group:'filterlabel',type:'label'},items:labelItems}},{text:me.valueFiltersText,menu:{defaults:{handler:me.onShowFilter,scope:me,xtype:'menucheckitem',group:'filtervalue',type:'value'},items:valueItems}});return{defaults:{scope:me},items:items};},sortMe:function(btn){var me=this,field=me.getField();if(Ext.isEmpty(btn.direction)){field.setSortable(false);me.removeSortCls(field.getDirection());}else{field.setSortable(true);me.addSortCls(btn.direction);field.setDirection(btn.direction);}
me.applyChanges();},onShowFilter:function(btn){var me=this,panel=me.up('pivotconfigpanel'),dataAgg=[],winCfg={},filter=me.getField().getFilter(),values={type:btn.type,operator:btn.operator,value:(filter?filter.value:''),from:(filter?(Ext.isArray(filter.value)?filter.value[0]:''):''),to:(filter?(Ext.isArray(filter.value)?filter.value[1]:''):''),caseSensitive:(filter?filter.caseSensitive:false),topSort:(filter?filter.topSort:false)},items=panel.getAggregateContainer().items,len=items.getCount(),win,winClass,data,i,field;for(i=0;i<len;i++){field=items.getAt(i).getField();dataAgg.push([field.getHeader(),field.getId()]);}
if(btn.type=='label'||(btn.type=='value'&&btn.operator!='top10')){data=[[me.equalsLText,'='],[me.doesNotEqualLText,'!='],[me.greaterThanLText,'>'],[me.greaterThanOrEqualToLText,'>='],[me.lessThanLText,'<'],[me.lessThanOrEqualToLText,'<='],[me.betweenLText,'between'],[me.notBetweenLText,'not between']];if(btn.type=='label'){Ext.Array.insert(data,3,[[me.beginsWithLText,'begins'],[me.doesNotBeginWithLText,'not begins'],[me.endsWithLText,'ends'],[me.doesNotEndWithLText,'not ends'],[me.containsLText,'contains'],[me.doesNotContainLText,'not contains']]);winClass='Ext.pivot.plugin.configurator.window.FilterLabel';}else{winClass='Ext.pivot.plugin.configurator.window.FilterValue';Ext.apply(values,{dimensionId:(filter?filter.dimensionId:'')});winCfg.storeAgg=new Ext.data.ArrayStore({fields:['text','value'],data:dataAgg});}
winCfg.store=new Ext.data.ArrayStore({fields:['text','value'],data:data});}else{winClass='Ext.pivot.plugin.configurator.window.FilterTop';data=[];Ext.apply(winCfg,{storeTopOrder:new Ext.data.ArrayStore({fields:['text','value'],data:[[me.topOrderTopText,'top'],[me.topOrderBottomText,'bottom']]}),storeTopType:new Ext.data.ArrayStore({fields:['text','value'],data:[[me.topTypeItemsText,'items'],[me.topTypePercentText,'percent'],[me.topTypeSumText,'sum']]}),storeAgg:new Ext.data.ArrayStore({fields:['text','value'],data:dataAgg})});Ext.apply(values,{operator:'top10',dimensionId:(filter?filter.dimensionId:''),topType:(filter?filter.topType:'items'),topOrder:(filter?filter.topOrder:'top')});}
win=Ext.create(winClass,Ext.apply(winCfg||{},{title:me.header,listeners:{applysettings:Ext.bind(me.onApplyFilterSettings,me)}}));win.loadSettings(values);win.show();},onApplyFilterSettings:function(win,filter){var me=this;win.close();me.addFilterCls();me.getField().setFilter(filter);me.applyChanges();},onRemoveFilter:function(){var me=this;me.removeFilterCls();me.getField().setFilter(null);me.applyChanges();},applyChanges:function(){if(this.ownerCt){this.ownerCt.applyChanges(this);}}});Ext.define('Ext.pivot.plugin.configurator.Container',{extend:'Ext.panel.Panel',requires:['Ext.pivot.plugin.configurator.Column'],mixins:['Ext.util.FocusableContainer'],alias:'widget.pivotconfigcontainer',childEls:['innerCt'],handleSorting:false,handleFiltering:false,position:'top',border:false,enableFocusableContainer:true,isConfiguratorContainer:true,cls:Ext.baseCSSPrefix+'pivot-grid-config-container-body',dockedTopRightCls:Ext.baseCSSPrefix+'pivot-grid-config-container-body-tr',dockedBottomLeftCls:Ext.baseCSSPrefix+'pivot-grid-config-container-body-bl',hintTextCls:Ext.baseCSSPrefix+'pivot-grid-config-container-hint',config:{fieldType:'all',dragDropText:'&nbsp;'},initComponent:function(){var me=this;if(me.position=='top'||me.position=='bottom'){Ext.apply(me,{style:'overflow:hidden',layout:'column',height:'auto'});}else{Ext.apply(me,{layout:{type:'vbox',align:'stretch'}});}
if(me.position=='top'||me.position=='right'){me.cls+=' '+me.dockedTopRightCls;}else{me.cls+=' '+me.dockedBottomLeftCls;}
me.callParent(arguments);},destroy:function(){this.infoEl=Ext.destroy(this.infoEl);this.callParent();},afterRender:function(){var me=this;me.callParent();me.infoEl=me.innerCt.createChild({cls:me.hintTextCls,html:me.getDragDropText()});me.setInfoElVisibility();},applyChanges:function(field,force){if(this.getFieldType()!='all'||force===true){this.fireEvent('configchange',field||this);}},addField:function(config,pos,notify){var me=this,cfg={xtype:'pivotconfigfield',field:config,header:config.getHeader(),touchAction:{panX:false,panY:false}},newCol;config.isAggregate=(me.getFieldType()==='aggregate');if(pos!==-1){newCol=me.insert(pos,cfg);}else{newCol=me.add(cfg);}
if(notify===true){me.applyChanges(newCol);}
return newCol;},onAdd:function(column){this.setInfoElVisibility();column.setFieldType(this.getFieldType());this.callParent(arguments);},onRemove:function(){this.setInfoElVisibility();},moveField:function(from,to,position){var me=this;if(Ext.isString(from)){from=me.items.getByKey(from);}
if(Ext.isString(to)){to=me.items.getByKey(to);}
if(from!=to){me['move'+Ext.String.capitalize(position)](from,to);me.applyChanges(from);}},removeField:function(field){this.remove(field);this.applyChanges();},setInfoElVisibility:function(){var el=this.infoEl;if(!el){return;}
if(this.items.getCount()==0){el.show();}else{el.hide();}}});Ext.define('Ext.pivot.plugin.configurator.DragZone',{extend:'Ext.dd.DragZone',configColumnSelector:'.'+Ext.baseCSSPrefix+'pivot-grid-config-column',configColumnInnerSelector:'.'+Ext.baseCSSPrefix+'pivot-grid-config-column-inner',maxProxyWidth:120,dragging:false,constructor:function(panel){this.panel=panel;this.ddGroup=this.getDDGroup();this.callParent([panel.el]);},getDDGroup:function(){return'configurator-'+this.panel.id;},getDragData:function(e){var header,headerCmp,ddel,field;if(e.getTarget(this.configColumnInnerSelector)){header=e.getTarget(this.configColumnSelector);if(header){headerCmp=Ext.getCmp(header.id);headerCmp.focus();field=headerCmp.getField();if(!this.panel.dragging&&field&&!field.getSettings().isFixed(headerCmp.ownerCt)){ddel=document.createElement('div');ddel.innerHTML=headerCmp.header;return{ddel:ddel,header:headerCmp};}}}
return false;},onBeforeDrag:function(){return!(this.panel.dragging||this.disabled);},onInitDrag:function(){this.panel.dragging=true;this.callParent(arguments);},onDragDrop:function(){this.panel.dragging=false;this.callParent(arguments);},afterRepair:function(){this.callParent();this.panel.dragging=false;},getRepairXY:function(){return this.dragData.header.el.getXY();},disable:function(){this.disabled=true;},enable:function(){this.disabled=false;}});Ext.define('Ext.pivot.plugin.configurator.DropZone',{extend:'Ext.dd.DropZone',proxyOffsets:[-4,-9],configPanelCls:Ext.baseCSSPrefix+'pivot-grid-config-container-body',configColumnCls:Ext.baseCSSPrefix+'pivot-grid-config-column',constructor:function(panel){this.panel=panel;this.ddGroup=this.getDDGroup();this.callParent([panel.id]);},disable:function(){this.disabled=true;},enable:function(){this.disabled=false;},getDDGroup:function(){return'configurator-'+this.panel.id;},getTargetFromEvent:function(e){return e.getTarget('.'+this.configColumnCls)||e.getTarget('.'+this.configPanelCls);},getTopIndicator:function(){if(!this.topIndicator){this.self.prototype.topIndicator=Ext.DomHelper.append(Ext.getBody(),{cls:'col-move-top '+Ext.baseCSSPrefix+'col-move-top',html:"&#160;"},true);this.self.prototype.indicatorXOffset=Math.floor((this.topIndicator.dom.offsetWidth+1)/2);}
return this.topIndicator;},getBottomIndicator:function(){if(!this.bottomIndicator){this.self.prototype.bottomIndicator=Ext.DomHelper.append(Ext.getBody(),{cls:'col-move-bottom '+Ext.baseCSSPrefix+'col-move-bottom',html:"&#160;"},true);}
return this.bottomIndicator;},getLocation:function(data,t,e){var x=e.getXY()[0],target=Ext.getCmp(t.id),region,pos;if(target instanceof Ext.pivot.plugin.configurator.Container){if(target.items.getCount()>0){region=Ext.fly(target.items.last().el).getRegion();}else{region=new Ext.util.Region(0,1000000,0,0);}}else{region=Ext.fly(t).getRegion();}
if((region.right-x)<=(region.right-region.left)/2){pos="after";}else{pos="before";}
return data.dropLocation={pos:pos,header:Ext.getCmp(t.id),node:t};},positionIndicator:function(data,node,e){var me=this,dragHeader=data.header,dropLocation=me.getLocation(data,node,e),targetHeader=dropLocation.header,pos=dropLocation.pos,nextHd,prevHd,topIndicator,bottomIndicator,topAnchor,bottomAnchor,topXY,bottomXY,headerCtEl,minX,maxX,allDropZones,ln,i,dropZone;if(targetHeader===me.lastTargetHeader&&pos===me.lastDropPos){return;}
nextHd=dragHeader.nextSibling('pivotconfigfield:not([hidden])');prevHd=dragHeader.previousSibling('pivotconfigfield:not([hidden])');me.lastTargetHeader=targetHeader;me.lastDropPos=pos;if((dragHeader!==targetHeader)&&((pos==="before"&&nextHd!==targetHeader)||(pos==="after"&&prevHd!==targetHeader))&&!targetHeader.isDescendantOf(dragHeader)){allDropZones=Ext.dd.DragDropManager.getRelated(me);ln=allDropZones.length;i=0;for(;i<ln;i++){dropZone=allDropZones[i];if(dropZone!==me&&dropZone.invalidateDrop){dropZone.invalidateDrop();}}
me.valid=true;topIndicator=me.getTopIndicator();bottomIndicator=me.getBottomIndicator();if(pos==='before'){topAnchor='bc-tl';bottomAnchor='tc-bl';}else{topAnchor='bc-tr';bottomAnchor='tc-br';}
if(targetHeader.isConfiguratorContainer&&targetHeader.items.getCount()>0){topXY=topIndicator.getAlignToXY(targetHeader.items.last().el,topAnchor);bottomXY=bottomIndicator.getAlignToXY(targetHeader.items.last().el,bottomAnchor);}else{topXY=topIndicator.getAlignToXY(targetHeader.el,topAnchor);bottomXY=bottomIndicator.getAlignToXY(targetHeader.el,bottomAnchor);}
headerCtEl=me.panel.el;minX=headerCtEl.getX()-me.indicatorXOffset;maxX=headerCtEl.getX()+headerCtEl.getWidth();topXY[0]=Ext.Number.constrain(topXY[0],minX,maxX);bottomXY[0]=Ext.Number.constrain(bottomXY[0],minX,maxX);topIndicator.setXY(topXY);bottomIndicator.setXY(bottomXY);topIndicator.show();bottomIndicator.show();}else
{me.invalidateDrop();}},invalidateDrop:function(){this.valid=false;this.hideIndicators();},onNodeOver:function(node,dragZone,e,data){var me=this,doPosition=true,dragColumn=data.header,target=me.getLocation(data,node,e);if(data.header.el.dom===node){doPosition=false;}
if(target&&target.header&&dragColumn){doPosition=doPosition&&dragColumn.getField().getSettings().isAllowed(target.header)&&me.panel.isAllowed(target.header,dragColumn);}
if(doPosition){me.positionIndicator(data,node,e);}else{me.valid=false;}
return me.valid?me.dropAllowed:me.dropNotAllowed;},hideIndicators:function(){var me=this;me.getTopIndicator().hide();me.getBottomIndicator().hide();me.lastTargetHeader=me.lastDropPos=null;},onNodeOut:function(){this.hideIndicators();},onNodeDrop:function(node,dragZone,e,data){var me=this,dragColumn=data.header,dropLocation=data.dropLocation;if(me.valid&&dropLocation){me.panel.dragDropField(dropLocation.header,dragColumn,dropLocation.pos);}}});Ext.define('Ext.pivot.plugin.configurator.window.Settings',{extend:'Ext.pivot.plugin.configurator.window.Window',requires:['Ext.form.field.Display'],title:'Settings',layoutText:'Layout',outlineLayoutText:'Outline',compactLayoutText:'Compact',tabularLayoutText:'Tabular',firstPositionText:'First',hidePositionText:'Hide',lastPositionText:'Last',rowSubTotalPositionText:'Row subtotal position',columnSubTotalPositionText:'Column subtotal position',rowTotalPositionText:'Row total position',columnTotalPositionText:'Column total position',showZeroAsBlankText:'Show zero as blank',yesText:'Yes',noText:'No',getSettingsForm:function(){var me=this,storePositions={type:'array',fields:['text','value'],data:[[me.firstPositionText,'first'],[me.hidePositionText,'none'],[me.lastPositionText,'last']]};return Ext.apply(me.callParent(arguments),{items:[{xtype:'combo',fieldLabel:me.layoutText,editable:false,queryMode:'local',valueField:'value',name:'viewLayoutType',store:{type:'array',fields:['text','value'],data:[[me.outlineLayoutText,'outline'],[me.compactLayoutText,'compact'],[me.tabularLayoutText,'tabular']]}},{xtype:'combo',fieldLabel:me.rowSubTotalPositionText,editable:false,queryMode:'local',valueField:'value',name:'rowSubTotalsPosition',store:storePositions},{xtype:'combo',fieldLabel:me.columnSubTotalPositionText,editable:false,queryMode:'local',valueField:'value',name:'colSubTotalsPosition',store:storePositions},{xtype:'combo',fieldLabel:me.rowTotalPositionText,editable:false,queryMode:'local',valueField:'value',name:'rowGrandTotalsPosition',store:storePositions},{xtype:'combo',fieldLabel:me.columnTotalPositionText,editable:false,queryMode:'local',valueField:'value',name:'colGrandTotalsPosition',store:storePositions},{xtype:'combo',fieldLabel:me.showZeroAsBlankText,editable:false,queryMode:'local',valueField:'value',name:'showZeroAsBlank',store:{type:'array',fields:['text','value'],data:[[me.yesText,true],[me.noText,false]]}}]});}});Ext.define('Ext.pivot.plugin.configurator.Panel',{extend:'Ext.panel.Panel',requires:['Ext.pivot.plugin.configurator.Container','Ext.pivot.plugin.configurator.DragZone','Ext.pivot.plugin.configurator.DropZone','Ext.layout.container.HBox','Ext.layout.container.VBox','Ext.pivot.plugin.configurator.window.Settings'],mixins:['Ext.util.FocusableContainer'],alias:'widget.pivotconfigpanel',weight:50,defaultMinHeight:70,defaultMinWidth:250,dock:'right',header:false,title:'Configurator',collapsible:true,collapseMode:'placeholder',panelAllFieldsText:'Drop Unused Fields Here',panelAllFieldsTitle:'All fields',panelTopFieldsText:'Drop Column Fields Here',panelTopFieldsTitle:'Column labels',panelLeftFieldsText:'Drop Row Fields Here',panelLeftFieldsTitle:'Row labels',panelAggFieldsText:'Drop Agg Fields Here',panelAggFieldsTitle:'Values',addToText:'Add to {0}',moveToText:'Move to {0}',removeFieldText:'Remove field',moveUpText:'Move up',moveDownText:'Move down',moveBeginText:'Move to beginning',moveEndText:'Move to end',fieldSettingsText:'Field settings',headerContainerCls:Ext.baseCSSPrefix+'pivot-grid-config-container-header',keyEventRe:/^key/,config:{fields:[],refreshDelay:300,pivot:null},initComponent:function(){var me=this,listeners={configchange:me.applyChanges,scope:me};Ext.apply(me,Ext.Array.indexOf(['top','bottom'],me.dock)>=0?me.getHorizontalConfig():me.getVerticalConfig());me.callParent(arguments);me.getAllFieldsContainer().on(listeners);me.getLeftAxisContainer().on(listeners);me.getTopAxisContainer().on(listeners);me.getAggregateContainer().on(listeners);me.pivotListeners=me.getPivot().getMatrix().on({done:me.onPivotDone,scope:me,destroyable:true});me.task=new Ext.util.DelayedTask(me.reconfigurePivot,me);},destroy:function(){var me=this,toDestroy=['relayers','pivotListeners','menu','dragZone','dropZone'],length=toDestroy.length,i;for(i=0;i<length;i++){Ext.destroy(me[toDestroy[i]]);me[toDestroy[i]]=null;}
me.task.cancel();me.task=me.lastFocusedField=null;me.callParent();},enable:function(){var me=this;if(me.rendered){me.dragZone.enable();me.dropZone.enable();me.initPivotFields();}
me.show();},disable:function(){var me=this;if(me.rendered){me.dragZone.disable();me.dropZone.disable();}
me.hide();},afterRender:function(){var me=this,el=me.getEl();me.callParent(arguments);me.mon(el,{scope:me,delegate:'.'+Ext.baseCSSPrefix+'pivot-grid-config-column',click:me.handleEvent,keypress:me.handleEvent});me.dragZone=new Ext.pivot.plugin.configurator.DragZone(me);me.dropZone=new Ext.pivot.plugin.configurator.DropZone(me);el.unselectable();},handleEvent:function(e){var me=this,isKeyEvent=me.keyEventRe.test(e.type),pivot=me.getPivot(),fly,cmp,menuCfg,options;if((isKeyEvent&&e.getKey()===e.SPACE)||(e.button===0)){fly=Ext.fly(e.target);if(fly&&(cmp=fly.component)){e.stopEvent();cmp.focus();Ext.destroy(me.menu);menuCfg=me.getMenuConfig(cmp);if(menuCfg){me.menu=new Ext.menu.Menu(menuCfg);options={menu:me.menu,field:cmp.getField(),container:cmp.getFieldType()};if(pivot.fireEvent('beforeshowconfigfieldmenu',me,options)!==false){me.menu.showBy(cmp);me.menu.focus();pivot.fireEvent('showconfigfieldmenu',me,options);}else{Ext.destroy(me.menu);}}}}},getPanelConfigHeader:function(config){return Ext.apply({xtype:'header',baseCls:Ext.baseCSSPrefix+'panel-header',cls:this.headerContainerCls,border:1,width:100},config||{});},getHorizontalConfig:function(){var me=this,tools=[{type:'gear',handler:me.showSettings,scope:me}];if(me.collapsible){tools.push({type:me.dock=='top'?'up':'down',handler:me.collapseMe,scope:me});}
return{minHeight:me.defaultMinHeight,headerPosition:me.dock=='top'?'bottom':'top',collapseDirection:me.dock,defaults:{xtype:'container',layout:{type:'hbox',align:'stretchmax'},minHeight:me.defaultMinHeight/3},items:[{items:[me.getPanelConfigHeader({title:me.panelAllFieldsTitle,tools:tools}),{itemId:'fieldsCt',xtype:'pivotconfigcontainer',fieldType:'all',dragDropText:me.panelAllFieldsText,position:me.dock,flex:1}]},{items:[me.getPanelConfigHeader({title:me.panelAggFieldsTitle}),{itemId:'fieldsAggCt',xtype:'pivotconfigcontainer',fieldType:'aggregate',dragDropText:me.panelAggFieldsText,position:me.dock,flex:1}]},{defaults:{xtype:'pivotconfigcontainer',minHeight:me.defaultMinHeight/3,position:me.dock},items:[me.getPanelConfigHeader({title:me.panelLeftFieldsTitle}),{itemId:'fieldsLeftCt',fieldType:'leftAxis',dragDropText:me.panelLeftFieldsText,flex:1},me.getPanelConfigHeader({title:me.panelTopFieldsTitle}),{itemId:'fieldsTopCt',fieldType:'topAxis',dragDropText:me.panelTopFieldsText,flex:1}]}]};},getVerticalConfig:function(){var me=this,tools=[{type:'gear',handler:me.showSettings,scope:me}];if(me.collapsible){tools.push({type:me.dock,handler:me.collapseMe,scope:me});}
return{layout:{type:'hbox',align:'stretch'},width:me.defaultMinWidth,minWidth:me.defaultMinWidth,headerPosition:me.dock=='right'?'left':'right',collapseDirection:me.dock,defaults:{flex:1},items:[{itemId:'fieldsCt',xtype:'pivotconfigcontainer',position:me.dock,title:me.panelAllFieldsTitle,fieldType:'all',dragDropText:me.panelAllFieldsText,autoScroll:true,header:{cls:me.headerContainerCls},tools:tools},{xtype:'container',defaults:{xtype:'pivotconfigcontainer',flex:1,autoScroll:true,position:me.dock,header:{cls:me.headerContainerCls}},layout:{type:'vbox',align:'stretch'},items:[{itemId:'fieldsAggCt',title:me.panelAggFieldsTitle,fieldType:'aggregate',dragDropText:me.panelAggFieldsText},{itemId:'fieldsLeftCt',title:me.panelLeftFieldsTitle,fieldType:'leftAxis',dragDropText:me.panelLeftFieldsText},{itemId:'fieldsTopCt',title:me.panelTopFieldsTitle,fieldType:'topAxis',dragDropText:me.panelTopFieldsText}]}]};},getAllFieldsContainer:function(){return this.down('#fieldsCt');},getAllFieldsHeader:function(){var dock=this.dock,ct=this.getAllFieldsContainer();return(dock==='top'||dock==='bottom')?ct.prev():ct.getHeader();},setAllFieldsContainerVisible:function(visible){this.getAllFieldsContainer().setVisible(visible);this.getAllFieldsHeader().setVisible(visible);},getLeftAxisContainer:function(){return this.down('#fieldsLeftCt');},getLeftAxisHeader:function(){var dock=this.dock,ct=this.getLeftAxisContainer();return(dock==='top'||dock==='bottom')?ct.prev():ct.getHeader();},setLeftAxisContainerVisible:function(visible){this.getLeftAxisContainer().setVisible(visible);this.getLeftAxisHeader().setVisible(visible);},getTopAxisContainer:function(){return this.down('#fieldsTopCt');},getTopAxisHeader:function(){var dock=this.dock,ct=this.getTopAxisContainer();return(dock==='top'||dock==='bottom')?ct.prev():ct.getHeader();},setTopAxisContainerVisible:function(visible){this.getTopAxisContainer().setVisible(visible);this.getTopAxisHeader().setVisible(visible);},getAggregateContainer:function(){return this.down('#fieldsAggCt');},getAggregateHeader:function(){var dock=this.dock,ct=this.getAggregateContainer();return(dock==='top'||dock==='bottom')?ct.prev():ct.getHeader();},setAggregateContainerVisible:function(visible){this.getAggregateContainer().setVisible(visible);this.getAggregateHeader().setVisible(visible);},applyChanges:function(field){var me=this;if(me.disabled){return;}
if(field){me.lastFocusedField=field;}
me.task.delay(me.getRefreshDelay());},collapseMe:function(){this.collapse(this.dock);},showSettings:function(){var pivot=this.getPivot(),win=new Ext.pivot.plugin.configurator.window.Settings({listeners:{applysettings:Ext.bind(this.applyPivotSettings,this)}}),settings=pivot.getMatrix().serialize();delete(settings.leftAxis);delete(settings.topAxis);delete(settings.aggregate);if(pivot.fireEvent('beforeshowpivotsettings',this,{container:win,settings:settings})!==false){win.loadSettings(settings);win.show();pivot.fireEvent('showpivotsettings',this,{container:win,settings:settings});}else{Ext.destroy(win);}},applyPivotSettings:function(win,settings){var pivot=this.getPivot();if(pivot.fireEvent('beforeapplypivotsettings',this,{container:win,settings:settings})!==false){pivot.fireEvent('applypivotsettings',this,{container:win,settings:settings});pivot.getMatrix().reconfigure(settings);}else{return false;}},getFieldsFromContainer:function(ct,justConfigs){var fields=[],len=ct.items.getCount(),i,item;for(i=0;i<len;i++){item=ct.items.getAt(i);fields.push(justConfigs===true?item.getField().getConfiguration():item.getField());}
return fields;},initPivotFields:function(){var me=this,matrix=me.getPivot().getMatrix(),fieldsAllCt=me.getAllFieldsContainer(),fieldsLeftCt=me.getLeftAxisContainer(),fieldsTopCt=me.getTopAxisContainer(),fieldsAggCt=me.getAggregateContainer(),fieldsTop,fieldsLeft,fieldsAgg,fields;fields=me.getFields().clone();Ext.suspendLayouts();fieldsAllCt.removeAll();fieldsTopCt.removeAll();fieldsLeftCt.removeAll();fieldsAggCt.removeAll();fieldsTop=me.getConfigFields(matrix.topAxis.dimensions.getRange());fieldsLeft=me.getConfigFields(matrix.leftAxis.dimensions.getRange());fieldsAgg=me.getConfigFields(matrix.aggregate.getRange());me.addFieldsToConfigurator(fields.getRange(),fieldsAllCt);me.addFieldsToConfigurator(fieldsTop,fieldsTopCt);me.addFieldsToConfigurator(fieldsLeft,fieldsLeftCt);me.addFieldsToConfigurator(fieldsAgg,fieldsAggCt);Ext.resumeLayouts(true);},addFieldsToConfigurator:function(fields,fieldsCt){var len=fields.length,i;for(i=0;i<len;i++){fieldsCt.addField(fields[i],-1);}},getConfigFields:function(items){var len=items.length,fields=this.getFields(),list=[],i,field,item;for(i=0;i<len;i++){item=items[i];field=fields.byDataIndex.get(item.dataIndex);if(field){field=field.clone();field.setConfig(item.getInitialConfig());list.push(field);}}
return list;},getMenuConfig:function(field){var me=this,fieldType=field.getFieldType(),items=[],menu=field.getMenuConfig()||{},container=field.up('pivotconfigcontainer'),siblings=container.items.getCount(),fieldIdx=container.items.indexOf(field),dimension=field.getField(),settings=dimension.getSettings(),fieldsLeftCt=me.getLeftAxisContainer(),fieldsTopCt=me.getTopAxisContainer(),fieldsAggCt=me.getAggregateContainer(),titleLeft=me.getLeftAxisHeader().getTitle().getText(),titleTop=me.getTopAxisHeader().getTitle().getText(),titleAgg=me.getAggregateHeader().getTitle().getText();menu.items=menu.items||[];if(fieldType=='all'){items.push({text:Ext.String.format(me.addToText,titleLeft),disabled:!settings.isAllowed(fieldsLeftCt),handler:Ext.bind(me.dragDropField,me,[fieldsLeftCt,field,'after']),hidden:fieldsLeftCt.isHidden()},{text:Ext.String.format(me.addToText,titleTop),disabled:!settings.isAllowed(fieldsTopCt),handler:Ext.bind(me.dragDropField,me,[fieldsTopCt,field,'after']),hidden:fieldsTopCt.isHidden()},{text:Ext.String.format(me.addToText,titleAgg),disabled:!settings.isAllowed(fieldsAggCt),handler:Ext.bind(me.dragDropField,me,[fieldsAggCt,field,'after']),hidden:fieldsAggCt.isHidden()});}else{items.push({text:me.moveUpText,disabled:(siblings==1||fieldIdx==0),handler:Ext.bind(me.dragDropField,me,[field.previousSibling(),field,'before'])},{text:me.moveDownText,disabled:(siblings==1||fieldIdx==siblings-1),handler:Ext.bind(me.dragDropField,me,[field.nextSibling(),field,'after'])},{text:me.moveBeginText,disabled:(siblings==1||fieldIdx==0),handler:Ext.bind(me.dragDropField,me,[container.items.first(),field,'before'])},{text:me.moveEndText,disabled:(siblings==1||fieldIdx==siblings-1),handler:Ext.bind(me.dragDropField,me,[container.items.last(),field,'after'])},{xtype:'menuseparator'},{text:Ext.String.format(me.moveToText,me.panelLeftFieldsTitle),disabled:(fieldType=='leftAxis'||!settings.isAllowed(fieldsLeftCt)||settings.isFixed(container)),handler:Ext.bind(me.dragDropField,me,[fieldsLeftCt,field,'after'])},{text:Ext.String.format(me.moveToText,me.panelTopFieldsTitle),disabled:(fieldType=='topAxis'||!settings.isAllowed(fieldsTopCt)||settings.isFixed(container)),handler:Ext.bind(me.dragDropField,me,[fieldsTopCt,field,'after'])},{text:Ext.String.format(me.moveToText,me.panelAggFieldsTitle),disabled:(fieldType=='aggregate'||!settings.isAllowed(fieldsAggCt)||settings.isFixed(container)),handler:Ext.bind(me.dragDropField,me,[fieldsAggCt,field,'after'])},{xtype:'menuseparator'},{text:me.removeFieldText,disabled:settings.isFixed(container),handler:Ext.bind(me.dragDropField,me,[me.getAllFieldsContainer(),field,'after'])});}
if(fieldType=='aggregate'){items.push({xtype:'menuseparator'},{text:me.fieldSettingsText,handler:Ext.bind(me.openFieldSettings,me,[field])});}
if(menu.items.length){items.push({xtype:'menuseparator'});}
Ext.Array.insert(menu.items,0,items);return Ext.apply({ownerCmp:me,floating:true},menu);},openFieldSettings:function(field){var pivot=this.getPivot(),win=new Ext.pivot.plugin.configurator.window.FieldSettings({field:field.getField(),listeners:{applysettings:Ext.bind(this.applyFieldSettings,this,[field],0)}}),settings=field.getField().getConfig();if(pivot.fireEvent('beforeshowconfigfieldsettings',this,{container:win,settings:settings})!==false){win.loadSettings(settings);win.show();pivot.fireEvent('showconfigfieldsettings',this,{container:win,settings:settings});}else{Ext.destroy(win);}},applyFieldSettings:function(field,win,settings){var pivot=this.getPivot(),fieldCfg=field.getField();if(pivot.fireEvent('beforeapplyconfigfieldsettings',this,{container:win,settings:settings})!==false){fieldCfg.setConfig(settings||{});if(field.rendered){field.textCol.setHtml(fieldCfg.getFieldText());field.textCol.dom.setAttribute('data-qtip',fieldCfg.getFieldText());}
pivot.fireEvent('applyconfigfieldsettings',this,{container:win,settings:settings});this.applyChanges(field);}else{return false;}},dragDropField:function(toTarget,column,pos){var me=this,pivot=me.getPivot(),field=column.getField(),fromContainer=column.ownerCt,toContainer=toTarget.isConfiguratorContainer?toTarget:toTarget.ownerCt,toField=toTarget.isConfiguratorField?toTarget:toTarget.items.last(),fromFieldType=fromContainer.getFieldType(),toFieldType=toContainer.getFieldType(),topAxisCt=me.getTopAxisContainer(),leftAxisCt=me.getLeftAxisContainer(),newPos,item,toFocus;if(pivot.fireEvent('beforemoveconfigfield',this,{fromContainer:fromContainer,toContainer:toContainer,field:field})!==false){if(fromContainer!==toContainer){if(toField){newPos=toContainer.items.findIndex('id',toField.id);newPos=(pos==='before')?newPos:newPos+1;}else{newPos=-1;}
if(toFieldType==='all'){toField.focus();fromContainer.removeField(column);}else if(toFieldType==='aggregate'){toFocus=toContainer.addField(field.clone(),newPos,true);if(fromFieldType!=='all'){fromContainer.remove(column);}}else{item=me.findFieldInContainer(field,toContainer);if(item){return;}
if(toFieldType==='leftAxis'){item=me.findFieldInContainer(field,topAxisCt);}else{item=me.findFieldInContainer(field,leftAxisCt);}
if(item){toContainer.add(item);return me.applyChanges(item);}else{if(fromFieldType==='aggregate'){fromContainer.remove(column);}
toFocus=toContainer.addField(field.clone(),newPos,true);}}}else{toContainer.moveField(column.id,toField.id,pos);}
if(toFocus){toFocus.focus();toFocus.el.resumeFocusEvents();}}},isAllowed:function(toTarget,column){var allowed=true,field=column.getField(),fromContainer=column.ownerCt,toContainer=toTarget.isConfiguratorContainer?toTarget:toTarget.ownerCt,fromFieldType=fromContainer.getFieldType(),toFieldType=toContainer.getFieldType();if(fromFieldType==='aggregate'&&(toFieldType==='leftAxis'||toFieldType==='topAxis')){allowed=!this.findFieldInContainer(field,toContainer);}
return allowed;},findFieldInContainer:function(field,container){var length=container.items.getCount(),i,item;for(i=0;i<length;i++){item=container.items.getAt(i);if(item.getField().getDataIndex()==field.getDataIndex()){return item;}}},onPivotDone:function(){var me=this,field=me.lastFocusedField;if(me.internalReconfiguration){me.internalReconfiguration=false;if(field&&field.isConfiguratorContainer){field=field.items.first();}
if(!field){field=me.getAllFieldsContainer().items.first();}
if(field){field.focus();}else{me.getPivot().focus();}}else{me.initPivotFields();}},reconfigurePivot:function(){var me=this,pivot=me.getPivot(),obj={topAxis:me.getFieldsFromContainer(me.getTopAxisContainer(),true),leftAxis:me.getFieldsFromContainer(me.getLeftAxisContainer(),true),aggregate:me.getFieldsFromContainer(me.getAggregateContainer(),true)};me.internalReconfiguration=true;if(pivot.fireEvent('beforeconfigchange',me,obj)!==false){pivot.getMatrix().reconfigure(obj);pivot.fireEvent('configchange',me,obj);}},placeholderCollapse:function(direction,animate){var me=this,ownerCt=me.ownerCt,collapseDir=direction||me.collapseDirection,floatCls=Ext.panel.Panel.floatCls,placeholder=me.getPlaceholder(collapseDir),slideInDirection;me.isCollapsingOrExpanding=1;me.setHiddenState(true);me.collapsed=collapseDir;if(placeholder.rendered){if(placeholder.el.dom.parentNode!==me.el.dom.parentNode){me.el.dom.parentNode.insertBefore(placeholder.el.dom,me.el.dom);}
placeholder.hidden=false;placeholder.setHiddenState(false);placeholder.el.show();ownerCt.updateLayout();}else{if(me.dock){placeholder.dock=me.dock;ownerCt.addDocked(placeholder);}else{ownerCt.insert(ownerCt.items.indexOf(me),placeholder);}}
if(me.rendered){if(Ext.ComponentManager.getActiveComponent()===me.collapseTool){me.focusPlaceholderExpandTool=true;}
me.el.setVisibilityMode(me.placeholderCollapseHideMode);if(animate){me.el.addCls(floatCls);placeholder.el.hide();slideInDirection=me.convertCollapseDir(collapseDir);me.el.slideOut(slideInDirection,{preserveScroll:true,duration:Ext.Number.from(animate,Ext.fx.Anim.prototype.duration),listeners:{scope:me,afteranimate:function(){var me=this;me.el.removeCls(floatCls);me.placeholder.el.show().setStyle('display','none').slideIn(slideInDirection,{easing:'linear',duration:100,listeners:{afteranimate:me.doPlaceholderCollapse,scope:me}});}}});}else{me.el.hide();me.doPlaceholderCollapse();}}else{me.isCollapsingOrExpanding=0;if(!me.preventCollapseFire){me.fireEvent('collapse',me);}}
return me;},placeholderExpand:function(animate){var me=this,collapseDir=me.collapsed,expandTool=me.placeholder.expandTool,floatCls=Ext.panel.Panel.floatCls,center=me.ownerLayout?me.ownerLayout.centerRegion:null,finalPos,floatedPos;if(Ext.Component.layoutSuspendCount){animate=false;}
if(me.floatedFromCollapse){floatedPos=me.getPosition(true);me.slideOutFloatedPanelBegin();me.slideOutFloatedPanelEnd();me.floated=false;}
if(Ext.ComponentManager.getActiveComponent()===expandTool){me.focusHeaderCollapseTool=true;expandTool._ariaRole=expandTool.ariaEl.dom.getAttribute('role');expandTool._ariaLabel=expandTool.ariaEl.dom.getAttribute('aria-label');expandTool.ariaEl.dom.setAttribute('role','presentation');expandTool.ariaEl.dom.removeAttribute('aria-label');}
if(animate){Ext.suspendLayouts();me.placeholder.hide();me.el.show();me.collapsed=false;me.setHiddenState(false);if(center&&!floatedPos){center.hidden=true;}
Ext.resumeLayouts(true);if(center){center.hidden=false;}
me.el.addCls(floatCls);me.isCollapsingOrExpanding=2;if(floatedPos){finalPos=me.getXY();me.setLocalXY(floatedPos[0],floatedPos[1]);me.setXY([finalPos[0],finalPos[1]],{duration:Ext.Number.from(animate,Ext.fx.Anim.prototype.duration),listeners:{scope:me,afteranimate:function(){var me=this;me.el.removeCls(floatCls);me.isCollapsingOrExpanding=0;me.fireEvent('expand',me);}}});}else
{me.el.hide();me.placeholder.el.show();me.placeholder.hidden=false;me.setHiddenState(false);me.el.slideIn(me.convertCollapseDir(collapseDir),{preserveScroll:true,duration:Ext.Number.from(animate,Ext.fx.Anim.prototype.duration),listeners:{afteranimate:me.doPlaceholderExpand,scope:me}});}}else{me.floated=me.collapsed=false;me.doPlaceholderExpand(true);}
return me;}});Ext.define('Ext.pivot.plugin.Configurator',{alternateClassName:['Mz.pivot.plugin.Configurator'],extend:'Ext.plugin.Abstract',requires:['Ext.util.DelayedTask','Ext.menu.Menu','Ext.menu.CheckItem','Ext.util.Collection','Ext.pivot.plugin.configurator.Panel'],alias:['plugin.pivotconfigurator','plugin.mzconfigurator'],lockableScope:'top',config:{fields:[],refreshDelay:300,dock:'right',collapsible:true,configPanel:null},init:function(cmp){var me=this;if(!cmp.isPivotComponent){Ext.raise('This plugin is only compatible with pivot components');}
cmp.showConfigurator=Ext.bind(me.showConfigurator,me);cmp.hideConfigurator=Ext.bind(me.hideConfigurator,me);cmp.on({afterrender:me.onAfterPivotRendered,single:true,scope:me});me.callParent([cmp]);},destroy:function(){var me=this,cmp=me.getCmp();cmp.showConfigurator=cmp.hideConfigurator=null;me.setConfigPanel(Ext.destroy(me.getConfigPanel()));me.setFields(null);me.callParent();},enable:function(){this.disabled=false;this.showConfigurator();},disable:function(){this.disabled=true;this.hideConfigurator();},showConfigurator:function(){this.renderConfigPanel();},hideConfigurator:function(){var cfgPanel=this.getConfigPanel();if(cfgPanel){cfgPanel.disable();this.getCmp().fireEvent('hideconfigpanel',cfgPanel);}},onAfterPivotRendered:function(){var me=this,fields=me.getFields(),matrix=me.getCmp().getMatrix(),fieldsToUpdate=[],duplicates={},noFields=false,store,newFields,field,name,length,i,dim,config;if(fields.length===0&&matrix instanceof Ext.pivot.matrix.Local){noFields=true;store=matrix.store;newFields=store?store.model.getFields():[];length=newFields.length;for(i=0;i<length;i++){name=newFields[i].getName();if(!fields.byDataIndex.get(name)){fields.add({header:Ext.String.capitalize(name),dataIndex:name});}}}
newFields=Ext.Array.merge(matrix.leftAxis.dimensions.getRange(),matrix.topAxis.dimensions.getRange(),matrix.aggregate.getRange());length=newFields.length;for(i=0;i<length;i++){dim=newFields[i].getConfig();delete(dim.matrix);delete(dim.values);delete(dim.id);field=fields.byDataIndex.get(dim.dataIndex);if(!field){fields.add(dim);}else if(noFields){if(!duplicates[dim.dataIndex]){duplicates[dim.dataIndex]=0;}
delete(dim.header);duplicates[dim.dataIndex]++;fieldsToUpdate.push(dim);}}
length=fieldsToUpdate.length;for(i=0;i<length;i++){dim=fieldsToUpdate[i];if(duplicates[dim.dataIndex]===1){field=fields.byDataIndex.get(dim.dataIndex);if(field){config=field.getConfig();Ext.merge(config,dim);field.setConfig(config);}}}
me.isReady=true;if(me.disabled===true){me.disable();}else{me.enable();}},updateDock:function(value){this.renderConfigPanel(value);},updateCollapsible:function(value){this.renderConfigPanel(value);},getFields:function(){var ret=this.fields;if(!ret){ret=new Ext.util.Collection({extraKeys:{byDataIndex:'dataIndex'},decoder:function(field){return(field&&field.isField)?field:new Ext.pivot.plugin.configurator.Field(field||{});}});this.setFields(ret);}
return ret;},applyFields:function(fields,fieldsCollection){if(fields==null||(fields&&fields.isCollection)){return fields;}
if(fields){if(!fieldsCollection){fieldsCollection=this.getFields();}
fieldsCollection.splice(0,fieldsCollection.length,fields);}
return fieldsCollection;},renderConfigPanel:function(position){var me=this,cmp=me.getCmp(),cfgPanel=me.getConfigPanel(),exists=!Ext.isEmpty(cfgPanel);if(!cmp||!me.isReady||me.disabled){return;}
Ext.destroy(cfgPanel);cfgPanel=cmp.addDocked({xtype:'pivotconfigpanel',dock:position||me.getDock(),refreshDelay:me.getRefreshDelay(),pivot:me.getCmp(),fields:me.getFields(),listeners:{afterrender:'onRenderConfigPanel',single:true,scope:me}})[0];me.setConfigPanel(cfgPanel);if(exists){cfgPanel.enable();}},onRenderConfigPanel:function(panel){this.getCmp().fireEvent('showconfigpanel',panel);}});Ext.define('Ext.pivot.plugin.DrillDown',{alternateClassName:['Mz.pivot.plugin.DrillDown'],alias:['plugin.pivotdrilldown','plugin.mzdrilldown'],extend:'Ext.plugin.Abstract',requires:['Ext.pivot.Grid','Ext.window.Window','Ext.data.proxy.Memory','Ext.data.Store','Ext.toolbar.Paging'],lockableScope:'top',config:{columns:null,width:400,height:300,remoteStore:null,grid:null,view:null},textWindow:'Drill down window',init:function(grid){if(!grid.isPivotGrid){Ext.raise('This plugin is only compatible with Ext.pivot.Grid');}
this.setGrid(grid);return this.callParent([grid]);},destroy:function(){this.setConfig({grid:null,view:null});this.callParent();},updateGrid:function(grid){Ext.destroy(this.gridListeners);if(grid){this.gridListeners=grid.on({pivotitemcelldblclick:'showPanel',pivotgroupcelldblclick:'showPanel',pivottotalcelldblclick:'showPanel',scope:this,destroyable:true});}},updateView:function(view,oldView){Ext.destroy(oldView);},showPanel:function(params,e,eOpts){var me=this,grid=me.getGrid(),matrix=grid.getMatrix(),columns=Ext.Array.from(me.getColumns()||[]),result,fields,store,filters,view,i,len,value;if(me.disabled){return;}
result=matrix.results.get(params.leftKey,params.topKey);if(!result){return;}
switch(matrix.type){case'local':fields=matrix.store.model.getFields();store=new Ext.data.Store({pageSize:25,remoteSort:true,fields:Ext.clone(fields),proxy:{type:'memory',reader:{type:'array'},enablePaging:true}});if(columns.length===0){len=fields.length;for(i=0;i<len;i++){value=fields[i];columns.push({text:Ext.String.capitalize(value.name),dataIndex:value.name});}};store.getProxy().data=result.records;store.load();break;case'remote':store=Ext.getStore(me.getRemoteStore());if(store){store.setRemoteFilter(true);};if(columns.length===0){Ext.raise('No columns defined for the drill down grid!');};filters=Ext.Array.merge(me.getFiltersFromParams(result.getLeftAxisItem()?result.getLeftAxisItem().data:{}),me.getFiltersFromParams(result.getTopAxisItem()?result.getTopAxisItem().data:{}));store.clearFilter(true);if(filters.length>0){store.addFilter(filters);}else{store.load();};break;default:return;}
view=me.createPanel(store,columns);view.show();me.setView(view);grid.fireEvent('showdrilldownpanel',view);},createPanel:function(store,columns){var me=this;return new Ext.window.Window({title:me.textWindow,width:me.getWidth(),height:me.getHeight(),layout:'fit',modal:true,closeAction:'hide',items:[{xtype:'grid',border:false,viewConfig:{loadMask:false},columns:columns,store:store,dockedItems:[{xtype:'pagingtoolbar',store:store,dock:'bottom',displayInfo:true}]}],listeners:{close:'onClosePanel',scope:me}});},onClosePanel:function(){var view=this.getView();this.getGrid().fireEvent('hidedrilldownpanel',view);this.setView(null);},getFiltersFromParams:function(obj){var filters=[],i,len,keys;if(Ext.isObject(obj)){keys=Ext.Object.getKeys(obj);len=keys.length;for(i=0;i<len;i++){filters.push({property:keys[i],exactMatch:true,value:obj[keys[i]]});}}
return filters;}});Ext.define('Ext.pivot.plugin.RangeEditor',{alternateClassName:['Mz.pivot.plugin.RangeEditor'],alias:['plugin.pivotrangeeditor','plugin.mzrangeeditor'],extend:'Ext.plugin.Abstract',requires:['Ext.pivot.Grid','Ext.pivot.update.Increment','Ext.pivot.update.Overwrite','Ext.pivot.update.Percentage','Ext.pivot.update.Uniform','Ext.window.Window','Ext.form.field.Hidden','Ext.form.field.Text','Ext.form.field.Number','Ext.form.field.ComboBox','Ext.form.field.Display','Ext.form.Panel','Ext.button.Button','Ext.layout.container.Fit','Ext.data.ArrayStore'],width:null,height:null,textWindowTitle:'Range editor',textFieldValue:'Value',textFieldEdit:'Field',textFieldType:'Type',textButtonOk:'Ok',textButtonCancel:'Cancel',onBeforeRecordsUpdate:Ext.emptyFn,onAfterRecordsUpdate:Ext.emptyFn,scope:null,updaters:[['percentage','Percentage'],['increment','Increment'],['overwrite','Overwrite'],['uniform','Uniform']],defaultUpdater:'uniform',lockableScope:'top',config:{grid:null,view:null},init:function(grid){if(!grid.isPivotGrid){Ext.raise('This plugin is only compatible with Ext.pivot.Grid');}
this.setGrid(grid);return this.callParent([grid]);},destroy:function(){this.setConfig({grid:null,view:null});this.cleanUp();this.callParent();},updateGrid:function(grid){Ext.destroy(this.gridListeners);if(grid){this.gridListeners=grid.on({pivotitemcelldblclick:'showPanel',pivotgroupcelldblclick:'showPanel',pivottotalcelldblclick:'showPanel',scope:this,destroyable:true});}},updateView:function(view,oldView){Ext.destroy(oldView);},showPanel:function(params,e,eOpts){var me=this,grid=me.getGrid(),matrix=grid.getMatrix(),dataIndex,result,col,view;if(me.disabled){return;}
result=matrix.results.get(params.leftKey,params.topKey);if(!result){return;}
view=me.createPanel();me.currentCol=col=params.column;me.currentRecords=result.records||[];dataIndex=col.dimension.getId();me.currentValue=result.getValue(dataIndex);view.down('form').getForm().setValues({leftKey:params.leftKey,topKey:params.topKey,dataIndex:col.dimension.dataIndex,field:col.dimension.header||col.text||col.dimension.dataIndex,value:result.getValue(dataIndex),type:me.defaultUpdater});view.show();me.setView(view);grid.fireEvent('showrangeeditorpanel',view);},createPanel:function(){var me=this;return new Ext.window.Window({title:me.textWindowTitle,width:me.width,height:me.height,layout:'fit',modal:true,closeAction:'hide',items:[{xtype:'form',padding:5,border:false,defaults:{anchor:'100%'},items:[{fieldLabel:me.textFieldEdit,xtype:'displayfield',name:'field'},{fieldLabel:me.textFieldType,xtype:'combo',name:'type',queryMode:'local',valueField:'id',displayField:'text',editable:false,store:me.updaters},{fieldLabel:me.textFieldValue,xtype:'numberfield',name:'value'},{xtype:'hidden',name:'leftKey'},{xtype:'hidden',name:'topKey'},{xtype:'hidden',name:'dataIndex'}]}],buttons:[{text:me.textButtonOk,handler:me.updateRecords,scope:me},{text:me.textButtonCancel,handler:me.closePanel,scope:me}],listeners:{close:'onClosePanel',scope:me}});},closePanel:function(){this.getView().close();},onClosePanel:function(){var view=this.getView();this.getGrid().fireEvent('hiderangeeditorpanel',view);this.setView(null);},updateRecords:function(){var me=this,view=me.getView(),values=view.down('form').getValues(),fn=Ext.bind(me.cleanUp,me),updater;values.matrix=me.getGrid().getMatrix();updater=Ext.Factory.pivotupdate(values);updater.on({beforeupdate:me.onBeforeUpdate,update:me.onUpdate,scope:me});updater.update().then(fn,fn);},cleanUp:function(){this.currentCol=this.currentRecords=this.currentValue=null;},onBeforeUpdate:function(updater){var me=this,pivot=me.getGrid();if(Ext.callback(me.onBeforeRecordsUpdate,me.scope||'self.controller',[pivot,me.currentCol,me.currentRecords,updater.getValue(),me.currentValue],0,pivot)===false){return false;}
if(pivot.fireEvent('pivotbeforeupdate',updater)===false){return false;}
me.getView().getEl().mask();},onUpdate:function(updater){var me=this,pivot=me.getGrid(),view=me.getView();Ext.callback(me.onAfterRecordsUpdate,me.scope||'self.controller',[pivot,me.currentCol,me.currentRecords,updater.getValue(),me.currentValue],0,pivot);pivot.fireEvent('pivotupdate',updater);Ext.destroy(updater);view.getEl().unmask();view.close();}});